<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CentOS 7 升级 Linux 内核</title>
    <url>/2022/01/08/CentOS-7-%E5%8D%87%E7%BA%A7-Linux-%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<h1 id="关于-Linux-内核"><a href="#关于-Linux-内核" class="headerlink" title="关于 Linux 内核"></a>关于 Linux 内核</h1><p>Linux 内核分两种：官方内核（通常是内核开发人员用）和各大 Linux 发行版内核（一般用户常用）。</p>
<span id="more"></span>

<h2 id="官方内核"><a href="#官方内核" class="headerlink" title="官方内核"></a>官方内核</h2><p>在使用 Docker 时，发现其对 Linux 内核版本的最低要求是 3.10（这也刚好是 CentOS 7.2 的内核版本），但是在这个版本上有部分功能无法实现。目前 Linux 内核已经发布到 4.X（可以随时在 <a href="https://www.kernel.org/">Linux内核官网</a> 查看当前版本），为了使用最新版本的内核，只好在安装 CentOS 7 后对内核进行升级。</p>
<p>当然，内核也不能选最新的，防止有尚未发现的 BUG。而且为了减少以后停止维护带来的麻烦，最好安装长期支持版本。各个版本的支持时间在 <a href="https://www.kernel.org/category/releases.html">Linux内核档案</a> 查看。每个版本可能有四种类型，概述如下：</p>
<ul>
<li>Prepatch：Prepatch 或 “RC” 内核是主要的内核预发行版本，主要针对内核开发人员和 Linux 爱好者。必须从源代码进行编译，并且通常包含必须在可以放入稳定版本之前进行测试的新功能。Prepatch 内核由 Linus Torvalds 维护和发布。</li>
<li>Mainline：Mainline 主线树由 Linus Torvalds 维护。这个版本的内核会引入所有新功能。新的 Mainline 内核每 2-3 个月发布一次。</li>
<li>Stable：每个主线内核被发布后，即被认为是“stable”。任何对 stable 内核的 BUG 修复都会从 Mainline 主线树中回溯并由指定的 stable 内核维护人员使用。 在下一个主线内核可用之前，通常只有几个 BUG 修复内核版本 - 除非它被指定为“longterm maintenance kernel（长期维护内核）”。stable 内核更新按需发布，通常每月 2-3 次。</li>
<li>Longterm：通常会提供几个“longterm maintenance”内核版本，用于修复旧版内核的 BUG。这些内核只会修复重大 BUG，并且不会频繁发布版本。</li>
</ul>
<h3 id="Longterm-release-的内核"><a href="#Longterm-release-的内核" class="headerlink" title="Longterm release 的内核"></a>Longterm release 的内核</h3><table>
<thead>
<tr>
<th align="left">版本</th>
<th align="left">维护人</th>
<th align="left">发布日期</th>
<th align="left">项目生命周期</th>
</tr>
</thead>
<tbody><tr>
<td align="left">4.14</td>
<td align="left">Greg Kroah-Hartman</td>
<td align="left">2017-11-12</td>
<td align="left">Jan, 2020</td>
</tr>
<tr>
<td align="left">4.9</td>
<td align="left">Greg Kroah-Hartman</td>
<td align="left">2016-12-11</td>
<td align="left">Jan, 2019</td>
</tr>
<tr>
<td align="left">4.4</td>
<td align="left">Greg Kroah-Hartman</td>
<td align="left">2016-01-10</td>
<td align="left">Feb, 2022</td>
</tr>
<tr>
<td align="left">4.1</td>
<td align="left">Sasha Levin</td>
<td align="left">2015-06-21</td>
<td align="left">May, 2018</td>
</tr>
<tr>
<td align="left">3.16</td>
<td align="left">Ben Hutchings</td>
<td align="left">2014-08-03</td>
<td align="left">Apr, 2020</td>
</tr>
<tr>
<td align="left">3.2</td>
<td align="left">Ben Hutchings</td>
<td align="left">2012-01-04</td>
<td align="left">May, 2018</td>
</tr>
</tbody></table>
<h2 id="各大-Linux-发行版内核"><a href="#各大-Linux-发行版内核" class="headerlink" title="各大 Linux 发行版内核"></a>各大 Linux 发行版内核</h2><p>一般来说，只有从 <code>kernel.org</code> 下载并编译安装的内核才是官方内核。<br>大多数 Linux 发行版提供自行维护的内核，可以通过 yum 或 rpm 等包管理系统升级。这些内核可能不再和 Linux 内核官方开发维护人员有关系了。<strong>通过这个由各大 Linux 发行版支持的仓库升级内核，通常来说更简单可靠，但是可选择的内核版本也更少。</strong></p>
<p>使用 <code>uname -r</code> 区分你用的是官方内核还是 Linux 发行版内核，横线后面有任何东西都表示这不是官方内核：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.26.2.el7.x86_64</span><br></pre></td></tr></table></figure>

<h1 id="查看当前的内核版本"><a href="#查看当前的内核版本" class="headerlink" title="查看当前的内核版本"></a>查看当前的内核版本</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Linux 只表示内核。各大 Linux 发行版（RedHat、Ubuntu、CentOS 等）在内核基础上集成了其他的一系列软件，按照各自的版本规则发布。例如 CentOS 7.2 中，通过 <code>uname -r</code> 查看内核版本时，会看到 <code>3.10.0-514.26.2.el7.x86_64</code>，表示对应的 Linux 内核版本是 3.10。</p>
<h2 id="常用的查看内核信息的命令"><a href="#常用的查看内核信息的命令" class="headerlink" title="常用的查看内核信息的命令"></a>常用的查看内核信息的命令</h2><h3 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h3><p>打印指定的系统信息。不带参数时，默认使用 <code>-s</code> 参数。</p>
<p>参数：<br>-a, –all：按照下面的顺序打印所有信息，如果 -p 和 -i 未知时排除掉。<br>-s, –kernel-name：打印内核名字，一般就是 Linux。<br>-n, –nodename：打印网络节点的主机名。<br>-r, –kernel-release：打印内核发行版的版本。常用。<code>3.10.0-514.26.2.el7.x86_64</code><br>-v, –kernel-version：打印内核的版本。<code>#1 SMP Tue Jul 4 15:04:05 UTC 2017</code><br>-m, –machine：打印机器硬件名。<br>-p, –processor：打印处理器名字或“unknown”。<br>-i, –hardware-platform：打印硬件平台或“unknown”。<br>-o, –operating-system：打印操作系统。<br>–help：显示这个帮助并退出。<br>–version：显示这版本信息并退出。</p>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-514.26.2.el7.x86_64</span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux VM_139_74_centos 3.10.0-514.26.2.el7.x86_64 <span class="comment">#1 SMP Tue Jul 4 15:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"><span class="comment"># cat /etc/redhat-release </span></span><br><span class="line">CentOS Linux release 7.2.1511 (Core) </span><br></pre></td></tr></table></figure>

<h3 id="x2F-proc-虚拟文件系统"><a href="#x2F-proc-虚拟文件系统" class="headerlink" title="&#x2F;proc 虚拟文件系统"></a>&#x2F;proc 虚拟文件系统</h3><p>内核空间和用户空间通过 <code>/proc</code> 虚拟文件系统可以通信。</p>
<p><code>/proc</code> 目录中包含一些目录和虚拟文件，这些虚拟文件可以向用户呈现内核信息或者从用户空间向内核发送信息。</p>
<p>常用文件：</p>
<ul>
<li>cpuinfo：标识了处理器的类型和速度</li>
<li>pci：显示在 PCI 总线上找到的设备</li>
<li>modules：当前加载到内核中的模块</li>
<li>version：系统版本及内核版本</li>
</ul>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat /proc/version </span></span><br><span class="line">Linux version 3.10.0-514.26.2.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) ) <span class="comment">#1 SMP Tue Jul 4 15:04:05 UTC 2017</span></span><br></pre></td></tr></table></figure>

<h1 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h1><p>记得首先更新仓库：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure>

<p><code>-y</code> 选项可以在每次需要确认时，自动使用 yes，节省时间。</p>
<h2 id="启用-ELRepo-仓库"><a href="#启用-ELRepo-仓库" class="headerlink" title="启用 ELRepo 仓库"></a>启用 ELRepo 仓库</h2><p>ELRepo 仓库是基于社区的用于企业级 Linux 仓库，提供对 RedHat Enterprise (RHEL) 和 其他基于 RHEL的 Linux 发行版（CentOS、Scientific、Fedora 等）的支持。<br>ELRepo 聚焦于和硬件相关的软件包，包括文件系统驱动、显卡驱动、网络驱动、声卡驱动和摄像头驱动等。</p>
<p>启用 ELRepo 仓库：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure>

<h2 id="查看可用的系统内核包"><a href="#查看可用的系统内核包" class="headerlink" title="查看可用的系统内核包"></a>查看可用的系统内核包</h2><p>可以看到，只有 4.4 和 4.15 两个版本可以使用：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">elrepo-kernel                                                   | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                        | 1.7 MB  00:00:02     </span><br><span class="line">Determining fastest mirrors</span><br><span class="line">* elrepo-kernel: elrepo.org</span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                           4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-devel.x86_64                     4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-doc.noarch                       4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-headers.x86_64                   4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-tools.x86_64                     4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-tools-libs.x86_64                4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-lt-tools-libs-devel.x86_64          4.4.118-1.el7.elrepo            elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                           4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                     4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                       4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                   4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                     4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64          4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">perf.x86_64                                4.15.6-1.el7.elrepo             elrepo-kernel</span><br><span class="line">python-perf.x86_64</span><br></pre></td></tr></table></figure>

<h2 id="安装最新内核"><a href="#安装最新内核" class="headerlink" title="安装最新内核"></a>安装最新内核</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum --enablerepo=elrepo-kernel install kernel-ml</span></span><br></pre></td></tr></table></figure>

<p><code>--enablerepo</code> 选项开启 CentOS 系统上的指定仓库。默认开启的是 <code>elrepo</code>，这里用 <code>elrepo-kernel</code> 替换。</p>
<h1 id="设置-grub2"><a href="#设置-grub2" class="headerlink" title="设置 grub2"></a>设置 grub2</h1><p>内核安装好后，需要设置为默认启动选项并重启后才会生效</p>
<h2 id="查看系统上的所有可以内核"><a href="#查看系统上的所有可以内核" class="headerlink" title="查看系统上的所有可以内核"></a>查看系统上的所有可以内核</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sudo awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print i++ &quot; : &quot; $2&#125;&#x27; /etc/grub2.cfg</span></span><br><span class="line">0 : CentOS Linux (4.15.6-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-514.26.2.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-f9d400c5e1e8c3a8209e990d887d4ac1) 7 (Core)</span><br></pre></td></tr></table></figure>

<h2 id="设置-grub2-1"><a href="#设置-grub2-1" class="headerlink" title="设置 grub2"></a>设置 grub2</h2><p>机器上存在 4 个内核，我们要使用 4.15 这个版本，可以通过 grub2-set-default 0 命令或编辑 &#x2F;etc&#x2F;default&#x2F;grub 文件来设置。</p>
<h3 id="通过-grub2-set-default-0-命令设置"><a href="#通过-grub2-set-default-0-命令设置" class="headerlink" title="通过 grub2-set-default 0 命令设置"></a>通过 <code>grub2-set-default 0</code> 命令设置</h3><p>其中 0 来自上一步的 awk 命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo grub2-set-default 0</span><br></pre></td></tr></table></figure>

<h3 id="编辑-etc-default-grub-文件"><a href="#编辑-etc-default-grub-文件" class="headerlink" title="编辑 /etc/default/grub 文件"></a>编辑 <code>/etc/default/grub</code> 文件</h3><p>设置 GRUB_DEFAULT&#x3D;0，表示使用上一步的 awk 命令显示的编号为 0 的内核作为默认内核</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vi /etc/default/grub</span></span><br><span class="line"></span><br><span class="line">&gt; GRUB_TIMEOUT=5</span><br><span class="line">&gt; GRUB_DISTRIBUTOR=<span class="string">&quot;<span class="subst">$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)</span>&quot;</span></span><br><span class="line">&gt; GRUB_DEFAULT=0</span><br><span class="line">&gt; GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">&gt; GRUB_TERMINAL_OUTPUT=<span class="string">&quot;console&quot;</span></span><br><span class="line">&gt; GRUB_CMDLINE_LINUX=<span class="string">&quot;crashkernel=auto console=ttyS0 console=tty0 panic=5&quot;</span></span><br><span class="line">&gt; GRUB_DISABLE_RECOVERY=<span class="string">&quot;true&quot;</span></span><br><span class="line">&gt; GRUB_TERMINAL=<span class="string">&quot;serial console&quot;</span></span><br><span class="line">&gt; GRUB_TERMINAL_OUTPUT=<span class="string">&quot;serial console&quot;</span></span><br><span class="line">&gt; GRUB_SERIAL_COMMAND=<span class="string">&quot;serial --speed=9600 --unit=0 --word=8 --parity=no --stop=1&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="生成-grub-配置文件并重启"><a href="#生成-grub-配置文件并重启" class="headerlink" title="生成 grub 配置文件并重启"></a>生成 grub 配置文件并重启</h2><p>下一步，通过 <code>gurb2-mkconfig</code> 命令创建 grub2 的配置文件，然后重启</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>通过 <code>uname -r</code> 查看，可以发现已经生效了。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">4.15.6-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure>

<h1 id="删除旧内核-可选"><a href="#删除旧内核-可选" class="headerlink" title="删除旧内核 (可选)"></a>删除旧内核 (可选)</h1><p>内核有两种删除方式：通过 <code>yum remove</code> 命令或通过 <code>yum-utils</code> 工具。</p>
<h2 id="通过-yum-remove-命令"><a href="#通过-yum-remove-命令" class="headerlink" title="通过 yum remove 命令"></a>通过 <code>yum remove</code> 命令</h2><p>查看系统中全部的内核：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep kernel</span></span><br><span class="line">kernel-tools-libs-3.10.0-514.26.2.el7.x86_64</span><br><span class="line">kernel-ml-4.15.6-1.el7.elrepo.x86_64</span><br><span class="line">kernel-3.10.0-327.el7.x86_64</span><br><span class="line">kernel-tools-3.10.0-514.26.2.el7.x86_64</span><br><span class="line">kernel-headers-3.10.0-514.26.2.el7.x86_64</span><br><span class="line">kernel-3.10.0-514.26.2.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>删除旧内核的 RPM 包</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum remove kernel-tools-libs-3.10.0-514.26.2.el7.x86_64 kernel-3.10.0-327.el7.x86_64 kernel-tools-3.10.0-514.26.2.el7.x86_64 kernel-headers-3.10.0-514.26.2.el7.x86_64 kernel-3.10.0-514.26.2.el7.x86_64</span><br></pre></td></tr></table></figure>

<h2 id="通过-yum-utils-工具"><a href="#通过-yum-utils-工具" class="headerlink" title="通过 yum-utils 工具"></a>通过 <code>yum-utils</code> 工具</h2><p>如果安装的内核不多于 <code>3</code> 个，<code>yum-utils</code> 工具不会删除任何一个。只有在安装的内核大于 <code>3</code> 个时，才会自动删除旧内核。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install yum-utils</span><br></pre></td></tr></table></figure>

<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">package-cleanup --oldkernels</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>centOS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装RabbitMQ</title>
    <url>/2021/11/22/Docker%E5%AE%89%E8%A3%85RabbitMQ/</url>
    <content><![CDATA[<h2 id="Docker-Hub-仓库地址"><a href="#Docker-Hub-仓库地址" class="headerlink" title="Docker Hub 仓库地址"></a><a href="https://hub.docker.com/_/rabbitmq/">Docker Hub 仓库地址</a></h2><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull rabbitmq:3.8.12-management-alpine</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --hostname rabbit_host --name rabbitMQ -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 -p 15672:15672 -p 5672:5672 rabbitmq:3.8.12-management-alpine</span><br></pre></td></tr></table></figure>

<h3 id="持久化部署"><a href="#持久化部署" class="headerlink" title="持久化部署"></a>持久化部署</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --hostname rabbit_host --name rabbitMQ -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 --privileged=true -v /usr/local/rabbitmq/1/lib:/var/lib/rabbitmq -v /usr/local/rabbitmq/1/log:/var/log/rabbitmq -p 15672:15672 -p 5672:5672 rabbitmq:3.8.12-management-alpine</span><br></pre></td></tr></table></figure>

<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul>
<li><code>-d</code> 以守护进程方式在后台运行</li>
<li><code>-p 15672:15672</code> management 界面管理访问端口</li>
<li><code>-p 5672:5672</code> amqp 访问端口</li>
<li><code>--name</code> ${指定容器名}</li>
<li><code>--hostname</code> ${设定容器的主机名} （它会被写到容器内的 &#x2F;etc&#x2F;hostname 和 &#x2F;etc&#x2F;hosts 作为容器主机IP的别名，并且将显示在容器的bash中）</li>
<li><code>-e</code> 参数<ul>
<li><code>RABBITMQ_DEFAULT_USER</code> ${用户名}</li>
<li><code>RABBITMQ_DEFAULT_PASS</code> ${密码}</li>
</ul>
</li>
</ul>
<h2 id="主要端口介绍"><a href="#主要端口介绍" class="headerlink" title="主要端口介绍"></a>主要端口介绍</h2><ul>
<li><code>4369</code> erlang 发现口</li>
<li><code>5672</code> client 端通信口</li>
<li><code>15672</code> 管理界面 ui 端口</li>
<li><code>25672</code> server 间内部通信口</li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>docker</tag>
        <tag>rabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker将镜像推送到阿里云DockerRegistry</title>
    <url>/2021/12/09/Docker%E5%B0%86%E9%95%9C%E5%83%8F%E6%8E%A8%E9%80%81%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91DockerRegistry/</url>
    <content><![CDATA[<h2 id="登录阿里云Docker-Registry"><a href="#登录阿里云Docker-Registry" class="headerlink" title="登录阿里云Docker Registry"></a><a href="https://cr.console.aliyun.com/">登录阿里云Docker Registry</a></h2><p><strong>[仓库地址] 以广州仓库为例</strong></p>
<ul>
<li>公网地址 <code>registry.cn-guangzhou.aliyuncs.com</code> 仓库公网地址</li>
<li>专有网络 <code>registry-vpc.cn-guangzhou.aliyuncs.com</code> 专有网络机器请使用仓库专有网络地址</li>
<li>经典网络 <code>registry-internal.cn-guangzhou.aliyuncs.com</code> 通过访问镜像仓库内网地址来加快镜像下载速度并减少公网流量开销</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker login --username=[阿里云账号全名] [仓库地址] --password=[开通服务时设置的密码]</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="异常解决"><a href="#异常解决" class="headerlink" title="异常解决"></a>异常解决</h3><h4 id="Error-Cannot-perform-an-interactive-login-from-a-non-TTY-device"><a href="#Error-Cannot-perform-an-interactive-login-from-a-non-TTY-device" class="headerlink" title="Error: Cannot perform an interactive login from a non TTY device"></a><strong>Error: Cannot perform an interactive login from a non TTY device</strong></h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">winpty docker login --username=[阿里云账号全名] [仓库地址] --password=[开通服务时设置的密码]</span><br></pre></td></tr></table></figure>

<h3 id="从Registry中拉取镜像"><a href="#从Registry中拉取镜像" class="headerlink" title="从Registry中拉取镜像"></a>从Registry中拉取镜像</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull [仓库地址]/[命名空间]/[仓库名称]:[镜像版本号]</span><br></pre></td></tr></table></figure>

<h3 id="将镜像推送到Registry"><a href="#将镜像推送到Registry" class="headerlink" title="将镜像推送到Registry"></a>将镜像推送到Registry</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker login --username=[阿里云账号全名] [仓库地址] --password=[开通服务时设置的密码]</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker tag [ImageId] [仓库地址]/[命名空间]/[仓库名称]:[镜像版本号]</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker push [仓库地址]/[命名空间]/[仓库名称]:[镜像版本号]</span><br></pre></td></tr></table></figure>

<h4 id="ImageId-获取"><a href="#ImageId-获取" class="headerlink" title="[ImageId] 获取"></a><strong>[ImageId]</strong> 获取</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<h3 id="选择合适的镜像仓库地址"><a href="#选择合适的镜像仓库地址" class="headerlink" title="选择合适的镜像仓库地址"></a>选择合适的镜像仓库地址</h3><p>从ECS推送镜像时，可以选择使用镜像仓库内网地址。推送速度将得到提升并且将不会损耗您的公网流量。</p>
<p>如果您使用的机器位于VPC网络，请使用 registry-vpc.cn-guangzhou.aliyuncs.com 作为Registry的域名登录。</p>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>使用”docker tag”命令重命名镜像，并将它通过专有网络地址推送至Registry。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker images</span><br><span class="line">REPOSITORY                                                         TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">registry.aliyuncs.com/acs/agent                                    0.7-dfb6816         37bb9c63c8b2        7 days ago          37.89 MB</span><br><span class="line">$ docker tag 37bb9c63c8b2 registry-vpc.cn-guangzhou.aliyuncs.com/acs/agent:0.7-dfb6816</span><br></pre></td></tr></table></figure>

<p>使用 “docker push” 命令将该镜像推送至远程。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ docker push registry-vpc.cn-guangzhou.aliyuncs.com/acs/agent:0.7-dfb6816</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>docker</category>
        <category>aliyun</category>
        <category>registry</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>aliyun</tag>
        <tag>registry</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate 多对多 一对多 多对一  配置解析案例</title>
    <url>/2017/10/28/Hibernate-%E5%A4%9A%E5%AF%B9%E5%A4%9A-%E4%B8%80%E5%AF%B9%E5%A4%9A-%E5%A4%9A%E5%AF%B9%E4%B8%80-%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="什么是Hibernate"><a href="#什么是Hibernate" class="headerlink" title="什么是Hibernate"></a>什么是Hibernate</h2><p>Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet&#x2F;JSP的Web应用中使用，最具革命意义的是，Hibernate可以在应用EJB的J2EE架构中取代CMP，完成数据持久化的重任。</p>
<span id="more"></span>

<h2 id="此案例用于理解脏检查-以及Hibernate关系映射的配置"><a href="#此案例用于理解脏检查-以及Hibernate关系映射的配置" class="headerlink" title="此案例用于理解脏检查,以及Hibernate关系映射的配置"></a>此案例用于理解脏检查,以及Hibernate关系映射的配置</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HibernateCase<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.hynnet/oracle-driver-ojdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="数据库的关系"><a href="#数据库的关系" class="headerlink" title="数据库的关系"></a>数据库的关系</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--部门</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> depa(</span><br><span class="line">    ID NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    NAME NVARCHAR2 (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职员</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp(</span><br><span class="line">    ID NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    NAME NVARCHAR2 (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    depa_id NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职位</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> post(</span><br><span class="line">    ID NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    NAME NVARCHAR2 (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--职员职位</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> emp_post(</span><br><span class="line">    emp_id NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    post_id NUMBER <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><code>emp_post</code> 职员职位表为中间表,实体类可以不存在</p>
<h3 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h3><h4 id="Depa"><a href="#Depa" class="headerlink" title="Depa"></a>Depa</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Depa</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Emp&gt; emps = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Depa&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Emp&gt; <span class="title function_">getEmps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmps</span><span class="params">(Set&lt;Emp&gt; emps)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Emp"><a href="#Emp" class="headerlink" title="Emp"></a>Emp</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Depa depaid;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Post&gt; posts = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Post&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Emp&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Post&gt; <span class="title function_">getPosts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPosts</span><span class="params">(Set&lt;Post&gt; posts)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.posts = posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Depa <span class="title function_">getDepaid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> depaid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDepaid</span><span class="params">(Depa depaid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.depaid = depaid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Post"><a href="#Post" class="headerlink" title="Post"></a>Post</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Post</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Emp&gt; emps = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Post&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Set&lt;Emp&gt; <span class="title function_">getEmps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmps</span><span class="params">(Set&lt;Emp&gt; emps)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Emp</code> 实体类 和 <code>Post</code> 实体类 都有对方的 <code>Set&lt;?&gt;</code> 集合,这也是操作中间表 <code>emp_post</code> 的关键属性</p>
<h3 id="对实体类关系映射配置"><a href="#对实体类关系映射配置" class="headerlink" title="对实体类关系映射配置"></a>对实体类关系映射配置</h3><h4 id="depa-hbm-xml"><a href="#depa-hbm-xml" class="headerlink" title="depa.hbm.xml"></a>depa.hbm.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Depa&quot;</span> <span class="attr">table</span>=<span class="string">&quot;depa&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--一对多 name为实体类属性名 class为对应外键对应实体类--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--table 实体类对象数据来源数据库表名 cascade维护方式--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--inverse 指定由哪一方来维护之间的关联关系 当一方中指定了&quot;inverse=false&quot;(默认),那么那一方就有责任负责之间的关联关系--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">table</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;all&quot;</span> <span class="attr">inverse</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为emp数据库关联depa的外键名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;depa_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class emps的单个实体数据为哪个实体类--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">one-to-many</span> <span class="attr">class</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="emp-hbm-xml"><a href="#emp-hbm-xml" class="headerlink" title="emp.hbm.xml"></a>emp.hbm.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--package为命名空间 子节点有多个类的全在com.entity包里--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--(如果不写,下面 &lt;class name=&quot;Emp&quot; name值&quot;Emp&quot;需要改成&quot;com.entity.Emp&quot;)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Emp&quot;</span> <span class="attr">table</span>=<span class="string">&quot;emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--主键--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--自增方式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--普通数据列--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对一 name为实体类属性名 class为对应外键对应实体类 column为数据库外键名(如果与name值一样可以忽略)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">many-to-one</span> <span class="attr">name</span>=<span class="string">&quot;depaid&quot;</span> <span class="attr">class</span>=<span class="string">&quot;Depa&quot;</span> <span class="attr">column</span>=<span class="string">&quot;depa_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对多 name为实体类属性名 table 关联的中间表 cascade 维护方式 save-update 为维护方式是新增或修改--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;posts&quot;</span> <span class="attr">table</span>=<span class="string">&quot;emp_post&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;save-update&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--中间表emp_post 对应emp的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class 多对多的实体类 column 中间表emp_post 对应Post的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">&quot;Post&quot;</span> <span class="attr">column</span>=<span class="string">&quot;post_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="post-hbm-xml"><a href="#post-hbm-xml" class="headerlink" title="post.hbm.xml"></a>post.hbm.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Post&quot;</span> <span class="attr">table</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--多对多 name为实体类属性名 table 关联的中间表 cascade 维护方式 save-update 为维护方式是新增或修改--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span> <span class="attr">name</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">table</span>=<span class="string">&quot;emp_post&quot;</span> <span class="attr">cascade</span>=<span class="string">&quot;save-update&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--中间表emp_post 对应post的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">key</span> <span class="attr">column</span>=<span class="string">&quot;post_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--class 多对多的实体类 column 中间表emp_post 对应Emp的外键--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">many-to-many</span> <span class="attr">class</span>=<span class="string">&quot;Emp&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>将实体类的 <code>XML</code> 映射到 hibernate.cfg.xml 配置</p>
<h4 id="hibernate-cfg-xml"><a href="#hibernate-cfg-xml" class="headerlink" title="hibernate.cfg.xml"></a>hibernate.cfg.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-configuration</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-factory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connection.url&quot;</span>&gt;</span>jdbc:oracle:thin:@localhost:1521:orcl<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connection.username&quot;</span>&gt;</span>system<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connection.password&quot;</span>&gt;</span>simon<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connection.driver_class&quot;</span>&gt;</span>oracle.jdbc.driver.OracleDriver<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;current_session_context_class&quot;</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;show_sql&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;format_sql&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/depa.hbm.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/emp.hbm.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/post.hbm.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Hibernate工具类-HibernateUtil"><a href="#Hibernate工具类-HibernateUtil" class="headerlink" title="Hibernate工具类 HibernateUtil"></a>Hibernate工具类 HibernateUtil</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HibernateUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SessionFactory factory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        configuration = <span class="keyword">new</span> <span class="title class_">Configuration</span>().configure(<span class="string">&quot;hibernate.cfg.xml&quot;</span>);</span><br><span class="line">        factory = configuration.buildSessionFactory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title function_">getSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> factory.getCurrentSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试类-Test"><a href="#测试类-Test" class="headerlink" title="测试类 Test"></a>测试类 Test</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"><span class="keyword">import</span> com.util.HibernateUtil;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> HibernateUtil.getSession();</span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> session.beginTransaction();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为1的职员数据&quot;</span>);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;通过职员得到中间表emp_post数据&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Post post : emp.getPosts()) &#123;</span><br><span class="line">            System.out.println(post);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;清除职员中间表emp_post的数据&quot;</span>);</span><br><span class="line">        emp.getPosts().clear();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为2的职位数据&quot;</span>);</span><br><span class="line">        <span class="type">Post</span> <span class="variable">post</span> <span class="operator">=</span> session.get(Post.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(post);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;将查到的职位给职员新增中间表emp_post数据&quot;</span>);</span><br><span class="line">        emp.getPosts().add(post);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为1的职员数据&quot;</span>);</span><br><span class="line">        emp = session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;通过职员得到中间表emp_post数据&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Post temp : emp.getPosts()) &#123;</span><br><span class="line">            System.out.println(temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;通过职员得到部门表depa数据&quot;</span>);</span><br><span class="line">        System.out.println(emp.getDepaid());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为1的部门数据&quot;</span>);</span><br><span class="line">        <span class="type">Depa</span> <span class="variable">depa</span> <span class="operator">=</span> session.get(Depa.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;将查到的部门depa给职员emp利用脏检查修改&quot;</span>);</span><br><span class="line">        emp.setDepaid(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为1的职员数据&quot;</span>);</span><br><span class="line">        emp = session.get(Emp.class, <span class="number">1</span>);</span><br><span class="line">        System.out.println(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;通过职员得到部门表depa数据&quot;</span>);</span><br><span class="line">        System.out.println(emp.getDepaid());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为2的部门数据&quot;</span>);</span><br><span class="line">        depa = session.get(Depa.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;得到部门对象所属职员&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Emp e : depa.getEmps()) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;利用脏检查删除部门对象所属的ID为1的职员&quot;</span>);</span><br><span class="line">        depa.getEmps().remove(emp);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;查询ID为2的部门数据&quot;</span>);</span><br><span class="line">        depa = session.get(Depa.class, <span class="number">2</span>);</span><br><span class="line">        System.out.println(depa);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;得到部门对象所属职员&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Emp e : depa.getEmps()) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不提交,则上面的结果不会对数据库执行操作</span></span><br><span class="line"><span class="comment">//        transaction.commit();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><p>看看测试类代码对数据库的数据进行了哪些操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询ID为1的职员数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        emp0_.id as id1_1_0_,</span><br><span class="line">        emp0_.name as name2_1_0_,</span><br><span class="line">        emp0_.depa_id as depa_id3_1_0_</span><br><span class="line">    from</span><br><span class="line">        emp emp0_</span><br><span class="line">    where</span><br><span class="line">        emp0_.id=?</span><br><span class="line">Emp&#123;id=1, name=&#x27;张三&#x27;&#125;</span><br><span class="line">通过职员得到中间表emp_post数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        posts0_.emp_id as emp_id1_2_0_,</span><br><span class="line">        posts0_.post_id as post_id2_2_0_,</span><br><span class="line">        post1_.id as id1_3_1_,</span><br><span class="line">        post1_.name as name2_3_1_</span><br><span class="line">    from</span><br><span class="line">        emp_post posts0_</span><br><span class="line">    inner join</span><br><span class="line">        post post1_</span><br><span class="line">            on posts0_.post_id=post1_.id</span><br><span class="line">    where</span><br><span class="line">        posts0_.emp_id=?</span><br><span class="line">Post&#123;id=1, name=&#x27;职员&#x27;&#125;</span><br><span class="line">清除职员中间表emp_post的数据</span><br><span class="line">查询ID为2的职位数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        post0_.id as id1_3_0_,</span><br><span class="line">        post0_.name as name2_3_0_</span><br><span class="line">    from</span><br><span class="line">        post post0_</span><br><span class="line">    where</span><br><span class="line">        post0_.id=?</span><br><span class="line">Post&#123;id=2, name=&#x27;主管&#x27;&#125;</span><br><span class="line">将查到的职位给职员新增中间表emp_post数据</span><br><span class="line">查询ID为1的职员数据</span><br><span class="line">Emp&#123;id=1, name=&#x27;张三&#x27;&#125;</span><br><span class="line">通过职员得到中间表emp_post数据</span><br><span class="line">Post&#123;id=2, name=&#x27;主管&#x27;&#125;</span><br><span class="line">通过职员得到部门表depa数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        depa0_.id as id1_0_0_,</span><br><span class="line">        depa0_.name as name2_0_0_</span><br><span class="line">    from</span><br><span class="line">        depa depa0_</span><br><span class="line">    where</span><br><span class="line">        depa0_.id=?</span><br><span class="line">Depa&#123;id=2, name=&#x27;美工部&#x27;&#125;</span><br><span class="line">查询ID为1的部门数据</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        depa0_.id as id1_0_0_,</span><br><span class="line">        depa0_.name as name2_0_0_</span><br><span class="line">    from</span><br><span class="line">        depa depa0_</span><br><span class="line">    where</span><br><span class="line">        depa0_.id=?</span><br><span class="line">Depa&#123;id=1, name=&#x27;销售部&#x27;&#125;</span><br><span class="line">将查到的部门depa给职员emp利用脏检查修改</span><br><span class="line">查询ID为1的职员数据</span><br><span class="line">Emp&#123;id=1, name=&#x27;张三&#x27;&#125;</span><br><span class="line">通过职员得到部门表depa数据</span><br><span class="line">Depa&#123;id=1, name=&#x27;销售部&#x27;&#125;</span><br><span class="line">查询ID为2的部门数据</span><br><span class="line">Depa&#123;id=2, name=&#x27;美工部&#x27;&#125;</span><br><span class="line">得到部门对象所属职员</span><br><span class="line">Hibernate:</span><br><span class="line">    select</span><br><span class="line">        emps0_.depa_id as depa_id3_1_0_,</span><br><span class="line">        emps0_.id as id1_1_0_,</span><br><span class="line">        emps0_.id as id1_1_1_,</span><br><span class="line">        emps0_.name as name2_1_1_,</span><br><span class="line">        emps0_.depa_id as depa_id3_1_1_</span><br><span class="line">    from</span><br><span class="line">        emp emps0_</span><br><span class="line">    where</span><br><span class="line">        emps0_.depa_id=?</span><br><span class="line">Emp&#123;id=1, name=&#x27;张三&#x27;&#125;</span><br><span class="line">利用脏检查删除部门对象所属的ID为1的职员</span><br><span class="line">查询ID为2的部门数据</span><br><span class="line">Depa&#123;id=2, name=&#x27;美工部&#x27;&#125;</span><br><span class="line">得到部门对象所属职员</span><br></pre></td></tr></table></figure>


<h3 id="点击访问仓库"><a href="#点击访问仓库" class="headerlink" title="点击访问仓库"></a><a href="https://gitee.com/admin-james/HibernateCase">点击访问仓库</a></h3><p>案例为重新整理的, MySQL连接为主, 字段名进行了修改, 整体区别不大</p>
]]></content>
      <categories>
        <category>hibernate</category>
        <category>关系映射</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>mysql</tag>
        <tag>oracle</tag>
        <tag>hibernate</tag>
        <tag>多对多</tag>
        <tag>一对多</tag>
        <tag>多对一</tag>
        <tag>many-to-many</tag>
        <tag>many-to-one</tag>
        <tag>one-to-many</tag>
        <tag>关系映射</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建个人博客</title>
    <url>/2017/03/17/Hexo-build-blog/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h3><p><a href="https://hexo.io/">Hexo</a> 是高效的静态站点生成框架，她基于Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的标签插件来快速的插入特定形式的内容，而且相对于其他框架，Hexo在速度上也有很大优势。</p>
<span id="more"></span>

<h3 id="搭建Node-js环境"><a href="#搭建Node-js环境" class="headerlink" title="搭建Node.js环境"></a>搭建Node.js环境</h3><p>我们了解到Hexo基于Node.js的，那么我们搭建博客网站首先需要安装Node.js环境。 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。</p>
<p><a href="https://nodejs.org/dist/v8.11.1/node-v8.11.1-x64.msi">点击下载 Node.js</a></p>
<p>测试安装：命令行使用 <code>node -v</code> 和 <code>npm -v</code> 查看显示版本号即成功。</p>
<h3 id="安装Hexo博客框架工具"><a href="#安装Hexo博客框架工具" class="headerlink" title="安装Hexo博客框架工具"></a>安装Hexo博客框架工具</h3><p>Hexo是一个建站工具，可以帮助我们快速生成基本的博客文件，安装它需要在控制台下使用如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h3 id="安装Git版本工具"><a href="#安装Git版本工具" class="headerlink" title="安装Git版本工具"></a>安装Git版本工具</h3><p>Git是目前世界上最流行的分布式版本控制系统，是的，没有之一。使用Git可以帮助我们把本地的网页和文章等内容提交到Gihub上，实现同步。</p>
<p><a href="https://github.com/git-for-windows/git/releases/download/v2.17.0.windows.1/Git-2.17.0-64-bit.exe">点击下载 Git</a></p>
<p>Windows系统需下载，Mac系统因为自带Git无需操作。<br>测试安装：命令行使用 <code>git --version</code> 查看显示版本号即成功。</p>
<h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>Github是一个面向开源及私有软件项目的托管平台，因为只支持 <em>git</em> 作为唯一的版本库格式进行托管，故名Github。这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用Github同步我们个人博客的相关文件。</p>
<p>注册地址： <a href="https://github.com/">Github 官网</a><br>注册流程： <a href="https://www.baidu.com/">百度一下,你就知道</a></p>
<h2 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h2><p>搭建我们的个人博客需要一个唯一的域名，当然我们可以申请购买一个域名来使用，但是在不是太必要的情况下，我们也可以通过Github Pages获得一个免费使用的域名，这需要我们在Github上新建一个仓库</p>
<p>勾选 <code>Initialize this repository with a README</code> 避免后面不必要的麻烦</p>
<p>其中的 <code>%username%</code> 替换成Github用户名</p>
<p>这个过程和建立普通的仓库没什么区别，关键在于新仓库的名字，一定要是 <code>%username%</code> +“github.io”的形式。这也是之前强调的要起一个好的用户名的原因。这样之后我们最后的博客网站的链接就会是：https:&#x2F;&#x2F;<code>%username%</code>.github.io的形式。<br>注意：固定新仓库的名字格式并非必须，只是这样操作生成的博客域名比较短小简洁，另起他名生成博客域名会很冗长。</p>
<p>点击Create Repository之后，随后选择Setting进入设置，找到Github Pages</p>
<p>这里我们需要点击Choose a theme任意选择一个选择主题，然后界面会跳转到仓库，我们看到有两个文件</p>
<p>此时若再查看Setting，我们会看到开启GitHub Pages之后得到的域名</p>
<p>现在，我们就可以使用 https:&#x2F;&#x2F;<code>%username%</code>.github.io 访问自己的博客网站了，打开链接我们会看到默认主题的个人博客样式</p>
<h2 id="创建本地博客站点"><a href="#创建本地博客站点" class="headerlink" title="创建本地博客站点"></a>创建本地博客站点</h2><p>上述的步骤相当于我们使用Github page，创建了一个默认的博客页，并且得到了一个可外部访问的域名。但是这个博客页很Low。我们的目的是创建自己个性化的博客网站，所以我们使用Hexo在本地先创建一个本地博客站点，优化后再把它部署到Github上。接下来我们使用控制台命令在本地一个合适的位置创建博客站点文件夹如下：</p>
<p>安装Hexo，在自己认为合适的地方创个文件夹，我是在E盘建了一个blog文件夹。然后通过命令行进入到该文件夹里面</p>
<p>输入 <code>npm install hexo -g</code> 开始安装Hexo</p>
<p>输入 <code>hexo -v</code> 检查Hexo是否安装成功</p>
<p>输入 <code>hexo init</code> 初始化该文件夹</p>
<p>看到后面的 <code>Start blogging with Hexo！</code> 表示成功</p>
<p>输入 <code>npm install</code> 安装所需要的组件</p>
<p>输入 <code>hexo g</code> g是generetor的缩写，生成博客</p>
<p>输入 <code>hexo s</code> s是server的缩写，启动服务，<a href="http://localhost:4000/">访问该网址</a>，正式体验Hexo</p>
<p>问题：假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入 <code>hexo server -p 端口号</code> 来改变端口号</p>
<h2 id="同步Github-允许公共访问"><a href="#同步Github-允许公共访问" class="headerlink" title="同步Github,允许公共访问"></a>同步Github,允许公共访问</h2><p>在本地我们已经搭建了博客，但是还只能自己本地访问。若要别人也能看到，那就需要我们将其同步部署到GitHub上了。还记得我们之前准备的Github仓库吗，这里就要用到了。<br>首先找到我们的博客仓库，并拷贝仓库地址：</p>
<p>修改本地博客根目录下的_config.yml文件，修改deploy下的配置如下：</p>
<p>修改repository值为上面拷贝的仓库地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:%username%/%username%.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>Git安装后，右键有 <code>Git Base Here</code> 在本地博客文件夹打开</p>
<p>将Hexo与Github page联系起来，设置Git的username和email</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Github用户名&quot;</span><br><span class="line">git config --global user.email &quot;Github绑定的邮箱&quot;</span><br></pre></td></tr></table></figure>

<p>输入 <code>cd ~/.ssh</code> 检查是否由.ssh的文件夹</p>
<p>输入 <code>ls</code> 列出该文件下的内容</p>
<p>输入 <code>ssh-keygen -t rsa -C &quot;Github绑定的邮箱&quot;</code> 连续三个回车，生成密钥</p>
<p>最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：<code>C:\Users\Administrator\.ssh</code>）</p>
<p>输入 <code>eval &quot;$(ssh-agent -s)&quot;</code> 添加密钥到ssh-agent</p>
<p>输入 <code>ssh-add ~/.ssh/id_rsa</code> 添加生成的SSH key到ssh-agent</p>
<p>登录Github，点击头像下的Settings进入SSH and GPG keys选项，添加SSH keys</p>
<p>新建一个New SSH key，将id_rsa.pub文件里的内容复制上去</p>
<p>输入 <code>ssh -T git@github.com</code> 测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了</p>
<p>新建一篇博客，用控制台定位到本地博客文件夹执行命令 <code>hexo new &quot;My New Post&quot;</code></p>
<p>这时候在文件夹_posts目录下将会看到已经创建的文件</p>
<p>在生成以及部署文章之前，需要安装一个扩展：<code>npm install hexo-deployer-git --save</code></p>
<p>使用编辑器编好文章，那么就可以使用命令： <code>hexo d -g</code> 生成以及部署了</p>
<p>部署成功后访问你的地址将看到生成的文章</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate 主键 ID 生成方式</title>
    <url>/2017/09/28/Hibernate-%E4%B8%BB%E9%94%AE-ID-%E7%94%9F%E6%88%90%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="ID生成方式"><a href="#ID生成方式" class="headerlink" title="ID生成方式"></a>ID生成方式</h3><h3 id="序列sequence-只适用于Oracle"><a href="#序列sequence-只适用于Oracle" class="headerlink" title="序列sequence 只适用于Oracle"></a>序列sequence 只适用于Oracle</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;sequence&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;sequence&quot;</span>&gt;</span>person_seq<span class="tag">&lt;/<span class="name">param</span>&gt;</span><span class="comment">&lt;!--指定sequence名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="自增列，适用于SQLServer、MySql"><a href="#自增列，适用于SQLServer、MySql" class="headerlink" title="自增列，适用于SQLServer、MySql"></a>自增列，适用于SQLServer、MySql</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;identity&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="取最大值加一-max-1"><a href="#取最大值加一-max-1" class="headerlink" title="取最大值加一 max()+1"></a>取最大值加一 max()+1</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">type</span>=<span class="string">&quot;integer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="根据底层数据库指定生成方法"><a href="#根据底层数据库指定生成方法" class="headerlink" title="根据底层数据库指定生成方法"></a>根据底层数据库指定生成方法</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;native&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用缺省策略<br>针对Oracle数据库的生成方式还是sequence，只不过需要一个特定名字的sequence，”hibernate_sequence”。</p>
<h3 id="高低位算法"><a href="#高低位算法" class="headerlink" title="高低位算法"></a>高低位算法</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;hilo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;table&quot;</span>&gt;</span>high_value<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置高位值取值的表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;column&quot;</span>&gt;</span>next_value<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置高位值取值的字段--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_lo&quot;</span>&gt;</span>50<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定低位最大值，当取道最大值是会再取一个高位值再运算--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Oracle数据库注解-sequence-数据库序列定义"><a href="#Oracle数据库注解-sequence-数据库序列定义" class="headerlink" title="Oracle数据库注解 sequence 数据库序列定义"></a>Oracle数据库注解 sequence 数据库序列定义</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SequenceGenerator(name = &quot;sequenceInfo&quot;, sequenceName = &quot;SEQ_name&quot;)</span></span><br><span class="line"><span class="meta">@GeneratedValue(generator = &quot;sequenceInfo&quot;)</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@Column</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br></pre></td></tr></table></figure>

<p><code>SEQ_name</code> 为Oracle数据库序列名</p>
<h2 id="Oracle数据库XML-sequence-数据库序列定义"><a href="#Oracle数据库XML-sequence-数据库序列定义" class="headerlink" title="Oracle数据库XML sequence 数据库序列定义"></a>Oracle数据库XML sequence 数据库序列定义</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--package为命名空间 子节点有多个类的全在com.entity包里--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--(如果不写,下面 &lt;class name=&quot;Emp&quot; name值&quot;Emp&quot;需要改成全限定类名(绝对路径)&quot;com.entity.Emp&quot;)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span> <span class="attr">package</span>=<span class="string">&quot;com.entity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;Emp&quot;</span> <span class="attr">table</span>=<span class="string">&quot;emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--主键--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--自增方式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;sequence&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;sequence&quot;</span>&gt;</span>SEQ_name<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
        <category>xml</category>
        <category>主键</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>主键</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate中的mappedBy和注解@JoinColumn</title>
    <url>/2017/06/06/Hibernate%E4%B8%AD%E7%9A%84mappedBy%E5%92%8C%E6%B3%A8%E8%A7%A3-JoinColumn/</url>
    <content><![CDATA[<h2 id="mappedBy"><a href="#mappedBy" class="headerlink" title="mappedBy"></a>mappedBy</h2><p>mappedBy用于指定具有双向关系的两个实体中。哪个实体是被关联处理的。</p>
<h3 id="只有OneToOne-OneToMany-ManyToMany上才有mappedBy属性，ManyToOne不存在该属性"><a href="#只有OneToOne-OneToMany-ManyToMany上才有mappedBy属性，ManyToOne不存在该属性" class="headerlink" title="只有OneToOne,OneToMany,ManyToMany上才有mappedBy属性，ManyToOne不存在该属性"></a>只有OneToOne,OneToMany,ManyToMany上才有mappedBy属性，ManyToOne不存在该属性</h3><h3 id="OneToMany-mappedBy-x3D-“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”"><a href="#OneToMany-mappedBy-x3D-“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”" class="headerlink" title="@OneToMany(mappedBy&#x3D;“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”)"></a>@OneToMany(mappedBy&#x3D;“由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名，否则会出错”)</h3><h3 id="关系的拥有方-Many的一方-负责关系的维护，在拥有方建立外键。所以用到-JoinColumn"><a href="#关系的拥有方-Many的一方-负责关系的维护，在拥有方建立外键。所以用到-JoinColumn" class="headerlink" title="关系的拥有方(Many的一方)负责关系的维护，在拥有方建立外键。所以用到@JoinColumn"></a>关系的拥有方(Many的一方)负责关系的维护，在拥有方建立外键。所以用到@JoinColumn</h3><span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Users</span> &#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mappedBy由One的一方指向Many的一方，并且，这个属性应该等于Many的一方中含有One类的属性的对象名</span></span><br><span class="line">    <span class="meta">@OneToMany(targetEntity = House.class, mappedBy = &quot;user_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Set&lt;House&gt; houseSet;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JoinColumn"><a href="#JoinColumn" class="headerlink" title="JoinColumn"></a>JoinColumn</h2><h3 id="JoinColumn指定了Users通过外键u-id关联到当前的user-id。"><a href="#JoinColumn指定了Users通过外键u-id关联到当前的user-id。" class="headerlink" title="@JoinColumn指定了Users通过外键u_id关联到当前的user_id。"></a>@JoinColumn指定了Users通过外键u_id关联到当前的user_id。</h3><p>用@JoinColumn指向One的一个外键字段(数据库对应外键字段名)。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">House</span> &#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ManyToOne(targetEntity = Users.class)</span></span><br><span class="line">    <span class="meta">@JoinColumn(name = &quot;u_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Users user_id;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
        <category>注解</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>mappedBy</tag>
        <tag>JoinColumn</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate主键自增长increment</title>
    <url>/2017/06/18/Hibernate%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E9%95%BFincrement/</url>
    <content><![CDATA[<h2 id="increment"><a href="#increment" class="headerlink" title="increment"></a>increment</h2><p>由Hibernate从数据库中取出主键的最大值（每个session只取1次），以该值为基础，每次增量为1，在内存中生成主键，不依赖于底层的数据库，因此可以跨数据库。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Hibernate调用org.hibernate.id.IncrementGenerator类里面的generate()方法，使用select max(idColumnName) from tableName语句获取主键最大值。</p>
<span id="more"></span>

<p>以上为 <code>XML</code> 配置自增长，而使用 <code>注解</code> 的方式就需要一下的步骤实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GenericGenerator(name = &quot;generator&quot;, strategy = &quot;increment&quot;)</span></span><br><span class="line"><span class="meta">@GeneratedValue(generator = &quot;generator&quot;)</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@Column</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
        <category>increment</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>increment</tag>
      </tags>
  </entry>
  <entry>
    <title>Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释</title>
    <url>/2017/05/31/Hibernate%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6hibernate-cfg-xml%E5%92%8C-hbm-xml%E7%9A%84%E8%AF%A6%E7%BB%86%E8%A7%A3%E9%87%8A/</url>
    <content><![CDATA[<h2 id="什么是Hibernate"><a href="#什么是Hibernate" class="headerlink" title="什么是Hibernate"></a>什么是Hibernate</h2><p>Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet&#x2F;JSP的Web应用中使用，最具革命意义的是，Hibernate可以在应用EJB的J2EE架构中取代CMP，完成数据持久化的重任。</p>
<h2 id="Hibernate配置文件hibernate-cfg-xml和-hbm-xml的详细解释"><a href="#Hibernate配置文件hibernate-cfg-xml和-hbm-xml的详细解释" class="headerlink" title="Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释"></a>Hibernate配置文件hibernate.cfg.xml和.hbm.xml的详细解释</h2><p>Hibernate 中有两个常见的配置文件 <code>hibernate.cfg.xml</code> 和 <code>XXX.hbm.xml</code></p>
<p>其中 <code>Maven</code> 项目对象模型的 <code>pom.xml</code> 可以去 <a href="https://mvnrepository.com/">Maven知识库</a> 得到对应的 <code>dependency</code> 部分</p>
<span id="more"></span>

<p>如需手动导入文件，先下载文件。并用 <code>mvn</code> 执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile=下载文件所在路径 -DgroupId=dependency配置的groupId部分 -DartifactId=dependency配置的artifactId部分 -Dversion=dependency配置的版本 -Dpackaging=属于什么文件    </span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile=c:\ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.1.0 -Dpackaging=jar</span><br></pre></td></tr></table></figure>

<h3 id="hibernate-cfg-xml"><a href="#hibernate-cfg-xml" class="headerlink" title="hibernate.cfg.xml"></a>hibernate.cfg.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--标准的XML文件的起始行，version=&#x27;1.0&#x27;表明XML的版本，encoding=&#x27;gb2312&#x27;表明XML文件的编码方式--&gt;</span>     </span><br><span class="line">  <span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--表明解析本XML文件的DTD文档位置，DTD是Document Type Definition 的缩写,即文档类型的定义,XML解析器使用DTD文档来检查XML文件的合法性。hibernate.sourceforge.net/hibernate-configuration-3.0dtd可以在Hibernate3.1.3软件包中的src\org\hibernate目录中找到此文件--&gt;</span>     </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-configuration</span> <span class="keyword">PUBLIC</span>     </span></span><br><span class="line"><span class="meta"><span class="string">&quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;</span>     </span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;</span>&gt;</span>     </span><br><span class="line"><span class="comment">&lt;!--声明Hibernate配置文件的开始--&gt;</span>          </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-configuration</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--表明以下的配置是针对session-factory配置的，SessionFactory是Hibernate中的一个类，这个类主要负责保存HIbernate的配置信息，以及对Session的操作--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">session-factory</span>&gt;</span>        </span><br><span class="line">        <span class="comment">&lt;!--配置数据库的驱动程序，Hibernate在连接数据库时，需要用到数据库的驱动程序--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.driver_class&quot;</span>&gt;</span>oracle.jdbc.driver.OracleDriver <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--设置数据库的连接url:jdbc:mysql://localhost/hibernate,其中localhost表示mysql服务器名称，此处为本机，    hibernate是数据库名--&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.url&quot;</span>&gt;</span>jdbc:mysql://localhost/hibernate<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--连接数据库是用户名--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.username&quot;</span>&gt;</span>root <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--连接数据库是密码--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.password&quot;</span>&gt;</span>123456 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>            </span><br><span class="line">        <span class="comment">&lt;!--数据库连接池的大小--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.connection.pool.size&quot;</span>&gt;</span>20 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>            </span><br><span class="line">        <span class="comment">&lt;!--是否在后台显示Hibernate用到的SQL语句，开发时设置为true，便于差错，程序运行时可以在Eclipse的控制台显示Hibernate的执行Sql语句。项目部署后可以设置为false，提高运行效率--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.show_sql&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.fetch_size是指Hibernate每次从数据库中取出并放到JDBC的Statement中的记录条数。Fetch Size设的越大，读数据库的次数越少，速度越快，Fetch Size越小，读数据库的次数越多，速度越慢--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.fetch_size&quot;</span>&gt;</span>50 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.batch_size&quot;</span>&gt;</span>23 <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbc.use_scrollable_resultset&quot;</span>&gt;</span>false <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--connection.useUnicode连接数据库时是否使用Unicode编码--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;Connection.useUnicode&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--connection.characterEncoding连接数据库时数据的传输字符集编码方式，最好设置为gbk，用gb2312有的字符不全--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;connection.characterEncoding&quot;</span>&gt;</span>gbk <span class="tag">&lt;/<span class="name">property</span>&gt;</span>          </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--hibernate.dialect 只是Hibernate使用的数据库方言,就是要用Hibernate连接那种类型的数据库服务器。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernate.dialect&quot;</span>&gt;</span>org.hibernate.dialect.MySQLDialect <span class="tag">&lt;/<span class="name">property</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--指定映射文件为“hibernate/ch1/UserInfo.hbm.xml”--&gt;</span>            </span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span>=<span class="string">&quot;org/mxg/UserInfo.hbm.xml&quot;</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-factory</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-configuration</span>&gt;</span>        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span>      </span><br><span class="line">    //连接驱动        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driverClassName&#125;&quot;</span> /&gt;</span>      </span><br><span class="line">    //连接url,        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span>      </span><br><span class="line">    //连接用户名        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span>      </span><br><span class="line">    //连接密码        </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span>      </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>      </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hbSessionFactory&quot;</span>      </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean&quot;</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span>&gt;</span>      </span><br><span class="line">        //hibernate配置文件位置        </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WEB-INF/hibernate.cfg.xml <span class="tag">&lt;/<span class="name">value</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configurationClass&quot;</span>      </span></span><br><span class="line"><span class="tag">    <span class="attr">value</span>=<span class="string">&quot;org.hibernate.cfg.AnnotationConfiguration&quot;</span> /&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernateProperties&quot;</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span>      </span><br><span class="line">            //针对oracle数据库的方言,特定的关系数据库生成优化的SQL        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dialect&quot;</span>&gt;</span>      </span><br><span class="line">            org.hibernate.dialect.OracleDialect        </span><br><span class="line">            <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //选择HQL解析器的实现        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.query.factory_class&quot;</span>&gt;</span>      </span><br><span class="line">            org.hibernate.hql.ast.ASTQueryTranslatorFactory        </span><br><span class="line">            <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //是否在控制台打印sql语句        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.show_sql&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //在Hibernate系统参数中hibernate.use_outer_join被打开的情况下,该参数用来允许使用outer join来载入此集合的数据。        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.use_outer_join&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //默认打开，启用cglib反射优化。cglib是用来在Hibernate中动态生成PO字节码的，打开优化可以加快字节码构造的速度        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.cglib.use_reflection_optimizer&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //输出格式化后的sql,更方便查看        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.format_sql&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //“useUnicode”和“characterEncoding”决定了它是否在客户端和服务器端传输过程中进行Encode，以及如何进行Encode        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.connection.useUnicode&quot;</span>&gt;</span>true <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //允许查询缓存, 个别查询仍然需要被设置为可缓存的.        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.cache.use_query_cache&quot;</span>&gt;</span>false <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.default_batch_fetch_size&quot;</span>&gt;</span>16 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //连接池的最大活动个数        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.maxActive&quot;</span>&gt;</span>100 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //当连接池中的连接已经被耗尽的时候，DBCP将怎样处理(0 = 失败,1 = 等待,2  =  增长)        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.whenExhaustedAction&quot;</span>&gt;</span>1 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //最大等待时间        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.maxWait&quot;</span>&gt;</span>1200 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            //没有人用连接的时候，最大闲置的连接个数        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.maxIdle&quot;</span>&gt;</span>10 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            ##以下是对prepared statement的处理，同上。        </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.ps.maxActive&quot;</span>&gt;</span>100 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.ps.whenExhaustedAction&quot;</span>&gt;</span>1 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.ps.maxWait&quot;</span>&gt;</span>1200 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dbcp.ps.maxIdle&quot;</span>&gt;</span>10 <span class="tag">&lt;/<span class="name">prop</span>&gt;</span>      </span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span>      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>      </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="XXX-hbm-xml"><a href="#XXX-hbm-xml" class="headerlink" title="XXX.hbm.xml"></a>XXX.hbm.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span>    </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">hibernate-mapping</span> <span class="keyword">PUBLIC</span>     </span></span><br><span class="line"><span class="meta">    <span class="string">&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;</span>    </span></span><br><span class="line"><span class="meta">    <span class="string">&quot;http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd&quot;</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">    &lt;hibernate-mapping&gt;一般不去配置，采用默认即可。    </span></span><br><span class="line"><span class="comment">    default-cascade=&quot;none&quot;：默认的级联风格，表与表联动。    </span></span><br><span class="line"><span class="comment">    default-lazy=&quot;true&quot;：默认延迟加载    </span></span><br><span class="line"><span class="comment"> --&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">        &lt;class&gt;：使用class元素定义一个持久化类。    </span></span><br><span class="line"><span class="comment">        name=&quot;cn.javass.user.vo.UserModel&quot;：持久化类的java全限定名；    </span></span><br><span class="line"><span class="comment">        table=&quot;tbl_user&quot;：对应数据库表名；    </span></span><br><span class="line"><span class="comment">        mutable=&quot;true&quot;：默认为true，设置为false时则不可以被应用程序更新或删除；    </span></span><br><span class="line"><span class="comment">        dynamic-insert=&quot;false&quot;：默认为false，动态修改那些有改变过的字段，而不用修改所有字段；    </span></span><br><span class="line"><span class="comment">        dynamic-update=&quot;false&quot;：默认为false，动态插入非空值字段；    </span></span><br><span class="line"><span class="comment">        select-before-update=&quot;false&quot;：默认为false，在修改之前先做一次查询，与用户的值进行对比，有变化都会真正更新；    </span></span><br><span class="line"><span class="comment">        optimistic-lock=&quot;version&quot;：默认为version(检查version/timestamp字段)，取值：all(检查全部字段)、dirty(只检查修改过的字段)、    </span></span><br><span class="line"><span class="comment">                                   none(不使用乐观锁定)，此参数主要用来处理并发，每条值都有固定且唯一的版本，版本为最新时才能执行操作；    </span></span><br><span class="line"><span class="comment">     --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">&quot;cn.javass.user.vo.UserModel&quot;</span> <span class="attr">table</span>=<span class="string">&quot;tbl_user&quot;</span> <span class="attr">dynamic-insert</span>=<span class="string">&quot;true&quot;</span> <span class="attr">dynamic-update</span>=<span class="string">&quot;true&quot;</span> <span class="attr">optimistic-lock</span>=<span class="string">&quot;version&quot;</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;id&gt;：定义了该属性到数据库表主键字段的映射。    </span></span><br><span class="line"><span class="comment">            name=&quot;userId&quot;：标识属性的名字；    </span></span><br><span class="line"><span class="comment">            column=&quot;userId&quot;：表主键字段的名字，如果不填写与name一样；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">&quot;userId&quot;</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!-- &lt;generator&gt;：指定主键由什么生成，推荐使用uuid（随机生成唯一通用的表示符，实体类的ID必须是String），  </span></span><br><span class="line"><span class="comment">                               native（让数据库自动选择用什么生成（根据底层数据库的能力选择identity，sequence或hilo中的一种）），  </span></span><br><span class="line"><span class="comment">                               assigned（指用户手工填入，默认）。 --&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">&quot;uuid&quot;</span>/&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">id</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;version/&gt;：使用版本控制来处理并发，要开启optimistic-lock=&quot;version&quot;和dynamic-update=&quot;true&quot;。    </span></span><br><span class="line"><span class="comment">            name=&quot;version&quot;：持久化类的属性名，column=&quot;version&quot;：指定持有版本号的字段名；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span> <span class="attr">name</span>=<span class="string">&quot;version&quot;</span> <span class="attr">column</span>=<span class="string">&quot;version&quot;</span>/&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;property&gt;：为类定义一个持久化的javaBean风格的属性。    </span></span><br><span class="line"><span class="comment">            name=&quot;name&quot;：标识属性的名字，以小写字母开头；    </span></span><br><span class="line"><span class="comment">            column=&quot;name&quot;：表主键字段的名字，如果不填写与name一样；    </span></span><br><span class="line"><span class="comment">            update=&quot;true&quot;/insert=&quot;true&quot;：默认为true，表示可以被更新或插入；    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> /&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>/&gt;</span>    </span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            组件映射：把多个属性打包在一起当一个属性使用，用来把类的粒度变小。    </span></span><br><span class="line"><span class="comment">            &lt;component name=&quot;属性，这里指对象&quot;&gt;    </span></span><br><span class="line"><span class="comment">                &lt;property name=&quot;name1&quot;&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">                &lt;property name=&quot;name2&quot;&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">            &lt;/component&gt;    </span></span><br><span class="line"><span class="comment">         --&gt;</span>    </span><br><span class="line"></span><br><span class="line">         <span class="comment">&lt;!--     </span></span><br><span class="line"><span class="comment">            &lt;join&gt;:一个对象映射多个表，该元素必须放在所有&lt;property&gt;之后。    </span></span><br><span class="line"><span class="comment">            &lt;join table=&quot;tbl_test：子表名&quot;&gt;    </span></span><br><span class="line"><span class="comment">                &lt;key column=&quot;uuid：子表主键&quot;&gt;&lt;/key&gt;    </span></span><br><span class="line"><span class="comment">            &lt;property name=&quot;name1：对象属性&quot; column=&quot;name：子表字段&quot;&gt;&lt;/property&gt;    </span></span><br><span class="line"><span class="comment">         &lt;/join&gt;    </span></span><br><span class="line"><span class="comment">          --&gt;</span>    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">class</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA生成 Serializable 序列化 UID 的快捷键</title>
    <url>/2019/02/20/IDEA%E7%94%9F%E6%88%90-Serializable-%E5%BA%8F%E5%88%97%E5%8C%96-UID-%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p>首先创建一个类如User, 让该类实现Serializable序列化接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class User implements Serializable &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>然后在菜单选择 <code>File</code> | <code>Settings</code> | <code>Editor</code> | <code>Inspections</code></p>
<span id="more"></span>

<p>在搜索框里输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Serializable class without &#x27;serialVersionUID&#x27;</span><br></pre></td></tr></table></figure>

<p>在搜索到的选项中勾选 <code>Serializable class without &#39;serialVersionUID&#39;</code> 点击 <code>OK</code></p>
<p>之后我们要将光标放到实体类的名字 <code>User</code> 上，然后 <code>Alt</code> + <code>Enter</code>(回车)</p>
<p>会出现 <code>Add &#39;serialVersionUID&#39; field</code> 这个选项, 然后直接回车即可</p>
<p>之后我们就可以看到自动生成的UID了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">private static final long serialVersionUID = 1L;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>idea</category>
        <category>Serializable</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>Serializable</tag>
        <tag>序列化</tag>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>HttpUtils 阿里云市场 api网关请求签名</title>
    <url>/2019/09/18/HttpUtils-%E9%98%BF%E9%87%8C%E4%BA%91%E5%B8%82%E5%9C%BA-api%E7%BD%91%E5%85%B3%E8%AF%B7%E6%B1%82%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<p>HttpUtils 多用于 <code>api网关请求签名</code></p>
<p>请求方式 : <code>Get</code> <code>Post</code> <code>Put</code> <code>Delete</code></p>
<span id="more"></span>

<h2 id="http接口请求工具类-HttpUtils-class"><a href="#http接口请求工具类-HttpUtils-class" class="headerlink" title="http接口请求工具类 HttpUtils.class"></a>http接口请求工具类 HttpUtils.class</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpDelete;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPut;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.scheme.Scheme;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.scheme.SchemeRegistry;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.ByteArrayEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.DefaultHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.X509TrustManager;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyManagementException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 重要提示如下:</span></span><br><span class="line"><span class="comment"> * HttpUtils请从</span></span><br><span class="line"><span class="comment"> * https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/src/main/java/com/aliyun/api/gateway/demo/util/HttpUtils.java</span></span><br><span class="line"><span class="comment"> * 下载</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 相应的依赖请参照</span></span><br><span class="line"><span class="comment"> * https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/pom.xml</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * get</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doGet</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; querys)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post form</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bodys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doPost</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; querys,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; bodys)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bodys != <span class="literal">null</span>) &#123;</span><br><span class="line">            List&lt;NameValuePair&gt; nameValuePairList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;NameValuePair&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (String key : bodys.keySet()) &#123;</span><br><span class="line">                nameValuePairList.add(<span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(key, bodys.get(key)));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">UrlEncodedFormEntity</span> <span class="variable">formEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(nameValuePairList, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            formEntity.setContentType(<span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>);</span><br><span class="line">            request.setEntity(formEntity);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Post String</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doPost</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; querys,</span></span><br><span class="line"><span class="params">                                      String body)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(body)) &#123;</span><br><span class="line">            request.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(body, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Post stream</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doPost</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                      Map&lt;String, String&gt; querys,</span></span><br><span class="line"><span class="params">                                      <span class="type">byte</span>[] body)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (body != <span class="literal">null</span>) &#123;</span><br><span class="line">            request.setEntity(<span class="keyword">new</span> <span class="title class_">ByteArrayEntity</span>(body));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Put String</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doPut</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; querys,</span></span><br><span class="line"><span class="params">                                     String body)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPut</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPut</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(body)) &#123;</span><br><span class="line">            request.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(body, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Put stream</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doPut</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                     Map&lt;String, String&gt; querys,</span></span><br><span class="line"><span class="params">                                     <span class="type">byte</span>[] body)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpPut</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPut</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (body != <span class="literal">null</span>) &#123;</span><br><span class="line">            request.setEntity(<span class="keyword">new</span> <span class="title class_">ByteArrayEntity</span>(body));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Delete</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> headers</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> querys</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpResponse <span class="title function_">doDelete</span><span class="params">(String host, String path, String method,</span></span><br><span class="line"><span class="params">                                        Map&lt;String, String&gt; headers,</span></span><br><span class="line"><span class="params">                                        Map&lt;String, String&gt; querys)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> wrapClient(host);</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpDelete</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpDelete</span>(buildUrl(host, path, querys));</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; e : headers.entrySet()) &#123;</span><br><span class="line">            request.addHeader(e.getKey(), e.getValue());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient.execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">buildUrl</span><span class="params">(String host, String path, Map&lt;String, String&gt; querys)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sbUrl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sbUrl.append(host);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isBlank(path)) &#123;</span><br><span class="line">            sbUrl.append(path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != querys) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">sbQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; query : querys.entrySet()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &lt; sbQuery.length()) &#123;</span><br><span class="line">                    sbQuery.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isBlank(query.getKey()) &amp;&amp; !StringUtils.isBlank(query.getValue())) &#123;</span><br><span class="line">                    sbQuery.append(query.getValue());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!StringUtils.isBlank(query.getKey())) &#123;</span><br><span class="line">                    sbQuery.append(query.getKey());</span><br><span class="line">                    <span class="keyword">if</span> (!StringUtils.isBlank(query.getValue())) &#123;</span><br><span class="line">                        sbQuery.append(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">                        sbQuery.append(URLEncoder.encode(query.getValue(), <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> &lt; sbQuery.length()) &#123;</span><br><span class="line">                sbUrl.append(<span class="string">&quot;?&quot;</span>).append(sbQuery);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sbUrl.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HttpClient <span class="title function_">wrapClient</span><span class="params">(String host)</span> &#123;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultHttpClient</span>();</span><br><span class="line">        <span class="keyword">if</span> (host.startsWith(<span class="string">&quot;https://&quot;</span>)) &#123;</span><br><span class="line">            sslClient(httpClient);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sslClient</span><span class="params">(HttpClient httpClient)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">SSLContext</span> <span class="variable">ctx</span> <span class="operator">=</span> SSLContext.getInstance(<span class="string">&quot;TLS&quot;</span>);</span><br><span class="line">            <span class="type">X509TrustManager</span> <span class="variable">tm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">X509TrustManager</span>() &#123;</span><br><span class="line">                <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkClientTrusted</span><span class="params">(X509Certificate[] xcs, String str)</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkServerTrusted</span><span class="params">(X509Certificate[] xcs, String str)</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            ctx.init(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">TrustManager</span>[]&#123;tm&#125;, <span class="literal">null</span>);</span><br><span class="line">            <span class="type">SSLSocketFactory</span> <span class="variable">ssf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SSLSocketFactory</span>(ctx);</span><br><span class="line">            ssf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);</span><br><span class="line">            <span class="type">ClientConnectionManager</span> <span class="variable">ccm</span> <span class="operator">=</span> httpClient.getConnectionManager();</span><br><span class="line">            <span class="type">SchemeRegistry</span> <span class="variable">registry</span> <span class="operator">=</span> ccm.getSchemeRegistry();</span><br><span class="line">            registry.register(<span class="keyword">new</span> <span class="title class_">Scheme</span>(<span class="string">&quot;https&quot;</span>, <span class="number">443</span>, ssf));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (KeyManagementException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="相应的依赖请参照"><a href="#相应的依赖请参照" class="headerlink" title="相应的依赖请参照"></a>相应的依赖请参照</h2><ul>
<li><a href="https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/pom.xml">https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/pom.xml</a></li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.api.gateway<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java.demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpcore<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.7.v20160115<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>http</category>
        <category>api网关请求</category>
      </categories>
      <tags>
        <tag>HttpUtils</tag>
        <tag>http</tag>
        <tag>接口请求</tag>
        <tag>工具类</tag>
        <tag>api网关请求</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 下自动生成数据库实体类</title>
    <url>/2018/05/15/IntelliJ-IDEA-%E4%B8%8B%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E4%BD%93%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="按下图点击-view-选择-tool-windows-选择-database-并点击"><a href="#按下图点击-view-选择-tool-windows-选择-database-并点击" class="headerlink" title="按下图点击 view 选择 tool windows 选择 database 并点击"></a>按下图点击 <code>view</code> 选择 <code>tool windows</code> 选择 <code>database</code> 并点击</h2><h2 id="弹出Database窗口，点击加号-选择-data-source-选择想添加的数据库并点击"><a href="#弹出Database窗口，点击加号-选择-data-source-选择想添加的数据库并点击" class="headerlink" title="弹出Database窗口，点击加号 + 选择 data source 选择想添加的数据库并点击"></a>弹出Database窗口，点击加号 <code>+</code> 选择 <code>data source</code> 选择想添加的数据库并点击</h2><h2 id="弹出DataSources-and-Drivers窗口，填写连接数据库的信息"><a href="#弹出DataSources-and-Drivers窗口，填写连接数据库的信息" class="headerlink" title="弹出DataSources and Drivers窗口，填写连接数据库的信息"></a>弹出DataSources and Drivers窗口，填写连接数据库的信息</h2><span id="more"></span>

<p><code>Host</code>  ip地址  本地填 <code>localhost</code></p>
<p><code>Database</code>  数据库名称</p>
<p><code>User</code>  账号</p>
<p><code>Password</code>  密码</p>
<p>第一次有些没有安装对应的插件，下面会有警告 点击警告下载即可</p>
<h2 id="点击一下-test-Connection-如果连接成功，那么-test-Connection-按钮的右边会显示-一句话提示连接成功。连接成功后就点击右下角的OK"><a href="#点击一下-test-Connection-如果连接成功，那么-test-Connection-按钮的右边会显示-一句话提示连接成功。连接成功后就点击右下角的OK" class="headerlink" title="点击一下 test Connection 如果连接成功，那么 test Connection 按钮的右边会显示 一句话提示连接成功。连接成功后就点击右下角的OK"></a>点击一下 <code>test Connection</code> 如果连接成功，那么 <code>test Connection</code> 按钮的右边会显示 一句话提示连接成功。连接成功后就点击右下角的OK</h2><h2 id="选择需要生成的数据表，右键选择-scripted-extensions-点击-generate-POJOs-groovy-即可"><a href="#选择需要生成的数据表，右键选择-scripted-extensions-点击-generate-POJOs-groovy-即可" class="headerlink" title="选择需要生成的数据表，右键选择 scripted extensions 点击 generate POJOs.groovy 即可"></a>选择需要生成的数据表，右键选择 <code>scripted extensions</code> 点击 <code>generate POJOs.groovy</code> 即可</h2>]]></content>
      <categories>
        <category>idea</category>
        <category>自动生成数据库实体类</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>自动生成数据库实体类</tag>
      </tags>
  </entry>
  <entry>
    <title>JWT生成Token做登录校验</title>
    <url>/2018/12/10/JWT%E7%94%9F%E6%88%90Token%E5%81%9A%E7%99%BB%E5%BD%95%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="JWT生成Token做登录校验"><a href="#JWT生成Token做登录校验" class="headerlink" title="JWT生成Token做登录校验"></a>JWT生成Token做登录校验</h2><h2 id="JWT官网"><a href="#JWT官网" class="headerlink" title="JWT官网"></a><a href="https://jwt.io/">JWT官网</a></h2><h3 id="文章采用提供者auth0版本-贡献者GitHub"><a href="#文章采用提供者auth0版本-贡献者GitHub" class="headerlink" title="文章采用提供者auth0版本(贡献者GitHub)"></a>文章采用提供者<a href="https://auth0.com/">auth0</a>版本(<a href="https://github.com/auth0/java-jwt">贡献者GitHub</a>)</h3><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.auth0&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;java-jwt&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.4.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import com.auth0.jwt.JWT;</span><br><span class="line">import com.auth0.jwt.JWTVerifier;</span><br><span class="line">import com.auth0.jwt.algorithms.Algorithm;</span><br><span class="line">import com.auth0.jwt.impl.PublicClaims;</span><br><span class="line">import com.auth0.jwt.interfaces.Claim;</span><br><span class="line">import com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"></span><br><span class="line">import java.util.Calendar;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">public class JwtToken &#123;</span><br><span class="line"></span><br><span class="line">    private static final String SECRET = &quot;simon&quot;;//公用私密</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生成token</span><br><span class="line">     *</span><br><span class="line">     * @param object</span><br><span class="line">     * @param minute</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static String createToken(Object object, Integer minute) throws Exception &#123;</span><br><span class="line">        //签发时间</span><br><span class="line">        Date iaDate = new Date();</span><br><span class="line"></span><br><span class="line">        //TODO 转换加密对象 User user=(User)object;</span><br><span class="line"></span><br><span class="line">        //过期时间 - 一分钟过期</span><br><span class="line">        Calendar nowTime = Calendar.getInstance();</span><br><span class="line">        nowTime.add(Calendar.MINUTE, minute);</span><br><span class="line">        Date expiresDate = nowTime.getTime();</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();</span><br><span class="line">        map.put(PublicClaims.ALGORITHM, &quot;HS256&quot;);</span><br><span class="line">        map.put(PublicClaims.TYPE, &quot;JWT&quot;);</span><br><span class="line"></span><br><span class="line">        String token = JWT.create()</span><br><span class="line">                .withHeader(map)//TODO .withClaim(&quot;id&quot;,user.getId())</span><br><span class="line">                .withExpiresAt(expiresDate)//设置过期时间,过期时间大于签发时间</span><br><span class="line">                .withIssuedAt(iaDate)//设置签发时间</span><br><span class="line">                .sign(Algorithm.HMAC256(SECRET));//加密</span><br><span class="line"></span><br><span class="line">        return token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 解密token</span><br><span class="line">     *</span><br><span class="line">     * @param token</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static Map&lt;String, Claim&gt; verifyToken(String token) throws Exception &#123;</span><br><span class="line">        JWTVerifier verifier = JWT.require(Algorithm.HMAC256(SECRET)).build();</span><br><span class="line">        try &#123;</span><br><span class="line">            DecodedJWT verify = verifier.verify(token);</span><br><span class="line">            return verify.getClaims();</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            throw new RuntimeException(&quot;Illegal request&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JWT</category>
      </categories>
      <tags>
        <tag>JWT</tag>
        <tag>token</tag>
        <tag>jsonwebtoken</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中继承与多态实例</title>
    <url>/2017/07/04/Java%E4%B8%AD%E7%BB%A7%E6%89%BF%E4%B8%8E%E5%A4%9A%E6%80%81%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="继承的概念"><a href="#继承的概念" class="headerlink" title="继承的概念"></a>继承的概念</h2><p>继承是面向对象最显著的一个特性。继承是从已有的类中派生出新的类，新的类能吸收已有类的数据属性和行为，并能扩展新的能力。子类又被称为派生类； 父类又被称为超类（Super Class）。一个子类只能够继承一个父类，存在单继承局限。 在一个子类继承的时候，实际上会继承父类之中的所有操作（属性、方法），但是需要注意的是，对于所有的非私有（no private）操作属于显式继承（可以直接利用对象操作），而所有的私有操作属于隐式继承（间接完成）。在继承关系之中，如果要实例化子类对象，会默认先调用父类构造，为父类之中的属性初始化，之后再调用子类构造，为子类之中的属性初始化，即：默认情况下，子类会找到父类之中的无参构造方法。</p>
<span id="more"></span>

<h2 id="用于理解的demo"><a href="#用于理解的demo" class="headerlink" title="用于理解的demo"></a>用于理解的demo</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">show</span><span class="params">(D obj)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">&quot;A and D&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">show</span><span class="params">(A obj)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">&quot;A and A&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">show</span><span class="params">(B obj)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">&quot;B and B&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">show</span><span class="params">(A obj)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">&quot;B and A&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span> <span class="keyword">extends</span> <span class="title class_">B</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		<span class="type">A</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">		<span class="type">A</span> <span class="variable">a2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">		<span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">		<span class="type">C</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line">		<span class="type">D</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">D</span>();</span><br><span class="line"></span><br><span class="line">		System.out.println(<span class="string">&quot;1--&quot;</span> + a1.show(b));</span><br><span class="line">		System.out.println(<span class="string">&quot;2--&quot;</span> + a1.show(c));</span><br><span class="line">		System.out.println(<span class="string">&quot;3--&quot;</span> + a1.show(d));</span><br><span class="line">		System.out.println(<span class="string">&quot;4--&quot;</span> + a2.show(b));</span><br><span class="line">		System.out.println(<span class="string">&quot;5--&quot;</span> + a2.show(c));</span><br><span class="line">		System.out.println(<span class="string">&quot;6--&quot;</span> + a2.show(d));</span><br><span class="line">		System.out.println(<span class="string">&quot;7--&quot;</span> + b.show(b));</span><br><span class="line">		System.out.println(<span class="string">&quot;8--&quot;</span> + b.show(c));</span><br><span class="line">		System.out.println(<span class="string">&quot;9--&quot;</span> + b.show(d));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="控制台输出结果"><a href="#控制台输出结果" class="headerlink" title="控制台输出结果"></a>控制台输出结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1--A and A</span><br><span class="line">2--A and A</span><br><span class="line">3--A and D</span><br><span class="line">4--B and A</span><br><span class="line">5--B and A</span><br><span class="line">6--A and D</span><br><span class="line">7--B and B</span><br><span class="line">8--B and B</span><br><span class="line">9--A and D</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
        <category>extends</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>继承</tag>
        <tag>多态</tag>
        <tag>extends</tag>
        <tag>重写</tag>
      </tags>
  </entry>
  <entry>
    <title>Java标签使用</title>
    <url>/2019/05/06/Java%E6%A0%87%E7%AD%BE%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>Java 中的标签是为循环设计的，是为了在多重循环中方便的使用break 和coutinue 。</p>
<p>以下实例当在循环中使用 break 或 continue 循环时跳到指定的标签处</p>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">strSearch</span> <span class="operator">=</span> <span class="string">&quot;This is the string in which you have to search for a substring.&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">substring</span> <span class="operator">=</span> <span class="string">&quot;substring&quot;</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">found</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> strSearch.length() - substring.length();</span><br><span class="line">        testlbl:</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= max; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> substring.length();</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (length-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(strSearch.charAt(j++) != substring.charAt(k++))&#123;</span><br><span class="line">                    <span class="keyword">continue</span> testlbl;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            found = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span> testlbl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (found) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;发现子字符串。&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;字符串中没有发现子字符串。&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以上代码运行输出结果为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发现子字符串。</span><br></pre></td></tr></table></figure>

<p>break + 标签, 跳出循环, 并到标签处, 下次不再进入循环</p>
<p>continue + 标签, 跳出循环, 从标签处继续执行, 可继续进入循环条件</p>
]]></content>
      <categories>
        <category>java</category>
        <category>标签</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>标签</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的Excel读写-easyExcel方法封装</title>
    <url>/2019/05/20/Java%E7%9A%84Excel%E8%AF%BB%E5%86%99-easyExcel%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<h2 id="JAVA解析的Excel工具easyexcel"><a href="#JAVA解析的Excel工具easyexcel" class="headerlink" title="JAVA解析的Excel工具easyexcel"></a><a href="https://github.com/alibaba/easyexcel">JAVA解析的Excel工具easyexcel</a></h2><p>Java解析，生成Excel比较有名的框架有Apache poi，jxl。但他们都存在一个严重的问题就是非常的耗内存，poi有一套SAX模式的API可以一定程度的解决一些内存溢出的问题，但POI还是有一些缺陷，比如07版Excel解压缩以及解压后存储都是在内存中完成的，内存消耗依然很大.easyexcel重写了poi对07版Excel的解析，能够原本一个3M的excel用POI sax依然需要100M左右内存降低到KB级别，并且再大的Excel中不会出现内存溢出，03版依赖POI的萨克斯模式。在上层做了模型转换的封装，让使用者更加简单方便</p>
<span id="more"></span>

<h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="gitee源码"><a href="#gitee源码" class="headerlink" title="gitee源码"></a><a href="https://gitee.com/admin-james/easyexcel-encapsulation">gitee源码</a></h3><p>请自行下载源码,访问 <a href="http://localhost/readExcelWithSheets"><code>localhost/readExcelWithSheets</code></a> 下载文件后自行用 <a href="https://www.getpostman.com/downloads/"><code>Postman</code></a> 测试</p>
]]></content>
      <categories>
        <category>easyExcel</category>
      </categories>
      <tags>
        <tag>easyExcel</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Java集合总结</title>
    <url>/2016/11/12/Java%E9%9B%86%E5%90%88%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="Java集合类型"><a href="#Java集合类型" class="headerlink" title="Java集合类型"></a>Java集合类型</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Java导包</span></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="泛型集合前面的都是接口"><a href="#泛型集合前面的都是接口" class="headerlink" title="泛型集合前面的都是接口"></a>泛型集合前面的都是接口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 泛型集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * K键泛型集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Map&lt;Integer, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Map添加数据</span></span><br><span class="line">map.put(Integer, String);	<span class="comment">//put塞入的意思</span></span><br></pre></td></tr></table></figure>

<h3 id="集合前面的都是类"><a href="#集合前面的都是类" class="headerlink" title="集合前面的都是类"></a>集合前面的都是类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">ArrayList</span> <span class="variable">array</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * K键集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">Hashtable</span> <span class="variable">hashtable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hashtable</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set集合	//唯一	//里面的值不能有重复的;重复添加不报错;会替换最后添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">Set</span> <span class="variable">set</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br></pre></td></tr></table></figure>

<h2 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//清空集合数据</span></span><br><span class="line">list.clear();</span><br></pre></td></tr></table></figure>

<h2 id="ArrayList集合的应用"><a href="#ArrayList集合的应用" class="headerlink" title="ArrayList集合的应用"></a>ArrayList集合的应用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明集合</span></span><br><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//新增数据</span></span><br><span class="line">list.add(Object类型值).</span><br><span class="line">list.add(<span class="type">int</span> 索引号，值)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合个数</span></span><br><span class="line">list.size();	<span class="comment">//长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> (集合存储数据类型)list.get(<span class="type">int</span> i);	<span class="comment">//get得到集合下标位置int 类型 i 的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式</span></span><br><span class="line">lis.remove(<span class="number">0</span>);	<span class="comment">//删除索引第一个的数据</span></span><br><span class="line">lis.remove(Object类型值);	<span class="comment">//按照指定的对象名删除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断集合中的对象是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.contains(集合存储数据类型对象))&#123;</span><br><span class="line">	<span class="comment">//返回Boolean类型	存在为true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="遍历方式-调用集合数据里的对象方法"><a href="#遍历方式-调用集合数据里的对象方法" class="headerlink" title="遍历方式(调用集合数据里的对象方法)"></a>遍历方式(调用集合数据里的对象方法)</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//增强for循环</span></span><br><span class="line"><span class="keyword">for</span>(Object obj : list)&#123;</span><br><span class="line">	((集合存储数据类型)obj).该对象拥有的方法;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//for循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.Size(); i++)&#123;</span><br><span class="line">	<span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> (集合存储数据类型)list.get(i);	<span class="comment">//get得到集合下标位置的数据</span></span><br><span class="line">	集合存储数据类型 字段名 = (集合存储数据类型)obj;	<span class="comment">//拆箱</span></span><br><span class="line">	字段名.该对象拥有的方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="LinkedList集合的应用"><a href="#LinkedList集合的应用" class="headerlink" title="LinkedList集合的应用"></a>LinkedList集合的应用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明集合</span></span><br><span class="line"><span class="type">LinkedList</span> <span class="variable">list</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//新增数据(在ArrayList基础上新增方法)</span></span><br><span class="line">list.addFirst(Object类型值);	<span class="comment">//新增到第一个位置</span></span><br><span class="line">list.addLast(Object类型值);	<span class="comment">//新增到最后一个位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据(在ArrayList基础上新增方法)</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> (集合存储数据类型)list.getFirst();		<span class="comment">//getFirst得到集合第一个位置的数据</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> (集合存储数据类型)list.getLast();		<span class="comment">//getLast得到集合最后一个位置的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式(在ArrayList基础上新增方法)</span></span><br><span class="line">list.removeFirst();	<span class="comment">//删除第一个对象</span></span><br><span class="line">list.removeLast();	<span class="comment">//删除最后一个对象</span></span><br></pre></td></tr></table></figure>

<h2 id="K键"><a href="#K键" class="headerlink" title="K键"></a>K键</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断带K键的集合中的K键是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.containsKey(集合存储K键类型值))&#123;</span><br><span class="line">	<span class="comment">//返回Boolean类型	存在为true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断带K键的集合中的Value值是否存在</span></span><br><span class="line"><span class="keyword">if</span>(list.containsValue(集合存储Value类型值))&#123;</span><br><span class="line">	<span class="comment">//返回Boolean类型	存在为true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//得到集合里面的数据</span></span><br><span class="line">集合存value储数据类型 value = (集合存储value数据类型)list.get(key);	<span class="comment">//get得到集合指定的K键名的value 数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除方式</span></span><br><span class="line">lis.remove(集合存储K键类型值);	<span class="comment">//按照指定的K键名删除对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//分别显示键集 / 值集 / 键值对集合</span></span><br><span class="line">list.keySet();		<span class="comment">//键集</span></span><br><span class="line">list.values();		<span class="comment">//值集</span></span><br><span class="line">list;			<span class="comment">//键值对集合</span></span><br></pre></td></tr></table></figure>

<h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Set</span> <span class="variable">keys</span> <span class="operator">=</span> map.keySet();	<span class="comment">//迭代器方式</span></span><br><span class="line"><span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> keys.iterator();	<span class="comment">//获得Iterator对象</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">	<span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String)it.next();	<span class="comment">//获得键名</span></span><br><span class="line">	集合存value储数据类型 value = (集合存储value数据类型)list.get(key);	<span class="comment">//get得到集合指定的K键名的value 数据</span></span><br><span class="line">	value.该对象拥有的方法;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
        <category>集合</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>集合</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux centOS 7.X 服务器Docker安装和部署容器化Redis</title>
    <url>/2021/10/26/Linux-centOS-7-X-%E6%9C%8D%E5%8A%A1%E5%99%A8Docker%E5%AE%89%E8%A3%85%E5%92%8C%E9%83%A8%E7%BD%B2%E5%AE%B9%E5%99%A8%E5%8C%96Redis/</url>
    <content><![CDATA[<h2 id="Linux环境下安装Docker"><a href="#Linux环境下安装Docker" class="headerlink" title="Linux环境下安装Docker"></a>Linux环境下安装Docker</h2><h3 id="依次运行以下命令添加yum源"><a href="#依次运行以下命令添加yum源" class="headerlink" title="依次运行以下命令添加yum源"></a>依次运行以下命令添加yum源</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum clean all</span><br><span class="line">yum list</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="安装并运行Docker"><a href="#安装并运行Docker" class="headerlink" title="安装并运行Docker"></a>安装并运行Docker</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker-io -y</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h3 id="检查安装结果"><a href="#检查安装结果" class="headerlink" title="检查安装结果"></a>检查安装结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure>

<h3 id="运行Docker守护进程"><a href="#运行Docker守护进程" class="headerlink" title="运行Docker守护进程"></a>运行Docker守护进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h3 id="停止Docker守护进程"><a href="#停止Docker守护进程" class="headerlink" title="停止Docker守护进程"></a>停止Docker守护进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<h3 id="重启Docker守护进程"><a href="#重启Docker守护进程" class="headerlink" title="重启Docker守护进程"></a>重启Docker守护进程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h3 id="修改镜像仓库"><a href="#修改镜像仓库" class="headerlink" title="修改镜像仓库"></a>修改镜像仓库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<h3 id="改为下面内容-然后重启Docker"><a href="#改为下面内容-然后重启Docker" class="headerlink" title="改为下面内容 然后重启Docker"></a>改为下面内容 然后重启Docker</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span><span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;https://pb5bklzr.mirror.aliyuncs.com&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="docker部署Redis-定义6379伪端口-转发-默认端口6379-并配置密码"><a href="#docker部署Redis-定义6379伪端口-转发-默认端口6379-并配置密码" class="headerlink" title="docker部署Redis(定义6379伪端口 转发 默认端口6379) 并配置密码"></a>docker部署Redis(定义6379伪端口 转发 默认端口6379) 并配置密码</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -itd --name redis -p 6379:6379 redis --requirepass 123456</span></span><br></pre></td></tr></table></figure>

<h3 id="持久化部署"><a href="#持久化部署" class="headerlink" title="持久化部署"></a>持久化部署</h3><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -itd --name redis -p 6379:6379 redis --requirepass 123456 -v /data/redis/data:/data</span></span><br></pre></td></tr></table></figure>

<h3 id="Rancher配置"><a href="#Rancher配置" class="headerlink" title="Rancher配置"></a>Rancher配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-server --appendonly yes --requirepass 123456</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">Options</th>
<th align="left">Mean</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-i</td>
<td align="left">以交互模式运行容器，通常与 -t 同时使用</td>
</tr>
<tr>
<td align="left">-t</td>
<td align="left">为容器重新分配一个伪输入终端，通常与 -i 同时使用</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">后台运行容器，并返回容器ID</td>
</tr>
</tbody></table>
<h2 id="查询僵尸文件"><a href="#查询僵尸文件" class="headerlink" title="查询僵尸文件"></a>查询僵尸文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker volume ls -qf dangling=true</span><br></pre></td></tr></table></figure>

<h2 id="删除所有dangling数据卷（即无用的Volume，僵尸文件）"><a href="#删除所有dangling数据卷（即无用的Volume，僵尸文件）" class="headerlink" title="删除所有dangling数据卷（即无用的Volume，僵尸文件）"></a>删除所有dangling数据卷（即无用的Volume，僵尸文件）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker volume rm $(docker volume ls -qf dangling=true)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>docker</tag>
        <tag>Redis</tag>
        <tag>rancher</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux安装MySQL</title>
    <url>/2018/12/13/Linux%E5%AE%89%E8%A3%85MySQL/</url>
    <content><![CDATA[<h2 id="Linux-Ubuntu-apt-get安装MySQL"><a href="#Linux-Ubuntu-apt-get安装MySQL" class="headerlink" title="Linux Ubuntu apt-get安装MySQL"></a>Linux Ubuntu apt-get安装MySQL</h2><h3 id="apt-get更新到最新"><a href="#apt-get更新到最新" class="headerlink" title="apt-get更新到最新"></a>apt-get更新到最新</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="安装-mysql-client-core-5-7"><a href="#安装-mysql-client-core-5-7" class="headerlink" title="安装 mysql-client-core-5.7"></a>安装 mysql-client-core-5.7</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-client-core-5.7</span><br></pre></td></tr></table></figure>

<h3 id="安装-mysql-client-5-7"><a href="#安装-mysql-client-5-7" class="headerlink" title="安装 mysql-client-5.7"></a>安装 mysql-client-5.7</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-client-5.7</span><br></pre></td></tr></table></figure>

<h3 id="安装-mysql-server-5-7"><a href="#安装-mysql-server-5-7" class="headerlink" title="安装 mysql-server-5.7"></a>安装 mysql-server-5.7</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-server-5.7</span><br></pre></td></tr></table></figure>
<p>注意：在安装的时候会让你输入一个密码，此密码是mysql数据库root用户的密码，请记住自己输入的密码，此密码和服务器root用户的密码不是同一个。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌─────────────────────────────────────────┤ Configuring mysql-server-5.7 ├─────────────────────────────────────────┐</span><br><span class="line">│ While not mandatory, it is highly recommended that you set a password for the MySQL administrative &quot;root&quot; user.  │</span><br><span class="line">│                                                                                                                  │</span><br><span class="line">│ If this field is left blank, the password will not be changed.                                                   │</span><br><span class="line">│                                                                                                                  │</span><br><span class="line">│ New password for the MySQL &quot;root&quot; user:                                                                          │</span><br><span class="line">│                                                                                                                  │</span><br><span class="line">│ ________________________________________________________________________________________________________________ │</span><br><span class="line">│                                                                                                                  │</span><br><span class="line">│                                                      &lt;Ok&gt;                                                        │</span><br><span class="line">│                                                                                                                  │</span><br><span class="line">└──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘</span><br></pre></td></tr></table></figure>
<p>密码输入完后,按 [shift+enter] 进行确定 !!!</p>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>

<h3 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql status</span><br></pre></td></tr></table></figure>
<p>服务开启输出的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">● mysql.service - MySQL Community Server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Thu 2018-12-13 14:36:48 CST; 15s ago</span><br><span class="line">  Process: 26464 ExecStartPost=/usr/share/mysql/mysql-systemd-start post (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 26450 ExecStartPre=/usr/share/mysql/mysql-systemd-start pre (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 26462 (mysqld)</span><br><span class="line">   CGroup: /system.slice/mysql.service</span><br><span class="line">           └─26462 /usr/sbin/mysqld</span><br></pre></td></tr></table></figure>

<h2 id="Linux-centOS-wget安装MySQL"><a href="#Linux-centOS-wget安装MySQL" class="headerlink" title="Linux centOS wget安装MySQL"></a>Linux centOS wget安装MySQL</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">rpm -ivh mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">yum -y install mysql-server</span><br></pre></td></tr></table></figure>
<h3 id="默认配置文件路径"><a href="#默认配置文件路径" class="headerlink" title="默认配置文件路径"></a>默认配置文件路径</h3><p>配置文件 : <code>/etc/my.cnf</code><br>日志文件 : <code>/var/log/mysqld.log</code><br>服务启动脚本 : <code>/usr/lib/systemd/system/mysqld.service</code><br>socket文件 : <code>/var/run/mysqld/mysqld.pid</code></p>
<h3 id="安装完成后，密码为随机密码，需要重置密码"><a href="#安装完成后，密码为随机密码，需要重置密码" class="headerlink" title="安装完成后，密码为随机密码，需要重置密码"></a>安装完成后，密码为随机密码，需要重置密码</h3><h4 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure>
<h4 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>
<p>显示以下格式日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2019-03-27T11:03:55.199916Z 1 [Note] A temporary password is generated for root@localhost: hRd&gt;NyG/K4ho</span><br></pre></td></tr></table></figure>
<p><code>hRd&gt;NyG/K4ho</code> 为随机密码</p>
<h4 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录MySQL</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<h4 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>

<h4 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p>指令和上面ubuntu差不多 <code>mysql</code> 改成 <code>mysqld</code></p>
<h2 id="设置用户-root-可以在任意-IP-下被访问"><a href="#设置用户-root-可以在任意-IP-下被访问" class="headerlink" title="设置用户 root 可以在任意 IP 下被访问"></a>设置用户 root 可以在任意 IP 下被访问</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h2 id="Ubuntu安装Mysql时没有提示设置密码问题"><a href="#Ubuntu安装Mysql时没有提示设置密码问题" class="headerlink" title="Ubuntu安装Mysql时没有提示设置密码问题"></a>Ubuntu安装Mysql时没有提示设置密码问题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sudo vim /etc/mysql/debian.cnf</span><br><span class="line"></span><br><span class="line">$mysql -u debian-sys-maint -p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line">update mysql.user set authentication_string=password(&#x27;123456&#x27;) where user=&#x27;root&#x27; and Host =&#x27;localhost&#x27;;</span><br><span class="line"></span><br><span class="line">update user set plugin=&quot;mysql_native_password&quot;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line"></span><br><span class="line">quit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$sudo service mysql restart</span><br></pre></td></tr></table></figure>

<h1 id="docker容器化部署数据库Mysql"><a href="#docker容器化部署数据库Mysql" class="headerlink" title="docker容器化部署数据库Mysql"></a>docker容器化部署数据库Mysql</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql5.7 \</span><br><span class="line">-v /usr/local/docker/mysql/conf:/etc/mysql \</span><br><span class="line">-v /usr/local/docker/mysql/logs:/var/log/mysql \</span><br><span class="line">-v /usr/local/docker/mysql/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">-d mysql:5.7</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>mysql</tag>
        <tag>wget</tag>
        <tag>apt-get</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5加密 springMVC文件上传显示示例</title>
    <url>/2018/07/26/MD5%E5%8A%A0%E5%AF%86-springMVC%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%98%BE%E7%A4%BA%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="Spring-MVC"><a href="#Spring-MVC" class="headerlink" title="Spring MVC"></a><a href="https://baike.baidu.com/item/spring%20MVC">Spring MVC</a></h2><p>属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的SpringMVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts2(一般老项目使用)等。</p>
<span id="more"></span>

<h2 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a><a href="https://baike.baidu.com/item/MD5">MD5</a></h2><p>消息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。MD5由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）设计，于1992年公开，用以取代MD4算法。</p>
<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>FileUpload<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>FileUpload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--文件上传  必备--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="springMVC-servlet-xml-配置文件"><a href="#springMVC-servlet-xml-配置文件" class="headerlink" title="springMVC-servlet.xml 配置文件"></a>springMVC-servlet.xml 配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">default-autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注解扫描配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--内部资源视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--文件上件必备--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span> <span class="attr">name</span>=<span class="string">&quot;multipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--1MB = 1024KB 1KB = 1024B 单位字节/B--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;7340032&quot;</span>/&gt;</span><span class="comment">&lt;!--7MB--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--默认编码格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使 @Controller 注解生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置静态文件资源的访问--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--否则 WEB-INF 下的 css 等资源文件访问不到--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/WEB-INF/&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载springMVC--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置加载的springMVC-servlet.xml 默认为 servlet-name 的值 XXX-servlet.xml--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="FileUtil-工具类-创建文件夹"><a href="#FileUtil-工具类-创建文件夹" class="headerlink" title="FileUtil 工具类 创建文件夹"></a>FileUtil 工具类 创建文件夹</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据路径创建文件夹</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createDir</span><span class="params">(String path)</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        <span class="comment">//不存在则创建文件夹以及子文件夹</span></span><br><span class="line">        <span class="keyword">if</span> (!file.exists())</span><br><span class="line">            file.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="MD5Util-工具类-加密"><a href="#MD5Util-工具类-加密" class="headerlink" title="MD5Util 工具类 加密"></a>MD5Util 工具类 加密</h2><p>防止中文名图片可以上传不能显示</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * EncoderByMd5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MD5Util</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">EncoderByMd5</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="type">MessageDigest</span> <span class="variable">md5</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            md5 = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            <span class="comment">// 这句是关键</span></span><br><span class="line">            md5.update(str.getBytes(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">byte</span> b[] = md5.digest();</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">buf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> <span class="number">0</span>; offset &lt; b.length; offset++) &#123;</span><br><span class="line">            i = b[offset];</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="number">0</span>)</span><br><span class="line">                i += <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="number">16</span>)</span><br><span class="line">                buf.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            buf.append(Integer.toHexString(i));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(buf.toString());</span><br><span class="line">        <span class="keyword">return</span> buf.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(MD5Util.EncoderByMd5(<span class="string">&quot;Simon&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="ImgController-servlet层"><a href="#ImgController-servlet层" class="headerlink" title="ImgController servlet层"></a>ImgController servlet层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.util.FileUtil;</span><br><span class="line"><span class="keyword">import</span> com.util.MD5Util;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImgController</span> &#123;</span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/uploadImg&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadImg</span><span class="params">(MultipartFile imgFile, HttpSession session, Model model)</span> &#123;</span><br><span class="line">        <span class="comment">//获取上传文件的文件名字</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> imgFile.getOriginalFilename();</span><br><span class="line">        System.out.println(filename);</span><br><span class="line">        <span class="comment">//文件名去后缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">substring</span> <span class="operator">=</span> filename.substring(<span class="number">0</span>, filename.lastIndexOf(<span class="string">&quot;.jpg&quot;</span>));</span><br><span class="line">        System.out.println(substring);</span><br><span class="line">        <span class="comment">//加密加后缀</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(MD5Util.EncoderByMd5(substring)).append(<span class="string">&quot;.jpg&quot;</span>).toString();</span><br><span class="line">        <span class="comment">//获取保存文件的目录</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> session.getServletContext().getRealPath(<span class="string">&quot;/WEB-INF/img&quot;</span>);</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建目录</span></span><br><span class="line">        FileUtil.createDir(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件保存路径</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">outFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, s);</span><br><span class="line"></span><br><span class="line">        model.addAttribute(<span class="string">&quot;img&quot;</span>, s);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            imgFile.transferTo(outFile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="index-jsp-页面"><a href="#index-jsp-页面" class="headerlink" title="index.jsp 页面"></a>index.jsp 页面</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;uploadImg&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;imgFile&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/img/$&#123;img&#125;&quot;</span> <span class="attr">height</span>=<span class="string">&quot;700&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="示例下载"><a href="#示例下载" class="headerlink" title="示例下载"></a><a href="https://gitee.com/admin-james/FileUpload">示例下载</a></h2>]]></content>
      <categories>
        <category>springMVC</category>
      </categories>
      <tags>
        <tag>MD5</tag>
        <tag>springMVC</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven仓库修改阿里中央仓库</title>
    <url>/2018/12/25/Maven%E4%BB%93%E5%BA%93%E4%BF%AE%E6%94%B9%E9%98%BF%E9%87%8C%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h2 id="Maven仓库修改阿里中央仓库"><a href="#Maven仓库修改阿里中央仓库" class="headerlink" title="Maven仓库修改阿里中央仓库"></a>Maven仓库修改阿里中央仓库</h2><h3 id="修改-conf-下的-settings-xml"><a href="#修改-conf-下的-settings-xml" class="headerlink" title="修改 conf 下的 settings.xml"></a>修改 <code>conf</code> 下的 <code>settings.xml</code></h3><span id="more"></span>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment">distributed with this work for additional information</span></span><br><span class="line"><span class="comment">regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment">to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment">&quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment">with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment">software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment">KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment">specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> | This is the configuration file for Maven. It can be specified at two levels:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span></span><br><span class="line"><span class="comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -s /path/to/user/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span></span><br><span class="line"><span class="comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span></span><br><span class="line"><span class="comment"> |                 installation). It&#x27;s normally provided in</span></span><br><span class="line"><span class="comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -gs /path/to/global/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | The sections in this sample file are intended to give you a running start at</span></span><br><span class="line"><span class="comment"> | getting the most out of your Maven installation. Where appropriate, the default</span></span><br><span class="line"><span class="comment"> | values (values used when the setting is not specified) are provided.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- interactiveMode</span></span><br><span class="line"><span class="comment">   | This will determine whether maven prompts you when it needs input. If set to false,</span></span><br><span class="line"><span class="comment">   | maven will use a sensible default value, perhaps based on some other setting, for</span></span><br><span class="line"><span class="comment">   | the parameter in question.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: true</span></span><br><span class="line"><span class="comment">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- offline</span></span><br><span class="line"><span class="comment">   | Determines whether maven should attempt to connect to the network when executing a build.</span></span><br><span class="line"><span class="comment">   | This will have an effect on artifact downloads, artifact deployment, and others.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: false</span></span><br><span class="line"><span class="comment">  &lt;offline&gt;false&lt;/offline&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- pluginGroups</span></span><br><span class="line"><span class="comment">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span></span><br><span class="line"><span class="comment">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span></span><br><span class="line"><span class="comment">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroup</span></span><br><span class="line"><span class="comment">     | Specifies a further group identifier to use for plugin lookup.</span></span><br><span class="line"><span class="comment">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- proxies</span></span><br><span class="line"><span class="comment">   | This is a list of proxies which can be used on this machine to connect to the network.</span></span><br><span class="line"><span class="comment">   | Unless otherwise specified (by system property or command-line switch), the first proxy</span></span><br><span class="line"><span class="comment">   | specification in this list marked as active will be used.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- proxy</span></span><br><span class="line"><span class="comment">     | Specification for one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;proxy&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">      &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="comment">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="comment">      &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="comment">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="comment">    &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- servers</span></span><br><span class="line"><span class="comment">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="comment">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- server</span></span><br><span class="line"><span class="comment">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="comment">     | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="comment">     |       used together.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span></span><br><span class="line"><span class="comment">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment">   | it to several places.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment">   | server for that repository.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">    &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- profiles</span></span><br><span class="line"><span class="comment">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span></span><br><span class="line"><span class="comment">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span></span><br><span class="line"><span class="comment">   | specific paths and repository locations which allow the build to work in the local environment.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</span></span><br><span class="line"><span class="comment">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span></span><br><span class="line"><span class="comment">   | dereferenced during the build process to configure the cactus plugin.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span></span><br><span class="line"><span class="comment">   | section of this document (settings.xml) - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="comment">   | relies on the detection of a system property, either matching a particular value for the property,</span></span><br><span class="line"><span class="comment">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="comment">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="comment">   | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="comment">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="comment">   |       variables for plugins in the POM.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- profile</span></span><br><span class="line"><span class="comment">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="comment">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="comment">     | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | An encouraged best practice for profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="comment">     | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="comment">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="comment">     | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;repository&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span></span><br><span class="line"><span class="comment">          &lt;layout&gt;default&lt;/layout&gt;</span></span><br><span class="line"><span class="comment">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="comment">        &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">      &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="comment">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span></span><br><span class="line"><span class="comment">     | might hypothetically look like:</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     | &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     |   &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">     | &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span></span><br><span class="line"><span class="comment">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;env-dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;property&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;target-env&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;value&gt;dev&lt;/value&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;properties&gt;</span></span><br><span class="line"><span class="comment">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span></span><br><span class="line"><span class="comment">      &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- activeProfiles</span></span><br><span class="line"><span class="comment">   | List of profiles that are active for all builds.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">  &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>maven</tag>
        <tag>阿里</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven管理的pom.xml文件配置（自动下载所依赖的jar包）</title>
    <url>/2018/02/25/Maven%E7%AE%A1%E7%90%86%E7%9A%84pom-xml%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%EF%BC%88%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BD%E6%89%80%E4%BE%9D%E8%B5%96%E7%9A%84jar%E5%8C%85%EF%BC%89/</url>
    <content><![CDATA[<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。<br>Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目。由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目发文时使用 Maven，而且公司项目采用 Maven 的比例在持续增长。<br>Maven这个单词来自于意第绪语（犹太语），意为知识的积累，最初在Jakata Turbine项目中用来简化构建过程。当时有一些项目（有各自Ant build文件），仅有细微的差别，而JAR文件都由CVS来维护。于是希望有一种标准化的方式构建项目，一个清晰的方式定义项目的组成，一个容易的方式发布项目的信息，以及一种简单的方式在多个项目中共享JARs。</p>
<span id="more"></span>

<h2 id="properties-全局变量"><a href="#properties-全局变量" class="headerlink" title="properties 全局变量"></a>properties 全局变量</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过 $&#123;spring.version&#125; 获取 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 实现多内部资源视图解析器 生成xml工具jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事务 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 初始化会话工厂 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring AOP就是用aspectj来实现的，是依赖关系 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis框架 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis与spring对接的jar包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- mybatis与springboot对接的jar包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- MySQL连接器 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阿里druid数据源 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JSP 标准标签库 (JSTL) --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/jstl --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- json转换工具包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 获取页面session对象request对象response对象 HttpServletXXX jar包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring集成JSR-303验证框架-Hibernate-validator实现 验证框架的jar包 start --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator-annotation-processor --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator-annotation-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.2.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.validation/validation-api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- spring集成JSR-303验证框架-Hibernate-validator实现 验证框架的jar包 end --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jsonwebtoken(JWT)通过数字签名进行验证和信任 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring 整合 Shiro --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-spring --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- shiro+redis缓存插件 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.crazycake/shiro-redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.crazycake<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- HttpUtils需要导入的包 start --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--json转换工具包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--HttpClient4.x工具--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpcore<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-lang/commons-lang --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-util --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-util<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.4.43.v20210629<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HttpUtils需要导入的包 end --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 快速开发工具包 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 模拟Java数据工具框架 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.github.jsonzou/jmockdata --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsonzou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jmockdata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 序列化/反序列化 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson/jackson-bom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-bom<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>maven</category>
        <category>pom.xml</category>
      </categories>
      <tags>
        <tag>maven</tag>
        <tag>pom.xml</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis框架映射文件配置以及配置文件详解</title>
    <url>/2018/04/03/MyBatis%E6%A1%86%E6%9E%B6%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="什么是-MyBatis-？"><a href="#什么是-MyBatis-？" class="headerlink" title="什么是 MyBatis ？"></a>什么是 MyBatis ？</h2><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p>
<span id="more"></span>

<h2 id="MyBatis的-Git-代码库"><a href="#MyBatis的-Git-代码库" class="headerlink" title="MyBatis的 Git 代码库"></a><a href="https://github.com/mybatis/mybatis-3/tree/master/src/site">MyBatis的 Git 代码库</a></h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><pre><code>idea
jdk
maven
MySQL
</code></pre>
<h2 id="alia-SQL-sql-创建数据库"><a href="#alia-SQL-sql-创建数据库" class="headerlink" title="alia_SQL.sql 创建数据库"></a>alia_SQL.sql 创建数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库alia</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE alia;</span><br><span class="line">USE alia;</span><br><span class="line"><span class="comment">-- 供应商表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> alia_provider(</span><br><span class="line">	id <span class="type">INT</span>(<span class="number">20</span>) AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">	proCode <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	proName <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	proDesc <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">	proContact <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	proPhone <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	proAddress <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">	proFax <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">	createdBy <span class="type">INT</span>(<span class="number">20</span>),</span><br><span class="line">	creationDate DATETIME,</span><br><span class="line">	modifyBy <span class="type">INT</span>(<span class="number">20</span>),</span><br><span class="line">	modifyDate DATETIME</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `alia_provider`(`id`,`proCode`,`proName`,`proDesc`,`proContact`,`proPhone`,`proAddress`,`proFax`,`createdBy`,`creationDate`,`modifyDate`,`modifyBy`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;BJ_GYS001&#x27;</span>,<span class="string">&#x27;北京三木堂商贸有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品:茅台、五粮液、郎酒、酒鬼酒、泸州老窖、赖茅酒、法国红酒等&#x27;</span>,<span class="string">&#x27;张国强&#x27;</span>,<span class="string">&#x27;13566667777&#x27;</span>,<span class="string">&#x27;北京市丰台区育芳园北路&#x27;</span>,<span class="string">&#x27;010-58858787&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2013-03-21 16:52:07&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span>  <span class="keyword">INTO</span> `alia_provider`(`id`,`proCode`,`proName`,`proDesc`,`proContact`,`proPhone`,`proAddress`,`proFax`,`createdBy`,`creationDate`,`modifyDate`,`modifyBy`) <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;HB_GYS001&#x27;</span>,<span class="string">&#x27;石家庄帅益食品贸易有限公司&#x27;</span>,<span class="string">&#x27;长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等&#x27;</span>,<span class="string">&#x27;王军&#x27;</span>,<span class="string">&#x27;13309094212&#x27;</span>,<span class="string">&#x27;河北省石家庄新华区&#x27;</span>,<span class="string">&#x27;0311-67738876&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2016-04-13 04:20:40&#x27;</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> alia_provider;</span><br></pre></td></tr></table></figure>

<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MyBiatisLink<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="MybatisUtil-创建访问数据库得到session对象工具类"><a href="#MybatisUtil-创建访问数据库得到session对象工具类" class="headerlink" title="MybatisUtil 创建访问数据库得到session对象工具类"></a>MybatisUtil 创建访问数据库得到session对象工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> James</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            sessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//true为自动提交事务</span></span><br><span class="line">        <span class="keyword">return</span> sessionFactory.openSession(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Provider-数据库对应的实体类"><a href="#Provider-数据库对应的实体类" class="headerlink" title="Provider 数据库对应的实体类"></a>Provider 数据库对应的实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> James</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Provider</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String proCode;</span><br><span class="line">    <span class="keyword">private</span> String proName;</span><br><span class="line">    <span class="keyword">private</span> String proDesc;</span><br><span class="line">    <span class="keyword">private</span> String proContact;</span><br><span class="line">    <span class="keyword">private</span> String proPhone;</span><br><span class="line">    <span class="keyword">private</span> String proAddress;</span><br><span class="line">    <span class="keyword">private</span> String proFax;</span><br><span class="line">    <span class="keyword">private</span> Integer createdBy;</span><br><span class="line">    <span class="keyword">private</span> Date creationDate;</span><br><span class="line">    <span class="keyword">private</span> Integer modifyBy;</span><br><span class="line">    <span class="keyword">private</span> Date modifyDate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Provider&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, proCode=&#x27;&quot;</span> + proCode + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proName=&#x27;&quot;</span> + proName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proDesc=&#x27;&quot;</span> + proDesc + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proContact=&#x27;&quot;</span> + proContact + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proPhone=&#x27;&quot;</span> + proPhone + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proAddress=&#x27;&quot;</span> + proAddress + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, proFax=&#x27;&quot;</span> + proFax + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, createdBy=&quot;</span> + createdBy +</span><br><span class="line">                <span class="string">&quot;, creationDate=&quot;</span> + creationDate +</span><br><span class="line">                <span class="string">&quot;, modifyBy=&quot;</span> + modifyBy +</span><br><span class="line">                <span class="string">&quot;, modifyDate=&quot;</span> + modifyDate +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 省略getter and setter部分代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ProviderDao-创建实现访问数据库的接口"><a href="#ProviderDao-创建实现访问数据库的接口" class="headerlink" title="ProviderDao 创建实现访问数据库的接口"></a>ProviderDao 创建实现访问数据库的接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> James</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProviderDao</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取供应商列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;Provider&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Provider&gt; <span class="title function_">getProviderList</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 按名称获取供应商</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> provider &#123;<span class="doctag">@link</span> Provider&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> List&lt;Provider&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Provider&gt; <span class="title function_">getProviderByName</span><span class="params">(Provider provider)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Provider-xml-Provider对象与数据库的映射文件配置"><a href="#Provider-xml-Provider对象与数据库的映射文件配置" class="headerlink" title="Provider.xml Provider对象与数据库的映射文件配置"></a>Provider.xml Provider对象与数据库的映射文件配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.ProviderDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--为一个Java类型命名一个别名 aliasProvider--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getProviderList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;aliasProvider&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM alia_provider</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--ProviderDao 参数为对象 得到对象的属性值方式 #&#123;对象的属性值&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getProviderByName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Provider&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM alia_provider WHERE proName LIKE CONCAT(&#x27;%&#x27;,#&#123;proName&#125;,&#x27;%&#x27;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="datebase-properties-数据库配置文件"><a href="#datebase-properties-数据库配置文件" class="headerlink" title="datebase.properties 数据库配置文件"></a>datebase.properties 数据库配置文件</h2><p>有需要可以加上配置文件,或者直接将数据填到 <code>MyBatis上下文配置</code> mybatis-config.xml 中</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">mysql.username=root</span></span><br><span class="line"><span class="string">mysql.password=123456</span></span><br><span class="line"><span class="string">db=alia</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis-config-xml-连接数据库的MyBatis上下文配置"><a href="#mybatis-config-xml-连接数据库的MyBatis上下文配置" class="headerlink" title="mybatis-config.xml 连接数据库的MyBatis上下文配置"></a>mybatis-config.xml 连接数据库的MyBatis上下文配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可以配置在Java属性配置文件中 用 $&#123;键值&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以配置键值对属性在这里而不用配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mysql.driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mysql.url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为Java类型命名一个别名 alias 用于 mappers.xml 的 resultType 直接调用 不用写全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为一个Java类型命名一个别名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.entity.Provider&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;aliasProvider&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.entity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--环境变量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;mysql.url&#125;$&#123;db&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体类映射--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/Provider.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Test-测试类"><a href="#Test-测试类" class="headerlink" title="Test 测试类"></a>Test 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.ProviderDao;</span><br><span class="line"><span class="keyword">import</span> com.entity.Provider;</span><br><span class="line"><span class="keyword">import</span> com.util.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> James</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtil.getSession();</span><br><span class="line"><span class="comment">//        直接去 Mapper.xml 得到数据访问数据库 参数为 namespace.id</span></span><br><span class="line">        List&lt;Provider&gt; objects = session.selectList(<span class="string">&quot;com.dao.ProviderDao.getProviderList&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------------------面向对象的方式访问数据库-----------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        面向对象的方式访问数据库</span></span><br><span class="line">        <span class="type">ProviderDao</span> <span class="variable">providerDao</span> <span class="operator">=</span> session.getMapper(ProviderDao.class);</span><br><span class="line">        objects = providerDao.getProviderList();</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------------------ProviderDao接口带参数 实现带参数查询-----------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Provider</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Provider</span>();</span><br><span class="line">        p.setProName(<span class="string">&quot;石&quot;</span>);</span><br><span class="line">        objects = providerDao.getProviderByName(p);</span><br><span class="line">        <span class="keyword">for</span> (Provider provider : objects) &#123;</span><br><span class="line">            System.out.println(provider);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        关闭会话</span></span><br><span class="line">        session.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="点击下载案例"><a href="#点击下载案例" class="headerlink" title="点击下载案例"></a><a href="https://gitee.com/admin-james/my-biatis-link">点击下载案例</a></h2>]]></content>
      <categories>
        <category>mybatis</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>mysql</tag>
        <tag>关系映射</tag>
        <tag>mybatis</tag>
        <tag>配置文件</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL支持emoji表情存储</title>
    <url>/2018/11/30/MySQL%E6%94%AF%E6%8C%81emoji%E8%A1%A8%E6%83%85%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h2 id="MySQL插入emoji表情，出现错误"><a href="#MySQL插入emoji表情，出现错误" class="headerlink" title="MySQL插入emoji表情，出现错误"></a>MySQL插入emoji表情，出现错误</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java.sql.SQLException: Incorrect string value: &#x27;\xF0\x9F\x98\x8A&#x27; for column &#x27;content&#x27; at row</span><br></pre></td></tr></table></figure>

<p>可以对4字节的字符进行编码存储，然后取出来的时候，再进行解码。但是这样做会使得任何使用该字符的地方都要进行编码与解码。</p>
<p>utf8mb4编码是utf8编码的超集，兼容utf8，并且能存储4字节的表情字符。<br>采用utf8mb4编码的好处是：存储与获取数据的时候，不用再考虑表情字符的编码与解码问题。</p>
<h2 id="MySQL的版本"><a href="#MySQL的版本" class="headerlink" title="MySQL的版本"></a>MySQL的版本</h2><p>utf8mb4的最低mysql版本支持版本为5.5.3+，若不是，请升级到较新版本。</p>
<span id="more"></span>

<h2 id="MySQL驱动"><a href="#MySQL驱动" class="headerlink" title="MySQL驱动"></a>MySQL驱动</h2><p>5.1.34可用,最低不能低于5.1.13</p>
<h2 id="修改MySQL配置文件"><a href="#修改MySQL配置文件" class="headerlink" title="修改MySQL配置文件"></a>修改MySQL配置文件</h2><p>修改mysql配置文件my.cnf（Windows为my.ini）<br><code>my.cnf</code> 一般在 <code>/etc/mysql/my.cnf</code> 位置</p>
<p>部分Linux系统的 <code>my.cnf</code> 文件打开后是这样的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># The MySQL database server configuration file.</span><br><span class="line">#</span><br><span class="line"># You can copy this to one of:</span><br><span class="line"># - &quot;/etc/mysql/my.cnf&quot; to set global options,</span><br><span class="line"># - &quot;~/.my.cnf&quot; to set user-specific options.</span><br><span class="line">#</span><br><span class="line"># One can use all long options that the program supports.</span><br><span class="line"># Run program with --help to get a list of available options and with</span><br><span class="line"># --print-defaults to see which it would actually understand and use.</span><br><span class="line">#</span><br><span class="line"># For explanations see</span><br><span class="line"># http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># * IMPORTANT: Additional settings that can override those from this file!</span><br><span class="line">#   The files must end with &#x27;.cnf&#x27;, otherwise they&#x27;ll be ignored.</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line">!includedir /etc/mysql/mysql.conf.d/</span><br></pre></td></tr></table></figure>

<p>那么这个配置文件的路径应该改成文件内容下面的地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/mysql/conf.d/mysql.cnf</span><br></pre></td></tr></table></figure>

<p>找到后请在以下三部分里添加或修改如下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-client-handshake = FALSE</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_unicode_ci</span><br><span class="line">init_connect=&#x27;SET NAMES utf8mb4&#x27;</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure>

<h2 id="重启数据库，检查变量"><a href="#重启数据库，检查变量" class="headerlink" title="重启数据库，检查变量"></a>重启数据库，检查变量</h2><p>Windows终端指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net stop mysql57</span><br><span class="line">net start mysql57</span><br></pre></td></tr></table></figure>

<p>Linux终端指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql stop</span><br><span class="line">service mysql start</span><br><span class="line">service mysql status</span><br></pre></td></tr></table></figure>

<p>数据库SQL语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW VARIABLES WHERE Variable_name LIKE &#x27;character\_set\_%&#x27; OR Variable_name LIKE &#x27;collation%&#x27;;</span><br></pre></td></tr></table></figure>

<p>修改前输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+--------------------------+-------------------+</span><br><span class="line">| Variable_name            | Value             |</span><br><span class="line">+--------------------------+-------------------+</span><br><span class="line">| character_set_client     | gbk               |</span><br><span class="line">| character_set_connection | gbk               |</span><br><span class="line">| character_set_database   | latin1            |</span><br><span class="line">| character_set_filesystem | binary            |</span><br><span class="line">| character_set_results    | gbk               |</span><br><span class="line">| character_set_server     | latin1            |</span><br><span class="line">| character_set_system     | utf8              |</span><br><span class="line">| collation_connection     | gbk_chinese_ci    |</span><br><span class="line">| collation_database       | latin1_swedish_ci |</span><br><span class="line">| collation_server         | latin1_swedish_ci |</span><br><span class="line">+--------------------------+-------------------+</span><br></pre></td></tr></table></figure>

<p>修改后输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+--------------------------+--------------------+</span><br><span class="line">| Variable_name            | Value              |</span><br><span class="line">+--------------------------+--------------------+</span><br><span class="line">| character_set_client     | utf8mb4            |</span><br><span class="line">| character_set_connection | utf8mb4            |</span><br><span class="line">| character_set_database   | utf8mb4            |</span><br><span class="line">| character_set_filesystem | binary             |</span><br><span class="line">| character_set_results    | utf8mb4            |</span><br><span class="line">| character_set_server     | utf8mb4            |</span><br><span class="line">| character_set_system     | utf8               |</span><br><span class="line">| collation_connection     | utf8mb4_unicode_ci |</span><br><span class="line">| collation_database       | utf8mb4_unicode_ci |</span><br><span class="line">| collation_server         | utf8mb4_unicode_ci |</span><br><span class="line">+--------------------------+--------------------+</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mysql</category>
        <category>emoji</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>配置</tag>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title>Open Session In View 模式</title>
    <url>/2017/06/06/Open-Session-In-View-%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="什么是-Open-Session-In-View-模式"><a href="#什么是-Open-Session-In-View-模式" class="headerlink" title="什么是 Open Session In View 模式"></a>什么是 Open Session In View 模式</h2><p>在hibernate中使用load方法时，并未把数据真正获取时就关闭了session，当我们真正想获取数据时会迫使load加载数据，而此时 session已关闭，所以就会出现异常。 比较典型的是在MVC模式中，我们在M层调用持久层获取数据时(持久层用的是load方法加载数据)，当这一调用结束时，session随之关闭，而我们 希望在V层使用这些数据，这时才会迫使load加载数据，我们就希望这时的session是open着得，这就是所谓的Open Session In view 。 我们可以filter来达到此目的</p>
<span id="more"></span>

<h3 id="OpenSesstionInViewFilter-java-的主要代码"><a href="#OpenSesstionInViewFilter-java-的主要代码" class="headerlink" title="OpenSesstionInViewFilter.java 的主要代码"></a>OpenSesstionInViewFilter.java 的主要代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.accp.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.accp.util.HibernateUtil;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.HibernateException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenSesstionInViewFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">transaction</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请求到达时打开session并启动事务&quot;</span>);</span><br><span class="line">            transaction = HibernateUtil.currentSesstion().beginTransaction();</span><br><span class="line">            System.out.println(<span class="string">&quot;执行请求处理链&quot;</span>);</span><br><span class="line">            filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">            System.out.println(<span class="string">&quot;返回响应时，提交事务&quot;</span>);</span><br><span class="line">            transaction.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (HibernateException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">if</span> (transaction != <span class="literal">null</span>) &#123;</span><br><span class="line">                transaction.rollback();</span><br><span class="line">                System.out.println(<span class="string">&quot;回滚事务&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="web-xml-中-Filter-的配置"><a href="#web-xml-中-Filter-的配置" class="headerlink" title="web.xml 中 Filter 的配置"></a>web.xml 中 Filter 的配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>OpenSesstionInView<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.accp.filter.OpenSesstionInViewFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>OpenSesstionInView<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
        <category>session</category>
        <category>filter</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>session</tag>
        <tag>filter</tag>
      </tags>
  </entry>
  <entry>
    <title>OGNL创建和配置自定义日期类型转换器</title>
    <url>/2017/06/12/OGNL%E5%88%9B%E5%BB%BA%E5%92%8C%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E6%9C%9F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%99%A8/</url>
    <content><![CDATA[<h2 id="OGNL"><a href="#OGNL" class="headerlink" title="OGNL"></a>OGNL</h2><p><code>OGNL</code> 中文名 <code>对象图导航语言</code> 是 <code>Object-Graph Navigation Language</code> 的缩写，它是一种功能强大的表达式语言，通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。它使用相同的表达式去存取对象的属性。</p>
<span id="more"></span>

<h2 id="基于OGNL的类型转换器"><a href="#基于OGNL的类型转换器" class="headerlink" title="基于OGNL的类型转换器"></a>基于OGNL的类型转换器</h2><p>Struts2的类型转换器都需要实现一个TypeConverter接口，该接口位于ognl.jar包内，也是就Struts2框架的转换器使用了OGNL技术。该接口定义了一个convertValue()方法，实现该接口的类型转换器实现类都需要重写该方法来进行类型转换。OGNL还提供了一个实现TypeConverter接口的类DefaultTypeConverter，开发者只要继承该类，就可以开发类型转换器的实现类。</p>
<p>DefaultTypeConverter类的子类需要重写convertValue()方法，来实现字符串类型与复合类型之间的双向转换。convertValue()方法有三个参数：Map context：该参数为类型转换环境的上下文内容；Object value：该参数为需要转换的参数；Class toType：该参数指的是转换目标的类型。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PointConverter</span> <span class="keyword">extends</span> <span class="title class_">DefaultTypeConverter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">convertValue</span><span class="params">(Map context,Object value,Class toType)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在转换...&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(toType==Point.class)&#123;</span><br><span class="line">            String[] p=(String[])value;</span><br><span class="line">            Point point=<span class="keyword">new</span> <span class="title class_">Point</span>();</span><br><span class="line">            String[] pp=p[<span class="number">0</span>].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            point.setX(pp[<span class="number">0</span>]);</span><br><span class="line">            point.setY(pp[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">return</span> point;        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(toType==String.class)&#123;</span><br><span class="line">            Point point=(Point) value;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&lt;&quot;</span>+point.getX()+<span class="string">&quot;,&quot;</span>+point.getY()+<span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>convertValue()方法是通过toType的类型判断来实现双向转换的</p>
<h2 id="基于Struts2的类型转换器"><a href="#基于Struts2的类型转换器" class="headerlink" title="基于Struts2的类型转换器"></a>基于Struts2的类型转换器</h2><p>Struts2框架提供了一个类型转换器的StrutsTypeConverter抽象类，开发者可以继承该类来开发自定义的类型转换器实现类。 该抽象类实际上继承了DefaultTypeConverter类，在该类的基础上进行了简化。StrutsTypeConverter抽象类是Struts2框架中类型转换器的基础，该类中提供了两个抽象方法，这两个抽象方法分别实现“form字符串参数-Struts复合类型”之间的双向转换</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PointConverter2</span> <span class="keyword">extends</span> <span class="title class_">StrutsTypeConverter</span> &#123;</span><br><span class="line">    <span class="comment">//定义convertFromString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">convertFromString</span><span class="params">(Map arg0, String[] arg1, Class arg2)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        System.out.println(<span class="string">&quot;正在转换：从字符串转换到复合类型...&quot;</span>);</span><br><span class="line">        Point point=<span class="keyword">new</span> <span class="title class_">Point</span>();</span><br><span class="line">        String[] pp=arg1[<span class="number">0</span>].split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        point.setX(pp[<span class="number">0</span>]);</span><br><span class="line">        point.setY(pp[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">return</span> point;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义convertToString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">convertToString</span><span class="params">(Map arg0, Object arg1)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        Point point=(Point) arg1;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;&quot;</span>+point.getX()+<span class="string">&quot;,&quot;</span>+point.getY()+<span class="string">&quot;&gt;&quot;</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="自定义日期类型转换器例子"><a href="#自定义日期类型转换器例子" class="headerlink" title="自定义日期类型转换器例子"></a>自定义日期类型转换器例子</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><pre><code>idea
Java
Maven
Struts2
Tomcat
</code></pre>
<h3 id="pom-xml-配置-dependencies"><a href="#pom-xml-配置-dependencies" class="headerlink" title="pom.xml 配置 dependencies"></a>pom.xml 配置 dependencies</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="util包-DateConverter类"><a href="#util包-DateConverter类" class="headerlink" title="util包 DateConverter类"></a>util包 DateConverter类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.conversion.TypeConversionException;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.util.StrutsTypeConverter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateConverter</span> <span class="keyword">extends</span> <span class="title class_">StrutsTypeConverter</span> &#123;</span><br><span class="line">    <span class="comment">//支持转换的多种日期格式,可增加时间格式</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DateFormat[] dfs = &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy年MM月dd日&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy/MM/dd&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy@MM@dd&quot;</span>)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将指定格式字符串转换为日期类型</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map     类型转换环境的上下文内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> strings 需要转换的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> aClass  转换目标的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">convertFromString</span><span class="params">(Map map, String[] strings, Class aClass)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dateStr</span> <span class="operator">=</span> strings[<span class="number">0</span>];            <span class="comment">//获取日期的字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dfs.length; i++) &#123;  <span class="comment">//遍历日期支持格式,进行转换</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> dfs[i].parse(dateStr);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果遍历完毕后仍没有转换成功,表明出现转换异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TypeConversionException</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将日期转换为指定格式字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> o</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">convertToString</span><span class="params">(Map map, Object o)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> (Date) o;</span><br><span class="line">        <span class="comment">//输出的格式是yyyy-MM-dd</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).format(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="action包-DateAction类"><a href="#action包-DateAction类" class="headerlink" title="action包 DateAction类"></a>action包 DateAction类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ValidationAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DateAction</span> <span class="keyword">extends</span> <span class="title class_">ActionSupport</span> <span class="keyword">implements</span> <span class="title class_">ValidationAware</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTime</span><span class="params">(Date time)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date time;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="xwork-conversion-properties-配置"><a href="#xwork-conversion-properties-配置" class="headerlink" title="xwork-conversion.properties 配置"></a>xwork-conversion.properties 配置</h3><pre><code>转换类全名=类型转换器类全名
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java.util.Date=com.util.DateConverter</span><br></pre></td></tr></table></figure>

<h3 id="测试页面-index-jsp"><a href="#测试页面-index-jsp" class="headerlink" title="测试页面 index.jsp"></a>测试页面 index.jsp</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;format.action&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    日期类型转换器:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1993@12@24&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">&quot;time&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s:fielderror</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="web-xml-配置"><a href="#web-xml-配置" class="headerlink" title="web.xml 配置"></a>web.xml 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="struts-xml-配置"><a href="#struts-xml-配置" class="headerlink" title="struts.xml 配置"></a>struts.xml 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--value 的 message 为指定根目录的 message.properties 配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.custom.i18n.resources&quot;</span> <span class="attr">value</span>=<span class="string">&quot;message&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;default&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;format&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.action.DateAction&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="message-properties-修改错误信息配置"><a href="#message-properties-修改错误信息配置" class="headerlink" title="message.properties 修改错误信息配置"></a>message.properties 修改错误信息配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xwork.default.invalid.fieldvalue=\u5b57\u6bb5&quot;&#123;0&#125;&quot;\u7684\u503c\u65e0\u6548</span><br></pre></td></tr></table></figure>

<pre><code>`\u5b57\u6bb5&quot;&#123;0&#125;&quot;\u7684\u503c\u65e0\u6548` 为 Unicode编码 `字段&quot;&#123;0&#125;&quot;的值无效` 配置文件 `中文` 需要转换成 `Unicode编码`
</code></pre>
<p><a href="http://tool.chinaz.com/Tools/Unicode.aspx">Unicode编码转换网站</a></p>
]]></content>
      <categories>
        <category>struts2</category>
        <category>OGNL</category>
        <category>自定义转换器</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>java</tag>
        <tag>OGNL</tag>
        <tag>自定义转换器</tag>
        <tag>struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>RedisDesktopManager连接远程Linux系统的Redis服务</title>
    <url>/2018/12/04/RedisDesktopManager%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8BLinux%E7%B3%BB%E7%BB%9F%E7%9A%84Redis%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="进入Redis安装目录"><a href="#进入Redis安装目录" class="headerlink" title="进入Redis安装目录"></a>进入Redis安装目录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@Ubuntu:/usr/local/software/redis-4.0.9# ll</span><br><span class="line">total 316</span><br><span class="line">drwxrwxr-x  6 root root   4096 Dec  4 15:47 ./</span><br><span class="line">drwxr-xr-x  6 root root   4096 Dec  4 14:55 ../</span><br><span class="line">-rw-rw-r--  1 root root 157632 Mar 27  2018 00-RELEASENOTES</span><br><span class="line">-rw-rw-r--  1 root root     53 Mar 27  2018 BUGS</span><br><span class="line">-rw-rw-r--  1 root root   1815 Mar 27  2018 CONTRIBUTING</span><br><span class="line">-rw-rw-r--  1 root root   1487 Mar 27  2018 COPYING</span><br><span class="line">drwxrwxr-x  6 root root   4096 Dec  4 11:49 deps/</span><br><span class="line">-rw-rw-r--  1 root root    376 Mar 27  2018 .gitignore</span><br><span class="line">-rw-rw-r--  1 root root     11 Mar 27  2018 INSTALL</span><br><span class="line">-rw-rw-r--  1 root root    151 Mar 27  2018 Makefile</span><br><span class="line">-rw-rw-r--  1 root root   4223 Mar 27  2018 MANIFESTO</span><br><span class="line">-rw-rw-r--  1 root root  20543 Mar 27  2018 README.md</span><br><span class="line">-rw-rw-r--  1 root root  58824 Dec  4 15:47 redis.conf    (Redis配置文件)</span><br><span class="line">-rwxrwxr-x  1 root root    271 Mar 27  2018 runtest*</span><br><span class="line">-rwxrwxr-x  1 root root    280 Mar 27  2018 runtest-cluster*</span><br><span class="line">-rwxrwxr-x  1 root root    281 Mar 27  2018 runtest-sentinel*</span><br><span class="line">-rw-rw-r--  1 root root   7606 Mar 27  2018 sentinel.conf</span><br><span class="line">drwxrwxr-x  3 root root   4096 Dec  4 15:53 src/          (执行脚本)</span><br><span class="line">drwxrwxr-x 10 root root   4096 Mar 27  2018 tests/</span><br><span class="line">drwxrwxr-x  8 root root   4096 Mar 27  2018 utils/</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="进入src目录，执行脚本"><a href="#进入src目录，执行脚本" class="headerlink" title="进入src目录，执行脚本"></a>进入src目录，执行脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@Ubuntu:/usr/local/software/redis-4.0.9/src# ./redis-server</span><br><span class="line">981:C 04 Dec 15:51:33.295 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">981:C 04 Dec 15:51:33.295 # Redis version=4.0.9, bits=64, commit=00000000, modified=0, pid=981, just started</span><br><span class="line">981:C 04 Dec 15:51:33.295 # Warning: no config file specified, using the default config. In order to specify a config file use ./redis-server /path/to/redis.conf</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ &#x27;&#x27;-._                                             </span><br><span class="line">      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 4.0.9 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                   </span><br><span class="line"> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379</span><br><span class="line"> |    `-._   `._    /     _.-&#x27;    |     PID: 981</span><br><span class="line">  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |           http://redis.io        </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line">      `-._    `-.__.-&#x27;    _.-&#x27;                                       </span><br><span class="line">          `-._        _.-&#x27;                                           </span><br><span class="line">              `-.__.-&#x27;                                               </span><br><span class="line"></span><br><span class="line">981:M 04 Dec 15:51:33.296 # Server initialized</span><br><span class="line">981:M 04 Dec 15:51:33.296 * DB loaded from disk: 0.000 seconds</span><br><span class="line">981:M 04 Dec 15:51:33.296 * Ready to accept connections</span><br></pre></td></tr></table></figure>

<h2 id="修改进程守护-daemonize-yes"><a href="#修改进程守护-daemonize-yes" class="headerlink" title="修改进程守护 daemonize yes"></a>修改进程守护 daemonize yes</h2><h3 id="此时Redis服务已经可以成功启动了；但问题来了，界面一直停留在Redis服务窗口中，按Ctrl-C虽然可以屏蔽服务窗口，但同时也会结束Redis服务。"><a href="#此时Redis服务已经可以成功启动了；但问题来了，界面一直停留在Redis服务窗口中，按Ctrl-C虽然可以屏蔽服务窗口，但同时也会结束Redis服务。" class="headerlink" title="此时Redis服务已经可以成功启动了；但问题来了，界面一直停留在Redis服务窗口中，按Ctrl+C虽然可以屏蔽服务窗口，但同时也会结束Redis服务。"></a>此时Redis服务已经可以成功启动了；但问题来了，界面一直停留在Redis服务窗口中，按Ctrl+C虽然可以屏蔽服务窗口，但同时也会结束Redis服务。</h3><h3 id="Redis服务默认是前台运行，需要修改为后台运行；返回上一层目录，修改redis-conf配置文件。找到daemonize（守护进程）配置，默认no"><a href="#Redis服务默认是前台运行，需要修改为后台运行；返回上一层目录，修改redis-conf配置文件。找到daemonize（守护进程）配置，默认no" class="headerlink" title="Redis服务默认是前台运行，需要修改为后台运行；返回上一层目录，修改redis.conf配置文件。找到daemonize（守护进程）配置，默认no"></a>Redis服务默认是前台运行，需要修改为后台运行；返回上一层目录，修改redis.conf配置文件。找到daemonize（守护进程）配置，默认no</h3><h2 id="咱们修改了配置文件，但没告诉Redis读取最新的配置文件。启动服务的同时读取最新的配置文件"><a href="#咱们修改了配置文件，但没告诉Redis读取最新的配置文件。启动服务的同时读取最新的配置文件" class="headerlink" title="咱们修改了配置文件，但没告诉Redis读取最新的配置文件。启动服务的同时读取最新的配置文件"></a>咱们修改了配置文件，但没告诉Redis读取最新的配置文件。启动服务的同时读取最新的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@Ubuntu:/usr/local/software/redis-4.0.9/src# ./redis-server ../redis.conf</span><br></pre></td></tr></table></figure>

<h2 id="Redis默认只支持本地链接"><a href="#Redis默认只支持本地链接" class="headerlink" title="Redis默认只支持本地链接"></a>Redis默认只支持本地链接</h2><h3 id="编辑redis-conf配置文件"><a href="#编辑redis-conf配置文件" class="headerlink" title="编辑redis.conf配置文件"></a>编辑redis.conf配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># bind 127.0.0.1</span><br><span class="line">protected-mode no</span><br></pre></td></tr></table></figure>

<p>修改完毕后保存,并且启动服务的同时读取最新的配置文件</p>
<h3 id="输入进程命令查看"><a href="#输入进程命令查看" class="headerlink" title="输入进程命令查看"></a>输入进程命令查看</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@Ubuntu:/usr/local/software/redis-4.0.9/src# ps -ef | grep redis</span><br><span class="line">root      1059     1  0 16:02 ?        00:00:00 ./redis-server *:6379</span><br><span class="line">root      1065  1013  0 16:04 pts/1    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>

<h2 id="编辑Linux关闭防火墙"><a href="#编辑Linux关闭防火墙" class="headerlink" title="编辑Linux关闭防火墙"></a>编辑Linux关闭防火墙</h2><p>关闭防火墙</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure>
<p>开启防火墙</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>
<p>查看当前防火墙状态(inactive关闭状态 active开启状态)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>

<h2 id="添加安全组规则"><a href="#添加安全组规则" class="headerlink" title="添加安全组规则"></a>添加安全组规则</h2><h3 id="根据自己购买的ECS平台添加安全组规则"><a href="#根据自己购买的ECS平台添加安全组规则" class="headerlink" title="根据自己购买的ECS平台添加安全组规则"></a><a href="https://www.baidu.com/s?wd=%E6%B7%BB%E5%8A%A0%E5%AE%89%E5%85%A8%E7%BB%84%E8%A7%84%E5%88%99">根据自己购买的ECS平台添加安全组规则</a></h3>]]></content>
      <categories>
        <category>linux</category>
        <category>Redis</category>
        <category>RedisDesktopManage</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>Redis</tag>
        <tag>RedisDesktopManage</tag>
      </tags>
  </entry>
  <entry>
    <title>Rancher 1.6 快速安装指南</title>
    <url>/2021/12/11/Rancher-1-6-%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="快速安装指南"><a href="#快速安装指南" class="headerlink" title="快速安装指南"></a><a href="https://rancher.com/docs/rancher/v1.6/zh/">快速安装指南</a></h2><p>在本节中，我们将进行简单快速的Rancher安装，即在一台Linux机器上安装Rancher，并使其能够完成所有Rancher必要功能。</p>
<span id="more"></span>

<h3 id="准备LINUX主机"><a href="#准备LINUX主机" class="headerlink" title="准备LINUX主机"></a>准备LINUX主机</h3><p>先安装一个64位的Ubuntu 16.04 Linux主机，其内核必须高于3.10。你可以使用笔记本、虚拟机或物理服务器。请确保该Linux主机内存不低于1GB。在该主机上安装 <a href="https://rancher.com/docs/rancher/v1.6/zh/hosts/#docker%E7%89%88%E6%9C%AC%E9%80%82%E7%94%A8%E5%AF%B9%E6%AF%94">支持的Docker版本</a>。</p>
<p>在主机上安装Docker的方法请参照<a href="https://docs.docker.com/engine/installation/linux/ubuntulinux/">Docker</a>网站的安装说明。</p>
<blockquote>
<p><strong>注意：</strong><br>目前Rancher尚不支持Docker for Windows以及Docker for Mac。</p>
</blockquote>
<h3 id="RANCHER-SERVER标签"><a href="#RANCHER-SERVER标签" class="headerlink" title="RANCHER SERVER标签"></a>RANCHER SERVER标签</h3><p>Rancher Server当前版本中有2个不同的标签。对于每一个主要的release标签，我们都会提供对应版本的文档。</p>
<ul>
<li><p><code>rancher/server:latest</code> 此标签是我们的最新一次开发的构建版本。这些构建已经被我们的CI框架自动验证测试。但这些release并不代表可以在生产环境部署。</p>
</li>
<li><p><code>rancher/server:stable</code> 此标签是我们最新一个稳定的release构建。这个标签代表我们推荐在生产环境中使用的版本。</p>
</li>
</ul>
<p>请不要使用任何带有 <code>rc&#123;n&#125;</code> 前缀的release。这些构建都是Rancher团队的测试构建。</p>
<h3 id="启动RANCHER-SERVER"><a href="#启动RANCHER-SERVER" class="headerlink" title="启动RANCHER SERVER"></a>启动RANCHER SERVER</h3><p>你只需要一条命令就可以启动Rancher Server。当Rancher Server容器启动以后，我们将能查看到相关的日志。</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">$ sudo docker <span class="keyword">run</span><span class="language-bash"> -d --restart=unless-stopped -p 8080:8080 rancher/server:stable</span></span><br><span class="line"><span class="comment"># Tail the logs to show Rancher</span></span><br><span class="line">$ sudo docker logs -f &lt;CONTAINER_ID&gt;</span><br></pre></td></tr></table></figure>
<p>启动Rancher Server只需要几分钟时间。当日志中显示 <code>.... Startup Succeeded, Listening on port...</code>的时候，Rancher UI就能正常访问了。配置一旦完成，这行日志就会立刻出现。需要注意的是，这一输出之后也许还会有其他日志，因此，在初始化过程中这不一定是最后一行日志。</p>
<p>Rancher UI的默认端口是 <code>8080</code>。所以为了访问UI，需打开<code>http://&lt;SERVER_IP&gt;:8080</code>。需要注意的事，如果你的浏览器和Rancher Server是运行在同一主机上的，你需要通过主机的<strong>真实IP地址</strong>访问，比如 <code>http://192.168.1.100:8080</code> ，而不是 <code>http://localhost:8080</code> 或<code>http://127.0.0.1:8080</code>，以防在添加主机的时候使用了不可达的IP而出现问题。</p>
<blockquote>
<p><strong>注意：</strong></p>
<ol>
<li>初始安装时Rancher的访问控制并未配置，任何能够访问你的IP地址的人，都可以访问你的UI和API。我们建议你配置 <a href="https://rancher.com/docs/rancher/v1.6/zh/configuration/access-control/">访问控制</a>. </li>
<li>国内的公有云主机，如果需要使用80和8080端口，需备案后才可以使用。</li>
</ol>
</blockquote>
<h3 id="添加主机"><a href="#添加主机" class="headerlink" title="添加主机"></a>添加主机</h3><p>在这里，为了简化操作，我们将添加运行着Rancher Server的主机为Rancher内的主机。在实际的生产环境中，请使用专用的主机来运行Rancher Server。</p>
<p>想要添加主机，首先你需要进入UI界面，点击<strong>基础架构</strong>，然后你将看到<strong>主机</strong>界面。点击<strong>添加主机</strong>，Rancher将提示你选择主机注册URL。这个URL是Rancher Server运行所在的URL，且它必须可以被所有你要添加的主机访问到——当Rancher Server会通过NAT防火墙或负载均衡器被暴露至互联网时，这一设定就非常重要了。如果你的主机有一个私有或本地的IP地址，比如 <code>192.168.*.*</code>，Rancher将提示一个警告信息，提醒你务必确保这个URL可以被主机访问到。</p>
<p>因为我们现在只会添加Rancher Server主机自身，你可以暂时忽略这些警告。点击<strong>保存</strong>。默认选择<strong>自定义</strong>选项，你将得到运行Rancher agent容器的Docker命令。这里还有其他的公有云的选项，使用这些选项，Rancher可以使用Docker Machine来启动主机。</p>
<p>Rancher UI会给你提供一些指示，比如你的主机上应该开放的端口，还有其他一些可供选择的信息。鉴于我们现在添加的是Rancher Server运行的主机，我们需要添加这个主机所使用的公网IP。页面上的一个选项提供输入此IP的功能，此选项会自动更新Docker命令中的环境变量参数以保证正确。</p>
<p>然后请在运行Rancher Server的主机上运行这个命令。</p>
<p>当你在Rancher UI上点击<strong>关闭</strong>按钮时，你会被返回到<strong>基础架构-&gt;主机</strong>界面。一两分钟之后，主机会自动出现在这里。</p>
<h3 id="基础设施服务"><a href="#基础设施服务" class="headerlink" title="基础设施服务"></a>基础设施服务</h3><p>当你第一次登陆Rancher时，你将自动进入<strong>默认</strong><a href="https://rancher.com/docs/rancher/v1.6/zh/environments/">环境</a>。默认已经为此环境选择了Cattle<a href="https://rancher.com/docs/rancher/v1.6/zh/environments/#%E4%BB%80%E4%B9%88%E6%98%AF%E7%8E%AF%E5%A2%83%E6%A8%A1%E7%89%88">环境模板</a>来启动<a href="https://rancher.com/docs/rancher/v1.6/zh/rancher-services/">基础设施服务</a>。要想充分利用Rancher的一些功能，如<a href="https://rancher.com/docs/rancher/v1.6/zh/rancher-services/dns-service/">DNS</a>、<a href="https://rancher.com/docs/rancher/v1.6/zh/rancher-services/metadata-service">元数据</a>、<a href="https://rancher.com/docs/rancher/v1.6/zh/rancher-services/networking">网络</a>、<a href="https://rancher.com/docs/rancher/v1.6/zh/cattle/health-checks/">健康检查</a>，你需要启动这些基础设施服务。这些基础设施可以在<strong>应用栈</strong> -&gt; <strong>基础设施</strong>中找到。在主机被添加至Rancher之前，这些栈会处于 <code>unhealthy</code> 状态。主机添加完成后，建议等到所有基础设施服务都处于<code>active</code>状态之后再添加服务。</p>
<p>在主机上，所有属于基础设施服务的容器将被隐藏，除非你单击“<strong>显示系统容器</strong>”复选框。</p>
<h3 id="通过UI创建一个容器"><a href="#通过UI创建一个容器" class="headerlink" title="通过UI创建一个容器"></a>通过UI创建一个容器</h3><p>导航到<strong>应用</strong>页面，如果你看到了欢迎屏幕，可以在欢迎屏幕中单击<strong>定义服务</strong>的按钮。如果你的Rancher设置中已有服务，你可以在任何现有应用中点击<strong>添加服务</strong>，或者创建一个新的应用来添加服务。应用只是将服务组合在一起的便捷方式。 如果需要创建新的应用，请单击<strong>添加应用</strong>，填写名称和描述，然后单击<strong>创建</strong>。 接着，在新的应用中单击<strong>添加服务</strong>。</p>
<p>给服务取个名字，比如“第一个服务”。你可以使用我们的默认设置，然后单击<strong>创建</strong>。Rancher将开始在主机上启动容器。不论你的主机IP地址是什么，<em>第一个容器</em>的IP地址都将在 <code>10.42.*.*</code> 的范围内，因为Rancher已使用<code>ipsec</code>基础设施服务创建了一个托管网络。各容器之间是通过这个托管网络进行跨主机通信的。</p>
<p>如果你单击<em>第一个容器</em>的下拉列表，你将可以进行各种管理操作，如停止容器、查看日志或访问容器控制台。</p>
<h3 id="通过DOCKER原生CLI创建一个容器"><a href="#通过DOCKER原生CLI创建一个容器" class="headerlink" title="通过DOCKER原生CLI创建一个容器"></a>通过DOCKER原生CLI创建一个容器</h3><p>Rancher会显示主机之上的所有容器，即使有些容器是在UI之外创建的。在主机的shell终端中创建一个容器。</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d -it --name=second-container ubuntu:14.04.2</span></span><br></pre></td></tr></table></figure>

<p>在UI中，你将看到<em>第二个容器</em>在你的主机上出现！</p>
<p>Rancher会对Docker守护进程中发生的事件做出反应，调整自己以反映现实情况。你可以在此了解更多通过Docker原生CLI使用Rancher的事宜。</p>
<p>如果你查看<em>第二个容器</em>的IP地址，你将发现它不在<code>10.42.*.*</code> 范围内。它的IP地址是Docker守护进程分配的常用IP地址。这是通过CLI创建Docker容器的预期行为。</p>
<p>如果我们想通过CLI创建一个Docker容器，但仍希望它使用Rancher托管网络的IP地址，该怎么做呢？我们只需要在命令中添加一个标签(<code>io.rancher.container.network=true</code>)，让Rancher知道你希望此容器成为<code>托管</code>网络的一部分。</p>
<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d -it --label io.rancher.container.network=<span class="literal">true</span> ubuntu:14.04.2</span></span><br></pre></td></tr></table></figure>

<h3 id="创建一个多容器应用"><a href="#创建一个多容器应用" class="headerlink" title="创建一个多容器应用"></a>创建一个多容器应用</h3><p>上文中我们已经介绍了如何创建单个容器以及这些单个容器之间如何进行跨主机网络通信。然而，现实情况中，大多数应用程序其实是由多个服务构成的，而每个服务又是由多个容器构成的。比如说，一个<a href="http://sdelements.github.io/lets-chat/">LetsChat</a>应用程序，就是由下列几项服务构成的：</p>
<blockquote>
<ol>
<li>一个负载均衡器。负载均衡器把Internet流量转发给“LetsChat”应用程序。</li>
</ol>
</blockquote>
<blockquote>
<ol start="2">
<li>一个由两个“LetsChat”容器组成的web服务。</li>
</ol>
</blockquote>
<blockquote>
<ol start="3">
<li>一个由一个“Mongo”容器组成的数据库服务。</li>
</ol>
</blockquote>
<p>负载均衡器的目标是<em>web</em>服务（即LetsChat），Web服务将连接到数据库服务（即Mongo）。</p>
<p>在本节中，我们将介绍如何在Rancher中创建和部署<a href="http://sdelements.github.io/lets-chat/">LetsChat</a>应用程序。</p>
<p>导航到<strong>应用</strong>页面，如果你看到了欢迎屏幕，可以在欢迎屏幕中单击<strong>定义服务</strong>的按钮。 如果你的Rancher设置中已有服务，你可以在任何现有应用中点击<strong>添加应用</strong>，来创建一个新的应用。填写名称和描述，然后单击<strong>创建</strong>。 接着，在新的应用中单击<strong>添加服务</strong>。</p>
<p>首先，我们将创建一个名为<code>database</code>的数据库服务，并使用<code>mongo</code>镜像。单击<strong>创建</strong>。你将立即被带到应用页面，页面中将包含新创建的数据库服务。</p>
<p>接下来，再次点击<strong>添加服务</strong>以添加其他服务。我们将添加一个LetsChat服务并链接到<em>database</em>服务。让我们使用名称<code>web</code>以及<code>sdelements/lets-chat</code>镜像。在UI中，我们可以移动滑块，将服务扩容至2个容器。在<strong>服务链接</strong>中，添加<em>database</em>服务并将其命名为<code>mongo</code>。就像Docker的做法一样，Rancher会在<code>letschat</code>容器里加入这个链接所需要的相关环境变量。单击<strong>创建</strong>。</p>
<p>最后，我们将创建我们的负载均衡器。单击<strong>添加服务</strong>按钮旁的下拉菜单图标。选择<strong>添加负载均衡</strong>。提供一个类似于<code>letschatapplb</code>这样的名字。输入访问端口（例如<code>80</code>端口），选择目标服务（即<em>web</em>），并选择目标端口（即<code>8080</code>端口）。<em>web</em>服务正在侦听<code>8080</code>端口。单击<strong>创建</strong>。</p>
<p>至此，我们的LetsChat应用程序已完成！在<strong>应用</strong>页面上，你可以查找到超链接形式的负载均衡所暴露端口。点击该链接，将会打开一个新的页面，你将能看到LetsChat应用程序了。</p>
<h3 id="使用RANCHER-CLI创建一个多容器应用程序"><a href="#使用RANCHER-CLI创建一个多容器应用程序" class="headerlink" title="使用RANCHER CLI创建一个多容器应用程序"></a>使用RANCHER CLI创建一个多容器应用程序</h3><p>在本节中，我们将介绍如何使用我们的命名行工具<a href="https://rancher.com/docs/rancher/v1.6/zh/cli/">Rancher CLI</a>创建和部署跟上一节中我们创建的一样的<a href="http://sdelements.github.io/lets-chat/">LetsChat</a>应用程序。</p>
<p>当在Rancher中创建服务时，Rancher CLI工具与颇受欢迎的Docker Compose工具的工作方式类似。 它接收相同的<code>docker-compose.yml</code>文件，并在Rancher上部署应用程序。 你可以在<code>rancher-compose.yml</code>文件中指定更多的属性，该文件将扩展并覆盖<code>docker-compose.yml</code>文件。</p>
<p>在上一节中，我们创建了一个具有一个负载均衡器的LetsChat应用程序。如果你已经在Rancher中创建了它，你可以直接在UI中下载这些文件，只需在应用的下拉菜单中选择<strong>导出配置</strong>即可。<code>docker-compose.yml</code>文件与 <code>rancher-compose.yml</code> 文件与下方示例类似：</p>
<h4 id="DOCKER-COMPOSE-YML示例"><a href="#DOCKER-COMPOSE-YML示例" class="headerlink" title="DOCKER-COMPOSE.YML示例"></a>DOCKER-COMPOSE.YML示例</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">letschatapplb:</span></span><br><span class="line">    <span class="comment">#If you only have 1 host and also created the host in the UI,</span></span><br><span class="line">    <span class="comment"># you may have to change the port exposed on the host.</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">80</span><span class="string">:80/tcp</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">io.rancher.container.create_agent:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">io.rancher.container.agent.role:</span> <span class="string">environmentAdmin</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rancher/lb-service-haproxy:v0.4.2</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">io.rancher.container.pull_image:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sdelements/lets-chat</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">database:mongo</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">database:</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">io.rancher.container.pull_image:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mongo</span></span><br><span class="line">    <span class="attr">stdin_open:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="RANCHER-COMPOSE-YML示例"><a href="#RANCHER-COMPOSE-YML示例" class="headerlink" title="RANCHER-COMPOSE.YML示例"></a>RANCHER-COMPOSE.YML示例</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">letschatapplb:</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">lb_config:</span></span><br><span class="line">      <span class="attr">certs:</span> []</span><br><span class="line">      <span class="attr">port_rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">hostname:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="attr">priority:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">protocol:</span> <span class="string">http</span></span><br><span class="line">        <span class="attr">service:</span> <span class="string">web</span></span><br><span class="line">        <span class="attr">source_port:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">target_port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">health_check:</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">42</span></span><br><span class="line">      <span class="attr">interval:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">unhealthy_threshold:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">healthy_threshold:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">response_timeout:</span> <span class="number">2000</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">database:</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>在Rancher UI中单击<strong>下载CLI</strong>（该按钮位于页面的右下角），即可下载Rancher CLI二进制文件，Windows、Mac和Linux的二进制文件均可下载。</p>
<p>若想使用Rancher CLI在Rancher中启动服务，你需要设置一些环境变量。你需要在Rancher UI中创建一个账户<a href="https://rancher.com/docs/rancher/v1.6/en/api/v2-beta/api-keys/">API Key</a>。单击<strong>API</strong> -&gt; <strong>密钥</strong>。单击<strong>添加账户API Key</strong>。填写一个名字，然后单击<strong>创建</strong>。保存<strong>Access Key（用户名）</strong>和<strong>Secret Key（密码）</strong>。通过运行<code>rancher config</code>配置RancherCLI，使用Rancher URL、Access Key和Secret Key。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Configure Rancher CLI</span></span><br><span class="line">$ rancher config</span><br><span class="line"><span class="comment"># Set the Rancher URL</span></span><br><span class="line">URL []: http://&lt;SERVER_IP&gt;:8080/</span><br><span class="line"><span class="comment"># Set the access key, i.e. username</span></span><br><span class="line">Access Key []: &lt;accessKey_of_account_api_key&gt;</span><br><span class="line"><span class="comment"># Set the secret key, i.e. password</span></span><br><span class="line">Secret Key []:  &lt;secretKey_of_account_api_key&gt;</span><br></pre></td></tr></table></figure>

<p>现在进入保存了<code>docker-compose.yml</code>和<code>rancher-compose.yml</code> 文件的目录中，运行下面这个命令。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ rancher up -d -s NewLetsChatApp</span><br></pre></td></tr></table></figure>

<p>在Rancher中，一个叫做<strong>NewLetsChatApp</strong>的应用将被创建，且所有服务都将在Rancher中运行起来。</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>docker</category>
        <category>rancher</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
        <tag>rancher</tag>
        <tag>容器编排</tag>
      </tags>
  </entry>
  <entry>
    <title>RocketMQ4.x本地源码部署</title>
    <url>/2019/05/05/RocketMQ4-x%E6%9C%AC%E5%9C%B0%E6%BA%90%E7%A0%81%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="安装前提条件-推荐"><a href="#安装前提条件-推荐" class="headerlink" title="安装前提条件(推荐)"></a>安装前提条件(推荐)</h2><p>64bit OS&#x2F;Linux&#x2F;Unix&#x2F;Mac&#x2F;(Windows不兼容)</p>
<p>64bit JDK 1.8+</p>
<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a><a href="http://rocketmq.apache.org/docs/quick-start/">快速开始</a></h2><p>本快速入门指南是在本地计算机上设置RocketMQ消息传递系统以发送和接收消息的详细说明。</p>
<h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://mirror.bit.edu.cn/apache/rocketmq/4.4.0/rocketmq-all-4.4.0-source-release.zip</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="解压并编译"><a href="#解压并编译" class="headerlink" title="解压并编译"></a>解压并编译</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip rocketmq-all-4.4.0-source-release.zip</span><br><span class="line">cd rocketmq-all-4.4.0/</span><br><span class="line">mvn -Prelease-all -DskipTests clean install -U</span><br><span class="line">cd distribution/target/apache-rocketmq</span><br></pre></td></tr></table></figure>
<p>最终路径 <code>distribution/target/apache-rocketmq</code></p>
<h2 id="启动nameServer"><a href="#启动nameServer" class="headerlink" title="启动nameServer"></a>启动nameServer</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup sh bin/mqnamesrv &amp;</span><br></pre></td></tr></table></figure>

<h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f nohup.out</span><br></pre></td></tr></table></figure>
<p>结尾为 <code>The Name Server boot success. serializeType=JSON</code> 说明启动成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed in a future release</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.</span><br><span class="line">The Name Server boot success. serializeType=JSON</span><br></pre></td></tr></table></figure>
<h1 id="部署问题"><a href="#部署问题" class="headerlink" title="部署问题"></a>部署问题</h1><h2 id="Please-set-the-JAVA-HOME-variable-in-your-environment-We-need-java-x64"><a href="#Please-set-the-JAVA-HOME-variable-in-your-environment-We-need-java-x64" class="headerlink" title="Please set the JAVA_HOME variable in your environment, We need java(x64)"></a>Please set the JAVA_HOME variable in your environment, We need java(x64)</h2><p>解决: 本地需要配置 <code>JAVA_HOME</code> 环境变量</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line">/usr/local/software/jdk8</span><br></pre></td></tr></table></figure>

<p>Linux系统jdk配置见 <code>linux下使用wget下载jdk8</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/software/jdk8</span><br><span class="line"><span class="built_in">export</span> MAVEN_HOME=/usr/local/software/apache-maven-3.3.9</span><br><span class="line"><span class="built_in">export</span> JAVA_BIN=/usr/local/software/jdk8</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME MAVEN_HOME JAVA_BIN PATH CLASSPATH</span><br></pre></td></tr></table></figure>

<h2 id="启动broker"><a href="#启动broker" class="headerlink" title="启动broker"></a>启动broker</h2><p><code>-n</code> 指定 <code>nameserver</code> 地址, <code>nameserver</code>服务端口号为 <code>9876</code>, <code>broker</code> 默认端口号 <code>10911</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> sh bin/mqbroker -n localhost:9876 &amp;</span><br></pre></td></tr></table></figure>

<h2 id="RocketMQ的broker启动失败解决"><a href="#RocketMQ的broker启动失败解决" class="headerlink" title="RocketMQ的broker启动失败解决"></a>RocketMQ的broker启动失败解决</h2><p>进入 <code>bin</code> 目录 <code>apache-rocketmq/bin</code></p>
<h3 id="修改runbroker-sh"><a href="#修改runbroker-sh" class="headerlink" title="修改runbroker.sh"></a>修改runbroker.sh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim runbroker.sh</span><br></pre></td></tr></table></figure>
<p>将第一个JAVA_OPT改成</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">JAVA_OPT=<span class="string">&quot;<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms256m -Xmx256m -Xmn128m&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改runserver-sh"><a href="#修改runserver-sh" class="headerlink" title="修改runserver.sh"></a>修改runserver.sh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vim runserver.sh</span><br></pre></td></tr></table></figure>
<p>将第一个JAVA_OPT改成</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">JAVA_OPT=<span class="string">&quot;<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms128m -Xmx256m -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="关闭-broker-nameserver-执行的命令"><a href="#关闭-broker-nameserver-执行的命令" class="headerlink" title="关闭 broker nameserver 执行的命令"></a>关闭 broker nameserver 执行的命令</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sh bin/mqshutdown broker</span><br><span class="line">sh bin/mqshutdown namesrv</span><br></pre></td></tr></table></figure>

<h2 id="使用jps查看进程"><a href="#使用jps查看进程" class="headerlink" title="使用jps查看进程"></a>使用jps查看进程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure>

<h2 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置名称服务地址</span></span><br><span class="line"><span class="built_in">export</span> NAMESRV_ADDR=localhost:9876</span><br><span class="line"></span><br><span class="line"><span class="comment"># 投递消息</span></span><br><span class="line">sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 消费消息</span></span><br><span class="line">sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>消息队列</category>
        <category>RocketMQ</category>
      </categories>
      <tags>
        <tag>wget</tag>
        <tag>RocketMQ</tag>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title>SSR搭建梯子(VPS)教程</title>
    <url>/2019/03/19/SSR%E6%90%AD%E5%BB%BA%E6%A2%AF%E5%AD%90-VPS-%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="VPS用途"><a href="#VPS用途" class="headerlink" title="VPS用途"></a>VPS用途</h2><p>VPS虚拟服务器技术可以通过多种不同的方式灵活地分配服务器资源，每个虚拟化服务器的资源都可以有很大的不同，可以灵活的满足各种高端用户的需求。通过在一台服务器上创建10个左右的VPS主机，可以确保每一个虚拟主机的用户独享VPS资源，其运行和管理完全和独立主机相同。VPS主机可以为高端用户提供安全、可靠、高品质的主机服务。</p>
<span id="more"></span>

<h2 id="创建服务器-Vultr"><a href="#创建服务器-Vultr" class="headerlink" title="创建服务器 Vultr"></a>创建服务器 <a href="https://www.vultr.com/">Vultr</a></h2><p>登录官网自行注册,并选择支付宝充值10美金,不想充钱的可以绕道了,不用往下看了</p>
<h3 id="点击Server栏目"><a href="#点击Server栏目" class="headerlink" title="点击Server栏目"></a>点击Server栏目</h3><p>找到里面的 <code>+</code> 按钮 <code>Deploy New Server</code> 新增服务器 会跳转到</p>
<h4 id="部署新实例"><a href="#部署新实例" class="headerlink" title="部署新实例"></a><a href="https://my.vultr.com/deploy/">部署新实例</a></h4><h3 id="Server-Location"><a href="#Server-Location" class="headerlink" title="Server Location"></a>Server Location</h3><p>选择自己服务器地区</p>
<h3 id="Server-Type"><a href="#Server-Type" class="headerlink" title="Server Type"></a>Server Type</h3><p>服务器类型选择: CentOS 7x64</p>
<h3 id="Server-Size"><a href="#Server-Size" class="headerlink" title="Server Size"></a>Server Size</h3><p>这个不多说,有钱土豪的随便选,没钱的最左边最便宜的</p>
<h3 id="Deploy-New"><a href="#Deploy-New" class="headerlink" title="Deploy New"></a>Deploy New</h3><p>其他的都不用管,直接点击最下面的<code>Deploy New</code></p>
<h2 id="进入服务器"><a href="#进入服务器" class="headerlink" title="进入服务器"></a>进入服务器</h2><p>自己想办法进去Linux系统服务器,百度一堆</p>
<h3 id="执行安装SSR指令"><a href="#执行安装SSR指令" class="headerlink" title="执行安装SSR指令"></a>执行安装SSR指令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://freed.ga/github/shadowsocksR.sh; bash shadowsocksR.sh</span><br></pre></td></tr></table></figure>
<p>如提示:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget :com.m.and not found</span><br></pre></td></tr></table></figure>
<p>请执行:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure>
<p>最后等着就行了</p>
<h2 id="安装SSTap"><a href="#安装SSTap" class="headerlink" title="安装SSTap"></a>安装SSTap</h2><p>SSTap是SocksCap64作者新开发的一款利用虚拟网卡实现的网络层代理。SSTap能在网络层拦截所有连接并转发给HTTP，SOCKS4，5，SHADOWSOCKS代理.<br>而无需对被代理的应用程序做任何修改或设置。它能同时转发TCP, UDP数据包。它非常适合于游戏玩家使用。享受你的游戏时光！请使用SSTap！</p>
<h2 id="SSR常用命令"><a href="#SSR常用命令" class="headerlink" title="SSR常用命令"></a>SSR常用命令</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks start</span><br></pre></td></tr></table></figure>
<h3 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks stop</span><br></pre></td></tr></table></figure>
<h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure>
<h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure>
<h2 id="SSR修改密码、配置多端口"><a href="#SSR修改密码、配置多端口" class="headerlink" title="SSR修改密码、配置多端口"></a>SSR修改密码、配置多端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure>
<h3 id="修改后进行重启"><a href="#修改后进行重启" class="headerlink" title="修改后进行重启"></a>修改后进行重启</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure>
<h3 id="如不能联网-则关闭防火墙-逐条输入"><a href="#如不能联网-则关闭防火墙-逐条输入" class="headerlink" title="如不能联网,则关闭防火墙 逐条输入"></a>如不能联网,则关闭防火墙 <code>逐条输入</code></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service iptables restart</span><br><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VPN</category>
      </categories>
      <tags>
        <tag>SSR</tag>
        <tag>VPN</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>Scheduled 定时任务</title>
    <url>/2019/03/27/Scheduled-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="启动类-添加-EnableScheduling-注解"><a href="#启动类-添加-EnableScheduling-注解" class="headerlink" title="启动类 添加 EnableScheduling 注解"></a>启动类 添加 EnableScheduling 注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span>   <span class="comment">// 定时任务</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ScheduApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="服务层-添加-Component-和-Scheduled-注解"><a href="#服务层-添加-Component-和-Scheduled-注解" class="headerlink" title="服务层 添加 Component 和 Scheduled 注解"></a>服务层 添加 Component 和 Scheduled 注解</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduledServiceImpl</span> &#123;</span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 0/25 2 * * ? *&quot;)</span> <span class="comment">// 凌晨2:00-2:59开始,每二十五分钟执行一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printSay</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;This is a say method!&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在线Cron表达式生成器"><a href="#在线Cron表达式生成器" class="headerlink" title="在线Cron表达式生成器"></a><a href="http://cron.qqe2.com/">在线Cron表达式生成器</a></h2><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字段　　允许值　　允许的特殊字符 </span><br><span class="line">秒     　 0-59 　　　　, - * / </span><br><span class="line">分     　 0-59　　　　 , - * / </span><br><span class="line">小时      0-23 　　　　, - * / </span><br><span class="line">日期      1-31 　　　　, - * ? / L W C </span><br><span class="line">月份      1-12 　　　　, - * / </span><br><span class="line">星期      1-7 　　　　  , - * ? / L C # </span><br><span class="line">年     1970-2099 　　, - * /</span><br></pre></td></tr></table></figure>
<p>星期(1-7)可对应(SUN，MON，TUE，WED，THU，FRI，SAT)</p>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p><code>0/5 * * * * ?</code> 每5秒执行一次</p>
<p><code>*</code>字符被用来指定所有的值。如：<code>*</code>在分钟的字段域里表示<code>每分钟</code>。 <br><code>?</code>字符只在日期域和星期域中使用。它被用来指定<code>非明确的值</code>。当你需要通过在这两个域中的一个来指定一些东西的时候，它是有用的。看下面的例子你就会明白。 <br>月份中的日期和星期中的日期这两个元素时互斥的一起应该通过设置一个问号来表明不想设置那个字段。</p>
<p><code>-</code>字符被用来指定一个范围。如：<code>10-12</code>在小时域意味着<code>10点、11点、12点</code>。</p>
<p><code>,</code>字符被用来指定另外的值。如：<code>MON,WED,FRI</code>在星期域里表示<code>星期一、星期三、星期五</code>。</p>
<p><code>/</code>字符用于指定增量。如：<code>0/15</code>在秒域意思是每分钟的0，15，30和45秒。<code>5/15</code>在分钟域表示每小时的5，20，35和50。 符号<code>*</code>在<code>/</code>前面（如：<code>*/10</code>）等价于0在<code>/</code>前面（如：0&#x2F;10）。记住一条本质：表达式的每个数值域都是一个有最大值和最小值的集合，如： 秒域和分钟域的集合是0-59，日期域是1-31，月份域是1-12。字符<code>/</code>可以帮助你在每个字符域中取相应的数值。如：<code>7/6</code>在月份域的时候只 有当7月的时候才会触发，并不是表示每个6月。</p>
<p>L是‘last’的省略写法可以表示day-of-month和day-of-week域，但在两个字段中的意思不同，例如day-of- month域中表示一个月的最后一天。如果在day-of-week域表示‘7’或者‘SAT’，如果在day-of-week域中前面加上数字，它表示 一个月的最后几天，例如‘6L’就表示一个月的最后一个星期五。</p>
<p>字符<code>W</code>只允许日期域出现。这个字符用于指定日期的最近工作日。例如：如果你在日期域中写 <code>15W</code>，表示：这个月15号最近的工作日。所以，如果15号是周六，则任务会在14号触发。如果15好是周日，则任务会在周一也就是16号触发。如果 是在日期域填写<code>1W</code>即使1号是周六，那么任务也只会在下周一，也就是3号触发，<code>W</code>字符指定的最近工作日是不能够跨月份的。字符<code>W</code>只能配合一个 单独的数值使用，不能够是一个数字段，如：1-15W是错误的。</p>
<p><code>L</code>和<code>W</code>可以在日期域中联合使用，LW表示这个月最后一周的工作日。</p>
<p>字符<code>#</code>只允许在星期域中出现。这个字符用于指定本月的某某天。例如：<code>6#3</code>表示本月第三周的星期五（6表示星期五，3表示第三周）。<code>2#1</code>表示本月第一周的星期一。<code>4#5</code>表示第五周的星期三。</p>
<p>字符<code>C</code>允许在日期域和星期域出现。这个字符依靠一个指定的<code>日历</code>。也就是说这个表达式的值依赖于相关的<code>日历</code>的计算结果，如果没有<code>日历</code> 关联，则等价于所有包含的<code>日历</code>。如：日期域是<code>5C</code>表示关联<code>日历</code>中第一天，或者这个月开始的第一天的后5天。星期域是<code>1C</code>表示关联<code>日历</code> 中第一天，或者星期的第一天的后1天，也就是周日的后一天（周一）。</p>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><code>0 0 10,14,16 * * ?</code> 每天上午10点，下午2点，4点<br><code>0 0/30 9-17 * * ?</code>   朝九晚五工作时间内每半小时<br><code>0 0 12 ? * WED</code> 表示每个星期三中午12点 <br><code>0 0 12 * * ?</code> 每天中午12点触发 <br><code>0 15 10 ? * *</code> 每天上午10:15触发 <br><code>0 15 10 * * ?</code> 每天上午10:15触发 <br><code>0 15 10 * * ? *</code> 每天上午10:15触发 <br><code>0 15 10 * * ? 2005</code> 2005年的每天上午10:15触发 <br><code>0 * 14 * * ?</code> 在每天下午2点到下午2:59期间的每1分钟触发 <br><code>0 0/5 14 * * ?</code> 在每天下午2点到下午2:55期间的每5分钟触发 <br><code>0 0/5 14,18 * * ?</code> 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 <br><code>0 0-5 14 * * ?</code> 在每天下午2点到下午2:05期间的每1分钟触发 <br><code>0 10,44 14 ? 3 WED</code> 每年三月的星期三的下午2:10和2:44触发 <br><code>0 15 10 ? * MON-FRI</code> 周一至周五的上午10:15触发 <br><code>0 15 10 15 * ?</code> 每月15日上午10:15触发 <br><code>0 15 10 L * ?</code> 每月最后一日的上午10:15触发 <br><code>0 15 10 ? * 6L</code> 每月的最后一个星期五上午10:15触发 <br><code>0 15 10 ? * 6L 2002-2005</code> 2002年至2005年的每月的最后一个星期五上午10:15触发 <br><code>0 15 10 ? * 6#3</code> 每月的第三个星期五上午10:15触发</p>
]]></content>
      <categories>
        <category>Scheduled</category>
      </categories>
      <tags>
        <tag>Scheduled</tag>
        <tag>定时任务</tag>
      </tags>
  </entry>
  <entry>
    <title>Sentinel流量限流熔断降级控制Docker容器化部署</title>
    <url>/2021/12/07/Sentinel%E6%B5%81%E9%87%8F%E9%99%90%E6%B5%81%E7%86%94%E6%96%AD%E9%99%8D%E7%BA%A7%E6%8E%A7%E5%88%B6Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="Docker-Hub-仓库地址"><a href="#Docker-Hub-仓库地址" class="headerlink" title="Docker Hub 仓库地址"></a><a href="https://hub.docker.com/r/bladex/sentinel-dashboard">Docker Hub 仓库地址</a></h2><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull bladex/sentinel-dashboard</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> --name sentinel -d -p 8858:8858 -d bladex/sentinel-dashboard</span></span><br></pre></td></tr></table></figure>

<h2 id="列出容器"><a href="#列出容器" class="headerlink" title="列出容器"></a>列出容器</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>

<h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker logs -f $&#123;CONTAINER ID&#125;</span><br></pre></td></tr></table></figure>

<h2 id="访问Sentinel"><a href="#访问Sentinel" class="headerlink" title="访问Sentinel"></a><a href="http://localhost:8858/">访问Sentinel</a></h2><p>记得开放阿里云的网络安全组</p>
<p><a href="http://localhost:8858/">http://localhost:8858</a></p>
<h2 id="默认登录密码"><a href="#默认登录密码" class="headerlink" title="默认登录密码"></a>默认登录密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sentinel/sentinel</span><br></pre></td></tr></table></figure>

<h2 id="持久化Sentinel"><a href="#持久化Sentinel" class="headerlink" title="持久化Sentinel"></a><a href="https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel">持久化Sentinel</a></h2><h3 id="在生产环境中使用-Sentinel"><a href="#在生产环境中使用-Sentinel" class="headerlink" title="在生产环境中使用 Sentinel"></a>在生产环境中使用 Sentinel</h3><table>
<thead>
<tr>
<th align="left">推送模式</th>
<th align="left">说明</th>
<th align="left">优点</th>
<th align="left">缺点</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel#%E5%8E%9F%E5%A7%8B%E6%A8%A1%E5%BC%8F">原始模式</a></td>
<td align="left">API 将规则推送至客户端并直接更新到内存中，扩展写数据源（<a href="https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95">WritableDataSource</a>）</td>
<td align="left">简单，无任何依赖</td>
<td align="left">不保证一致性；规则保存在内存中，重启即消失。严重不建议用于生产环境</td>
</tr>
<tr>
<td align="left"><a href="https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel#Pull%E6%A8%A1%E5%BC%8F">Pull 模式</a></td>
<td align="left">扩展写数据源（<a href="https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95">WritableDataSource</a>）， 客户端主动向某个规则管理中心定期轮询拉取规则，这个规则中心可以是 RDBMS、文件 等</td>
<td align="left">简单，无任何依赖；规则持久化</td>
<td align="left">不保证一致性；实时性不保证，拉取过于频繁也可能会有性能问题。</td>
</tr>
<tr>
<td align="left"><a href="https://github.com/alibaba/Sentinel/wiki/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BD%BF%E7%94%A8-Sentinel#Push%E6%A8%A1%E5%BC%8F">Push 模式</a></td>
<td align="left">扩展读数据源（<a href="https://github.com/alibaba/Sentinel/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%99%E6%89%A9%E5%B1%95">ReadableDataSource</a>），规则中心统一推送，客户端通过注册监听器的方式时刻监听变化，比如使用 Nacos、Zookeeper 等配置中心。这种方式有更好的实时性和一致性保证。<strong>生产环境下一般采用 push 模式的数据源</strong>。</td>
<td align="left">规则持久化；一致性；快速</td>
<td align="left">引入第三方依赖</td>
</tr>
</tbody></table>
<h3 id="Sentinel流控规则持久化到nacos配置中心"><a href="#Sentinel流控规则持久化到nacos配置中心" class="headerlink" title="Sentinel流控规则持久化到nacos配置中心"></a>Sentinel流控规则持久化到nacos配置中心</h3><h4 id="引入maven依赖-pom-xml"><a href="#引入maven依赖-pom-xml" class="headerlink" title="引入maven依赖 pom.xml"></a>引入maven依赖 <code>pom.xml</code></h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--sentinel流控规则持久化到nacos配置中心--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置-application-yml"><a href="#配置-application-yml" class="headerlink" title="配置 application.yml"></a>配置 <code>application.yml</code></h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#nacos配置</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment">#注册中心地址</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#限流熔断</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8858</span>  <span class="comment">#控制台端口</span></span><br><span class="line">        <span class="comment">#本地启的端口, 随机选个不能被占用的, 与dashboard进行数据交互, 会在应用对应机器上启动一个 HttpServer, 该 Server 会与 Sentinel 控制台做交互, 若被占用, 则开始+1一次扫描</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">#sentinel流控规则持久化到nacos配置中心</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">ds1:</span></span><br><span class="line">          <span class="attr">nacos:</span></span><br><span class="line">            <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">            <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;.json</span></span><br><span class="line">            <span class="attr">group-id:</span> <span class="string">DEFAULT_GROUP</span></span><br><span class="line">            <span class="attr">data-type:</span> <span class="string">json</span></span><br><span class="line">            <span class="attr">rule-type:</span> <span class="string">flow</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="配置nacos配置中心"><a href="#配置nacos配置中心" class="headerlink" title="配置nacos配置中心"></a>配置nacos配置中心</h4><p>新建配置 <code>$&#123;spring.application.name&#125;.json</code></p>
<p><a href="https://github.com/alibaba/Sentinel/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8#%E8%A7%84%E5%88%99%E7%9A%84%E7%A7%8D%E7%B1%BB">Sentinel配置文档</a></p>
<p><strong>示例配置</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;resource&quot;</span><span class="punctuation">:</span><span class="string">&quot;/api/v1/page&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;controlBehavior&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;grade&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;limitApp&quot;</span><span class="punctuation">:</span><span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;strategy&quot;</span><span class="punctuation">:</span><span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;resource&quot;</span><span class="punctuation">:</span><span class="string">&quot;/api/v2/page&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;controlBehavior&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;count&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;grade&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;limitApp&quot;</span><span class="punctuation">:</span><span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;strategy&quot;</span><span class="punctuation">:</span><span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="规则的种类"><a href="#规则的种类" class="headerlink" title="规则的种类"></a><a href="https://github.com/alibaba/Sentinel/wiki/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8#%E8%A7%84%E5%88%99%E7%9A%84%E7%A7%8D%E7%B1%BB">规则的种类</a></h3><p>Sentinel 的所有规则都可以在内存态中动态地查询及修改，修改之后立即生效。同时 Sentinel 也提供相关 API，供您来定制自己的规则策略。</p>
<p>Sentinel 支持以下几种规则：<strong>流量控制规则</strong>、<strong>熔断降级规则</strong>、<strong>系统保护规则</strong>、<strong>来源访问控制规则</strong> 和 <strong>热点参数规则</strong>。</p>
<h4 id="流量控制规则-FlowRule"><a href="#流量控制规则-FlowRule" class="headerlink" title="流量控制规则 (FlowRule)"></a>流量控制规则 (FlowRule)</h4><h5 id="流量规则的定义"><a href="#流量规则的定义" class="headerlink" title="流量规则的定义"></a>流量规则的定义</h5><table>
<thead>
<tr>
<th align="left">Field</th>
<th align="left">说明</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">resource</td>
<td align="left">资源名，资源名是限流规则的作用对象</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">count</td>
<td align="left">限流阈值</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">grade</td>
<td align="left">限流阈值类型，QPS 模式（1）或并发线程数模式（0）</td>
<td align="left">QPS 模式</td>
</tr>
<tr>
<td align="left">limitApp</td>
<td align="left">流控针对的调用来源</td>
<td align="left"><code>default</code>，代表不区分调用来源</td>
</tr>
<tr>
<td align="left">strategy</td>
<td align="left">调用关系限流策略：直接、链路、关联</td>
<td align="left">根据资源本身（直接）</td>
</tr>
<tr>
<td align="left">controlBehavior</td>
<td align="left">流控效果（直接拒绝&#x2F;WarmUp&#x2F;匀速+排队等待），不支持按调用关系限流</td>
<td align="left">直接拒绝</td>
</tr>
<tr>
<td align="left">clusterMode</td>
<td align="left">是否集群限流</td>
<td align="left">否</td>
</tr>
</tbody></table>
<p>同一个资源可以同时有多个限流规则，检查规则时会依次检查。</p>
<h5 id="通过代码定义流量控制规则"><a href="#通过代码定义流量控制规则" class="headerlink" title="通过代码定义流量控制规则"></a>通过代码定义流量控制规则</h5><p>理解上面规则的定义之后，我们可以通过调用 FlowRuleManager.loadRules() 方法来用硬编码的方式定义流量控制规则，比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initFlowQpsRule</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;FlowRule&gt; rules = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">FlowRule</span> <span class="variable">rule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FlowRule</span>(resourceName);</span><br><span class="line">    <span class="comment">// set limit qps to 20</span></span><br><span class="line">    rule.setCount(<span class="number">20</span>);</span><br><span class="line">    rule.setGrade(RuleConstant.FLOW_GRADE_QPS);</span><br><span class="line">    rule.setLimitApp(<span class="string">&quot;default&quot;</span>);</span><br><span class="line">    rules.add(rule);</span><br><span class="line">    FlowRuleManager.loadRules(rules);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="熔断降级规则-DegradeRule"><a href="#熔断降级规则-DegradeRule" class="headerlink" title="熔断降级规则 (DegradeRule)"></a>熔断降级规则 (DegradeRule)</h4><p>熔断降级规则包含下面几个重要的属性：</p>
<table>
<thead>
<tr>
<th align="left">Field</th>
<th align="left">说明</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">resource</td>
<td align="left">资源名，即规则的作用对象</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">grade</td>
<td align="left">熔断策略，支持慢调用比例&#x2F;异常比例&#x2F;异常数策略</td>
<td align="left">慢调用比例</td>
</tr>
<tr>
<td align="left">count</td>
<td align="left">慢调用比例模式下为慢调用临界 RT（超出该值计为慢调用）；异常比例&#x2F;异常数模式下为对应的阈值</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">timeWindow</td>
<td align="left">熔断时长，单位为 s</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">minRequestAmount</td>
<td align="left">熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断（1.7.0 引入）</td>
<td align="left">5</td>
</tr>
<tr>
<td align="left">statIntervalMs</td>
<td align="left">统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）</td>
<td align="left">1000 ms</td>
</tr>
<tr>
<td align="left">slowRatioThreshold</td>
<td align="left">慢调用比例阈值，仅慢调用比例模式有效（1.8.0 引入）</td>
<td align="left"></td>
</tr>
</tbody></table>
<p>同一个资源可以同时有多个降级规则。</p>
<p>理解上面规则的定义之后，我们可以通过调用 <code>DegradeRuleManager.loadRules()</code> 方法来用硬编码的方式定义流量控制规则。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initDegradeRule</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;DegradeRule&gt; rules = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">DegradeRule</span> <span class="variable">rule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DegradeRule</span>();</span><br><span class="line">    rule.setResource(KEY);</span><br><span class="line">    <span class="comment">// set threshold RT, 10 ms</span></span><br><span class="line">    rule.setCount(<span class="number">10</span>);</span><br><span class="line">    rule.setGrade(RuleConstant.DEGRADE_GRADE_RT);</span><br><span class="line">    rule.setTimeWindow(<span class="number">10</span>);</span><br><span class="line">    rules.add(rule);</span><br><span class="line">    DegradeRuleManager.loadRules(rules);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="系统保护规则-SystemRule"><a href="#系统保护规则-SystemRule" class="headerlink" title="系统保护规则 (SystemRule)"></a>系统保护规则 (SystemRule)</h4><p>Sentinel 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、CPU 使用率、总体平均 RT、入口 QPS 和并发线程数等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。</p>
<p>系统规则包含下面几个重要的属性：</p>
<table>
<thead>
<tr>
<th align="left">Field</th>
<th align="left">说明</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left">highestSystemLoad</td>
<td align="left"><code>load1</code> 触发值，用于触发自适应控制阶段</td>
<td align="left">-1 (不生效)</td>
</tr>
<tr>
<td align="left">avgRt</td>
<td align="left">所有入口流量的平均响应时间</td>
<td align="left">-1 (不生效)</td>
</tr>
<tr>
<td align="left">maxThread</td>
<td align="left">入口流量的最大并发数</td>
<td align="left">-1 (不生效)</td>
</tr>
<tr>
<td align="left">qps</td>
<td align="left">所有入口资源的 QPS</td>
<td align="left">-1 (不生效)</td>
</tr>
<tr>
<td align="left">highestCpuUsage</td>
<td align="left">当前系统的 CPU 使用率（0.0-1.0）</td>
<td align="left">-1 (不生效)</td>
</tr>
</tbody></table>
<p>理解上面规则的定义之后，我们可以通过调用 <code>SystemRuleManager.loadRules()</code> 方法来用硬编码的方式定义流量控制规则。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initSystemRule</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;SystemRule&gt; rules = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">SystemRule</span> <span class="variable">rule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SystemRule</span>();</span><br><span class="line">    rule.setHighestSystemLoad(<span class="number">10</span>);</span><br><span class="line">    rules.add(rule);</span><br><span class="line">    SystemRuleManager.loadRules(rules);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意系统规则只针对入口资源（EntryType&#x3D;IN）生效。更多详情可以参考 <a href="https://github.com/alibaba/Sentinel/wiki/%E7%B3%BB%E7%BB%9F%E8%87%AA%E9%80%82%E5%BA%94%E9%99%90%E6%B5%81">系统自适应保护文档</a>。</p>
<h4 id="访问控制规则-AuthorityRule"><a href="#访问控制规则-AuthorityRule" class="headerlink" title="访问控制规则 (AuthorityRule)"></a>访问控制规则 (AuthorityRule)</h4><p>很多时候，我们需要根据调用方来限制资源是否通过，这时候可以使用 Sentinel 的访问控制（黑白名单）的功能。黑白名单根据资源的请求来源（<code>origin</code>）限制资源是否通过，若配置白名单则只有请求来源位于白名单内时才可通过；若配置黑名单则请求来源位于黑名单时不通过，其余的请求通过。</p>
<p>授权规则，即黑白名单规则（<code>AuthorityRule</code>）非常简单，主要有以下配置项：</p>
<ul>
<li><code>resource</code>：资源名，即规则的作用对象</li>
<li><code>limitApp</code>：对应的黑名单&#x2F;白名单，不同 origin 用 <code>,</code> 分隔，如 <code>appA,appB</code></li>
<li><code>strategy</code>：限制模式，<code>AUTHORITY_WHITE</code> 为白名单模式，<code>AUTHORITY_BLACK</code> 为黑名单模式，默认为白名单模式</li>
</ul>
<h4 id="热点规则-ParamFlowRule"><a href="#热点规则-ParamFlowRule" class="headerlink" title="热点规则 (ParamFlowRule)"></a>热点规则 (ParamFlowRule)</h4><p>详情可以参考 <a href="https://github.com/alibaba/Sentinel/wiki/%E7%83%AD%E7%82%B9%E5%8F%82%E6%95%B0%E9%99%90%E6%B5%81">热点参数限流</a>。</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>centOS</category>
        <category>docker</category>
        <category>sentinel</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>docker</tag>
        <tag>sentinel</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringCloud连接远程nacos报错, 一直提示连接本地localhost:8848</title>
    <url>/2021/12/07/SpringCloud%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8Bnacos%E6%8A%A5%E9%94%99-%E4%B8%80%E7%9B%B4%E6%8F%90%E7%A4%BA%E8%BF%9E%E6%8E%A5%E6%9C%AC%E5%9C%B0localhost-8848/</url>
    <content><![CDATA[<h2 id="console"><a href="#console" class="headerlink" title="console"></a>console</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[NACOS ConnectException httpPost] currentServerAddr: http://localhost:8848, err : Connection refused: connect</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment">#服务名</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#nacos配置</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="comment">#注册中心地址</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">xxx.xxx.xxx.xxx:8848</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="bootstrap-yml"><a href="#bootstrap-yml" class="headerlink" title="bootstrap.yml"></a>bootstrap.yml</h2><p>在resources下创建: <code>bootstrap.yml</code><br><code>bootstrap.yml</code> 比 <code>application.yml</code> 提前执行</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#nacos config</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment">#服务名</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">xxx.xxx.xxx.xxx:8848</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springcloud</category>
        <category>gateway</category>
        <category>nacos</category>
      </categories>
      <tags>
        <tag>springcloud</tag>
        <tag>gateway</tag>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot跨域配置，解决跨域上传文件</title>
    <url>/2018/12/06/SpringBoot%E8%B7%A8%E5%9F%9F%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="SpringBoot跨域配置，解决跨域上传文件"><a href="#SpringBoot跨域配置，解决跨域上传文件" class="headerlink" title="SpringBoot跨域配置，解决跨域上传文件"></a>SpringBoot跨域配置，解决跨域上传文件</h2><span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CorsConfiguration <span class="title function_">buildConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);<span class="comment">//这两句不加不能跨域上传文件</span></span><br><span class="line">        corsConfiguration.setMaxAge(<span class="number">3600l</span>);<span class="comment">//加上去就可以了</span></span><br><span class="line">        <span class="keyword">return</span> corsConfiguration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨域过滤器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, buildConfig()); <span class="comment">// 4</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springboot</category>
        <category>跨域配置</category>
      </categories>
      <tags>
        <tag>跨域配置</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring-Boot2.X 中 HTTPS 配置</title>
    <url>/2018/12/11/Spring-Boot2-X-%E4%B8%AD-HTTPS-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Spring-Boot2-X-中-HTTPS-配置"><a href="#Spring-Boot2-X-中-HTTPS-配置" class="headerlink" title="Spring-Boot2.X 中 HTTPS 配置"></a>Spring-Boot2.X 中 HTTPS 配置</h2><h3 id="网上资料的错误"><a href="#网上资料的错误" class="headerlink" title="网上资料的错误"></a>网上资料的错误</h3><p>在Spring Boot2.0以上配置嵌入式Servlet容器时EmbeddedServletContainerCustomizer类不存在,经查询发现被WebServerFactoryCustomizer替代.<br>使用WebServerFactoryCustomizer接口替换EmbeddedServletContainerCustomizer组件完成对嵌入式Servlet容器的配置</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>阿里云ECS</li>
<li>域名</li>
<li>SSL证书 (用于支持https)</li>
<li>springboot项目 (本文采用jar方式打包)</li>
</ol>
  <span id="more"></span>

<h3 id="购买阿里云ECS配置安全组规则"><a href="#购买阿里云ECS配置安全组规则" class="headerlink" title="购买阿里云ECS配置安全组规则"></a>购买阿里云ECS配置安全组规则</h3><ol>
<li>如果不配置安全组规则，我们将没法访问我们阿里云服务器 ，安全组中的 <code>80/80</code> 和 <code>443/443</code> 必须配置，因为只有这里配置了才能支持<code>http</code>和<code>https</code>访问我们的网站</li>
<li>授权对象最好填 <code>0.0.0.0/0</code></li>
</ol>
<h3 id="配置https-申请SSL证书"><a href="#配置https-申请SSL证书" class="headerlink" title="配置https 申请SSL证书"></a>配置https <a href="https://www.aliyun.com/product/cas">申请SSL证书</a></h3><p>申请SSL证书是实现https必不可少的</p>
<h4 id="购买申请SSL证书地址"><a href="#购买申请SSL证书地址" class="headerlink" title="购买申请SSL证书地址"></a><a href="https://common-buy.aliyun.com/?spm=5176.7968328.1120760.1.77181232Gg5GDU&commodityCode=cas#/buy">购买申请SSL证书地址</a></h4><p>在品牌里面你会发现 都没有免费证书 <code>GeoTrust</code> <code>GlobalSign</code> <code>CFCA</code> <code>Symantec</code><br>选择 <code>Symantec</code> 品牌 , 再选择证书类型:分别有 <code>专业版OV SSL</code> <code>通配符DV SSL</code> <code>增强型OV SSL</code> 就是没有免费的证书<br>证书类型选择 <code>增强型OV SSL</code> 你会发现又多出了几个证书 其中就有 <code>免费型DV SSL</code> 然后买就对了</p>
<p>通常审核10分钟左右就行，如果资料不全或者不真实可能就久些<br>审核通过后，就去下载相应的SSL证书，由于springboot内置的是tomcat，所以这里下载tomcat对应的SSL证书</p>
<p>解压后会得到 <code>.pfx</code> <code>.txt</code> 后缀的文件夹 , 将<code>.pfx</code>复制到项目资源文件根目录并配置 <code>配置文件</code> 以<code>.yml</code>后缀配置文件为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http:</span><br><span class="line">  port: 80</span><br><span class="line">server:</span><br><span class="line">  port: 443</span><br><span class="line">  ssl:</span><br><span class="line">    key-store: classpath:*.pfx</span><br><span class="line">    key-store-password: password</span><br></pre></td></tr></table></figure>
<p><code>key-store</code> 填写复制到项目资源文件根目录的 <code>.pfx</code> 文件路径 . 因为在资源文件根目录所以填写 <code>classpath:</code> + <code>文件名.pfx</code><br><code>key-store-password</code> 填写解压<code>.txt</code>后缀的文本内容</p>
<h4 id="HTTP自动转向HTTPS"><a href="#HTTP自动转向HTTPS" class="headerlink" title="HTTP自动转向HTTPS"></a>HTTP自动转向HTTPS</h4><p>在springboot启动类 <code>Application</code> 加上以下配置代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.catalina.Context;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.connector.Connector;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.SecurityCollection;</span><br><span class="line"><span class="keyword">import</span> org.apache.tomcat.util.descriptor.web.SecurityConstraint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ConfigurableWebServerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.WebServerFactoryCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory.DEFAULT_PROTOCOL;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="comment">// 监听的http请求的端口,需要在application配置中添加http.port=端口号  如80</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;http.port&#125;&quot;)</span></span><br><span class="line">    Integer httpPort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//正常启用的https端口 如443</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    Integer httpsPort;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(BbsApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拦截所有请求</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TomcatServletWebServerFactory <span class="title function_">servletContainer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">TomcatServletWebServerFactory</span> <span class="variable">tomcat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TomcatServletWebServerFactory</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">postProcessContext</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">                <span class="type">SecurityConstraint</span> <span class="variable">constraint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityConstraint</span>();</span><br><span class="line">                constraint.setUserConstraint(<span class="string">&quot;CONFIDENTIAL&quot;</span>);</span><br><span class="line">                <span class="type">SecurityCollection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityCollection</span>();</span><br><span class="line">                collection.addPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">                constraint.addCollection(collection);</span><br><span class="line">                context.addConstraint(constraint);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        tomcat.addAdditionalTomcatConnectors(httpConnector());</span><br><span class="line">        <span class="keyword">return</span> tomcat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置http转https</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Connector <span class="title function_">httpConnector</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Connector</span> <span class="variable">connector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connector</span>(DEFAULT_PROTOCOL);</span><br><span class="line">        connector.setScheme(<span class="string">&quot;http&quot;</span>);</span><br><span class="line">        <span class="comment">//Connector监听的http的端口号</span></span><br><span class="line">        connector.setPort(httpPort);</span><br><span class="line">        connector.setSecure(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//监听到http的端口号后转向到的https的端口号</span></span><br><span class="line">        connector.setRedirectPort(httpsPort);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * //这里设置默认端口为443，即https的，如果这里不设置，会https和http争夺80端口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> WebServerFactoryCustomizer&lt;ConfigurableWebServerFactory&gt; <span class="title function_">webServerFactoryCustomizer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">WebServerFactoryCustomizer</span>&lt;ConfigurableWebServerFactory&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">customize</span><span class="params">(ConfigurableWebServerFactory factory)</span> &#123;</span><br><span class="line">                factory.setPort(<span class="number">443</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springboot</category>
        <category>https</category>
      </categories>
      <tags>
        <tag>http</tag>
        <tag>springboot</tag>
        <tag>https</tag>
        <tag>80</tag>
        <tag>443</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC JSON传递参数 多视图解析 自定义类型转换 拦截器</title>
    <url>/2018/07/25/SpringMVC%20JSON%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%20%E5%A4%9A%E8%A7%86%E5%9B%BE%E8%A7%A3%E6%9E%90%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%20%E6%8B%A6%E6%88%AA%E5%99%A8/</url>
    <content><![CDATA[<h2 id="springMVC"><a href="#springMVC" class="headerlink" title="springMVC"></a>springMVC</h2><p>属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的SpringMVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts2(一般老项目使用)等。</p>
<span id="more"></span>

<h2 id="返回结果为Bean对象，name又如何转换成JSON对象输出？"><a href="#返回结果为Bean对象，name又如何转换成JSON对象输出？" class="headerlink" title="返回结果为Bean对象，name又如何转换成JSON对象输出？"></a>返回结果为Bean对象，name又如何转换成JSON对象输出？</h2><h3 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/showJson&quot;)</span><span class="comment">//,produces = &#123;&quot;application/json;charset=utf-8&quot;&#125;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">showJson</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">UserMessage</span> <span class="variable">um</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserMessage</span>();</span><br><span class="line">    um.setError(<span class="string">&quot;exception&quot;</span>);</span><br><span class="line">    um.setMessage(<span class="string">&quot;异常&quot;</span>);</span><br><span class="line">    <span class="comment">//return &quot;&#123;\&quot;error\&quot;:\&quot;exception\&quot;,\&quot;message\&quot;:\&quot;异常\&quot;&#125;&quot;;</span></span><br><span class="line">    <span class="keyword">return</span> JSON.toJSONString(um);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在上述代码中，通过</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span></span><br></pre></td></tr></table></figure>
<p>指定请求的URL。<br>通过</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br></pre></td></tr></table></figure>
<p>来进行处理结果的输出。<br>在方法体内，通过um对象将um转换成JSON格式的字符串。</p>
<h2 id="解决JSON数据传递的中文乱码问题"><a href="#解决JSON数据传递的中文乱码问题" class="headerlink" title="解决JSON数据传递的中文乱码问题"></a>解决JSON数据传递的中文乱码问题</h2><h3 id="局部指定的编码集，如上述代码注释的部分"><a href="#局部指定的编码集，如上述代码注释的部分" class="headerlink" title="局部指定的编码集，如上述代码注释的部分"></a>局部指定的编码集，如上述代码注释的部分</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">produces = &#123;&quot;application/json;charset=utf-8&quot;&#125;</span><br></pre></td></tr></table></figure>


<h3 id="在sringmvc-servlet-xml-中解决JSON数据传递的中文乱码问题："><a href="#在sringmvc-servlet-xml-中解决JSON数据传递的中文乱码问题：" class="headerlink" title="在sringmvc-servlet.xml 中解决JSON数据传递的中文乱码问题："></a>在sringmvc-servlet.xml 中解决JSON数据传递的中文乱码问题：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--解决springmvc返回的json中文问题  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="解决JSON数据传递的日期格式问题"><a href="#解决JSON数据传递的日期格式问题" class="headerlink" title="解决JSON数据传递的日期格式问题"></a>解决JSON数据传递的日期格式问题</h2><p>在SpringMVC中使用@ResponseBody返回JSON数据是，日期默认显示为时间戳。如(512323200000)，我们需要把他转换成具有可读性的 ‘yyyy-MM-dd’ 日期格式（如1986-02-28）具体的解决方案有两种：</p>
<h3 id="1-注解方式"><a href="#1-注解方式" class="headerlink" title="1) 注解方式"></a>1) 注解方式</h3><p>在属性上加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@JSONfield(format=&quot;yyyy-MM-dd&quot;)</span></span><br></pre></td></tr></table></figure>


<h3 id="2-配置FastJosn消息-转换器————FastJsonHttpMessageConverter："><a href="#2-配置FastJosn消息-转换器————FastJsonHttpMessageConverter：" class="headerlink" title="2)配置FastJosn消息 转换器————FastJsonHttpMessageConverter："></a>2)配置FastJosn消息 转换器————FastJsonHttpMessageConverter：</h3><p>此方式默认格式为 yyyy-MM-dd HH:mm:ss</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--解决springmvc返回的json中文问题  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;features&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    	<span class="comment">&lt;!--输出Date的日期转换器--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>WriteDateUseDateFormat<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="单独配置JSP解析器"><a href="#单独配置JSP解析器" class="headerlink" title="单独配置JSP解析器"></a>单独配置JSP解析器</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="多视图解析器"><a href="#多视图解析器" class="headerlink" title="多视图解析器"></a>多视图解析器</h2><h3 id="导入XML生成的jar包"><a href="#导入XML生成的jar包" class="headerlink" title="导入XML生成的jar包"></a>导入XML生成的jar包</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置springmvc-servlet"><a href="#配置springmvc-servlet" class="headerlink" title="配置springmvc-servlet"></a>配置springmvc-servlet</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.ContentNegotiatingViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定JSON用什么工具解析  XML用什么工具解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultViews&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonJsonView&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;charset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.xml.MarshallingView&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.oxm.jaxb.Jaxb2Marshaller&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;classesToBeBound&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.entity.SmbmsUser<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.entity.SmbmsProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.entity.SmbmsBill<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.entity.SmbmsRole<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.entity.SmbmsAddress<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定jsp解析器--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--在此配置jsp解析器后，不需要再配置专门的解析器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;viewResolvers&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span>   <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="自定义类型转换器"><a href="#自定义类型转换器" class="headerlink" title="自定义类型转换器"></a>自定义类型转换器</h2><h4 id="单个格式转换"><a href="#单个格式转换" class="headerlink" title="单个格式转换"></a>单个格式转换</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.converter.DataConverter&quot;</span> <span class="attr">p:dataPatter</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--覆盖默认的ConversionService--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataConverter</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String,Date&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String dataPatter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDataPatter</span><span class="params">(String dataPatter)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dataPatter = dataPatter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">convert</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">data</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            data = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(dataPatter).parse(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="多个格式转换"><a href="#多个格式转换" class="headerlink" title="多个格式转换"></a>多个格式转换</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;conversionService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ConversionServiceFactoryBean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;converters&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;bean class=&quot;com.converter.DataConverter&quot; p:dataPatter=&quot;yyyy-MM-dd&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.converter.DataConverters&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataPatters&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yyyy-MM-dd<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yyyy/MM/dd<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yyyy MM dd<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--覆盖默认的ConversionService--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">conversion-service</span>=<span class="string">&quot;conversionService&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataConverters</span> <span class="keyword">implements</span> <span class="title class_">Converter</span>&lt;String, Date&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> String[] dataPatters;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">convert</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (String dataPatter : dataPatters) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                date = <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(dataPatter).parse(s);</span><br><span class="line">                <span class="comment">//转换成功出循环</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">                System.out.println(e.getMessage());</span><br><span class="line">                <span class="comment">//转换失败进入下次循环</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDataPatters</span><span class="params">(String[] dataPatters)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dataPatters = dataPatters;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--拦截器配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--拦截所有url请求--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--放过登录方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/login&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--放过 样式，图片 等请求路径--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/css/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/images/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/js/**&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.interceptor.MyInterceptor&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInterceptor</span> <span class="keyword">extends</span> <span class="title class_">HandlerInterceptorAdapter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;one&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">userSession</span> <span class="operator">=</span> request.getSession().getAttribute(<span class="string">&quot;userSession&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == userSession) &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">            <span class="comment">//返回false 不会进入 two three</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.preHandle(request, response, handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;two&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.postHandle(request, response, handler, modelAndView);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;three&quot;</span>);</span><br><span class="line">        <span class="built_in">super</span>.afterCompletion(request, response, handler, ex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="示例下载-密码-ksqj"><a href="#示例下载-密码-ksqj" class="headerlink" title="示例下载 密码: ksqj"></a><a href="https://pan.baidu.com/s/1SXee7PDu4rPBmIlmpFgw2g">示例下载</a> 密码: ksqj</h2>]]></content>
      <categories>
        <category>springMVC</category>
      </categories>
      <tags>
        <tag>springMVC</tag>
        <tag>JSON</tag>
        <tag>多视图解析</tag>
        <tag>自定义类型转换</tag>
        <tag>拦截器</tag>
        <tag>ajax</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC 文件上传 验证框架</title>
    <url>/2018/07/25/SpringMVC-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%20%E9%AA%8C%E8%AF%81%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h2 id="springMVC"><a href="#springMVC" class="headerlink" title="springMVC"></a>springMVC</h2><p>属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的SpringMVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts2(一般老项目使用)等。</p>
<span id="more"></span>

<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="编写工具类"><a href="#编写工具类" class="headerlink" title="编写工具类"></a>编写工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建目录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createDir</span><span class="params">(String path)</span>&#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">            file.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;imgFile&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="在Controller中编写方法"><a href="#在Controller中编写方法" class="headerlink" title="在Controller中编写方法"></a>在Controller中编写方法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//文件上传</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/uploadImg.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadImg</span><span class="params">(User user, MultipartFile imgFile, HttpSession session)</span>&#123;</span><br><span class="line">        System.out.println(session.getServletContext().getRealPath(<span class="string">&quot;upload&quot;</span>));</span><br><span class="line">        <span class="comment">//获取上传文件的文件名字</span></span><br><span class="line">        System.out.println(imgFile.getOriginalFilename());</span><br><span class="line">        <span class="comment">//获取保存文件的目录</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> session.getServletContext().getRealPath(<span class="string">&quot;upload&quot;</span>);</span><br><span class="line">        System.out.println(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建目录</span></span><br><span class="line">        FileUtil.createDir(path);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件保存路径</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">outFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path, imgFile.getOriginalFilename());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            imgFile.transferTo(outFile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/index&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="XML配置"><a href="#XML配置" class="headerlink" title="XML配置"></a>XML配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--上传文件必备--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxUploadSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5000000&quot;</span> /&gt;</span> <span class="comment">&lt;!--单位字节--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="文件上传必备jar包"><a href="#文件上传必备jar包" class="headerlink" title="文件上传必备jar包"></a>文件上传必备jar包</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件上传  必备1--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="验证框架"><a href="#验证框架" class="headerlink" title="验证框架"></a>验证框架</h2><h3 id="必备jar包"><a href="#必备jar包" class="headerlink" title="必备jar包"></a>必备jar包</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--验证框架的jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.2.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator-annotation-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.2.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jboss.logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jboss-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0.CR2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0.GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="配合使用的注解-注解标记在实体类属性上"><a href="#配合使用的注解-注解标记在实体类属性上" class="headerlink" title="配合使用的注解(注解标记在实体类属性上)"></a>配合使用的注解(注解标记在实体类属性上)</h3><p>@NotEmpty(message&#x3D;””) (验证注解的元素值不为null且不为空,字符串长度不为0、集合大小不为0)<br>@Null(message&#x3D;””) (被注释的元素必须为null)<br>@NotNull(message&#x3D;””) (被注释的元素必须不为null)<br>@Length(min&#x3D;””,max&#x3D;””,message&#x3D;””) ()<br>@AssertTrue(message&#x3D;””) (被注释的元素必须为true)<br>@AssertFalse(message&#x3D;””) (被注释的元素必须为false)<br>@Min(value,message&#x3D;””) (被注释的元素必须是一个数字，其值必须大于等于指定的最小值)<br>@Max(value,message&#x3D;””) (被注释的元素必须是一个数字，其值必须小于于等于指定的最大值)<br>@DecimalMin(value,message&#x3D;””) (被注释的元素必须是一个数字，其值必须大于等于指定的最小值)<br>@DecimalMax(value,message&#x3D;””) (被注释的元素必须是一个数字，其值必须小于等于指定的最大值)<br>@Size(max,min,message&#x3D;””) (被注释的元素的大小必须在指定的范围内)<br>@Digits(integer&#x3D;整数位数, fraction&#x3D;小数位数,message&#x3D;””) (验证注解的元素值的整数位数和小数位数上限)<br>@Past(message&#x3D;””) (被注释的元素必须是一个过去的日期)<br>@Future(message&#x3D;””) (被注释的元素必须是一个将来的日期)<br>@Pattern(value,message&#x3D;””) (被注释的元素必须符合指定的正则表达式)</p>
<h3 id="Controller代码示例"><a href="#Controller代码示例" class="headerlink" title="Controller代码示例"></a>Controller代码示例</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/saveUser.html&quot;)</span></span><br><span class="line">   <span class="comment">//@valid注解标识的参数后方，必须紧跟BindingResult</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">saveUser</span><span class="params">(<span class="meta">@Valid</span> User u, BindingResult br)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(br.hasErrors())&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       userService.addUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;Simon&quot;</span>));</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


<h2 id="ajax展示调用验证"><a href="#ajax展示调用验证" class="headerlink" title="ajax展示调用验证"></a>ajax展示调用验证</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/addUserVerify&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">addUserVerify</span><span class="params">(<span class="meta">@Valid</span> SmbmsUser user, BindingResult br)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(br.hasErrors())&#123;</span><br><span class="line">            List&lt;FieldError&gt; fieldErrors = br.getFieldErrors();</span><br><span class="line">            <span class="comment">//fieldErrors.get(0).getField();   得到出现错误的属性名称</span></span><br><span class="line">            <span class="comment">//fieldErrors.get(0).getDefaultMessage(); 得到错误消息</span></span><br><span class="line">            <span class="keyword">return</span> fieldErrors;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> flag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="string">&quot;POST&quot;</span>,<span class="comment">//请求类型</span></span><br><span class="line">        <span class="attr">url</span>:<span class="string">&quot;/addUserVerify&quot;</span>,<span class="comment">//请求的url</span></span><br><span class="line">        <span class="attr">data</span>:&#123;<span class="attr">userCode</span>:$(<span class="string">&quot;#userCode&quot;</span>).<span class="title function_">val</span>(),<span class="attr">userPassword</span>:$(<span class="string">&quot;#userPassword&quot;</span>).<span class="title function_">val</span>()&#125;,<span class="comment">//请求参数</span></span><br><span class="line">        <span class="attr">dataType</span>:<span class="string">&quot;json&quot;</span>,<span class="comment">//ajax接口（请求url）返回的数据类型</span></span><br><span class="line">        <span class="attr">async</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;<span class="comment">//data：返回数据（json对象）</span></span><br><span class="line">            <span class="keyword">if</span>(data != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="comment">//在html页面创建一个标签  名字和错误的键名一致  然后循环放入错误消息</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.<span class="property">length</span>; i++)&#123;</span><br><span class="line">                    <span class="keyword">var</span> temp = $(<span class="string">&quot;#&quot;</span>+data[i].<span class="property">field</span>);</span><br><span class="line">                    <span class="keyword">var</span> msg = data[i].<span class="property">defaultMessage</span>;</span><br><span class="line">                    temp.<span class="title function_">next</span>().<span class="title function_">html</span>(msg);</span><br><span class="line">                &#125;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springMVC</category>
      </categories>
      <tags>
        <tag>springMVC</tag>
        <tag>文件上传</tag>
        <tag>验证框架</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2 与 Servlet API 解耦,耦合的访问方式</title>
    <url>/2018/05/15/Struts2-%E4%B8%8E-Servlet-API-%E8%A7%A3%E8%80%A6-%E8%80%A6%E5%90%88%E7%9A%84%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="与Servlet-API解耦的访问方式"><a href="#与Servlet-API解耦的访问方式" class="headerlink" title="与Servlet API解耦的访问方式"></a>与Servlet API解耦的访问方式</h2><p>为了避免与Servlet API耦合在一起，方便Action类做单元测试，Struts2对HttpServletRequest、HttpSession和ServletContext进行了封装，构造了三个Map对象来替代这三种对象，在Action中，直接使用HttpServletRequest、HttpSession、ServletContext对应的Map对象来保存和读取数据。要获得这三个Map对象，可以使用com.opensymphony.xwork2.ActionContext类</p>
<span id="more"></span>

<h3 id="ActionContext-请求上下文-。就是struts2封装的request-包含了request-session-application上面这三个都是Map"><a href="#ActionContext-请求上下文-。就是struts2封装的request-包含了request-session-application上面这三个都是Map" class="headerlink" title="ActionContext - 请求上下文　。就是struts2封装的request.包含了request,session,application上面这三个都是Map"></a>ActionContext - 请求上下文　。就是struts2封装的request.包含了request,session,application上面这三个都是Map</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导包</span></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="comment">//常量</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.apache.struts2.StrutsStatics.HTTP_REQUEST;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.apache.struts2.StrutsStatics.HTTP_RESPONSE;</span><br><span class="line"></span><br><span class="line">Map&lt;String, Object&gt; session = ActionContext.getContext().getSession();</span><br><span class="line">Map&lt;String, Object&gt; request = (Map&lt;String, Object&gt;) ActionContext.getContext().get(HTTP_REQUEST);</span><br><span class="line">Map&lt;String, Object&gt; response = (Map&lt;String, Object&gt;) ActionContext.getContext().get(HTTP_RESPONSE);</span><br></pre></td></tr></table></figure>

<h2 id="与Servlet-API耦合的访问方式"><a href="#与Servlet-API耦合的访问方式" class="headerlink" title="与Servlet API耦合的访问方式"></a>与Servlet API耦合的访问方式</h2><p>直接访问 Servlet API将使Action类与Servlet API耦合在一起，Servlet API对象均由Servlet容器来构造，与这些对象绑定在一起，测试过程中就必须有Servlet容器，这样不便于Action类的测试，但有时候，确实需要访问这些对象，Struts2同样提供了直接访问ServletAPI对象的方式</p>
<h3 id="要直接获取Servlet-API对象可以使用org-apache-struts2-ServletActionContext类，该类是ActionContext类的子类"><a href="#要直接获取Servlet-API对象可以使用org-apache-struts2-ServletActionContext类，该类是ActionContext类的子类" class="headerlink" title="要直接获取Servlet API对象可以使用org.apache.struts2.ServletActionContext类，该类是ActionContext类的子类"></a>要直接获取Servlet API对象可以使用org.apache.struts2.ServletActionContext类，该类是ActionContext类的子类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ServletActionContext.getRequest();</span><br><span class="line"><span class="keyword">public</span> <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ServletActionContext.getResponse();</span><br><span class="line"><span class="keyword">public</span> <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<h2 id="在实际开发中，可能多个页面需要得到这三个对象，为了避免代码冗余。创建一个-ActionBase-类"><a href="#在实际开发中，可能多个页面需要得到这三个对象，为了避免代码冗余。创建一个-ActionBase-类" class="headerlink" title="在实际开发中，可能多个页面需要得到这三个对象，为了避免代码冗余。创建一个 ActionBase 类"></a>在实际开发中，可能多个页面需要得到这三个对象，为了避免代码冗余。创建一个 ActionBase 类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.util.Constants;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> org.apache.struts2.ServletActionContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ActionBase</span> <span class="keyword">extends</span> <span class="title class_">ActionSupport</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ServletActionContext.getRequest();</span><br><span class="line">    <span class="keyword">public</span> <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ServletActionContext.getResponse();</span><br><span class="line">    <span class="keyword">public</span> <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ActionBase</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//避免ajax提取数据中文乱码</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getSessionUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> session.getAttribute(Constants.USER_SESSION);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == o)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> (User) o;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>USER_SESSION</code> 为自定义的常量工具类 <code>Constants</code><br><code>User</code> 为用户对象实体类</p>
<p>每个自定义的 <code>action</code> 类，都需要继承 <code>ActionSupport</code> 而 <code>ActionBase</code> 继承 <code>ActionSupport</code> 并新增想要的属性和方法以便需要继承的 <code>ActionSupport</code> 的类 直接继承 <code>ActionBase</code></p>
<h3 id="新增属性"><a href="#新增属性" class="headerlink" title="新增属性"></a>新增属性</h3><p>上面代码可见新增了 <code>request</code> <code>response</code> <code>session</code> 的属性 这样就实现自己新增的属性以及 <code>ActionSupport</code> 的属性</p>
<h3 id="新增方法"><a href="#新增方法" class="headerlink" title="新增方法"></a>新增方法</h3><p>上面代码可见新增了 <code>getSessionUser</code> 的方法 这样就实现自己新增的方法以及 <code>ActionSupport</code> 的方法，以便自己可以直接提取存在会话的用户对象 <code>User</code></p>
]]></content>
      <categories>
        <category>struts2</category>
      </categories>
      <tags>
        <tag>struts2</tag>
        <tag>Servlet API</tag>
        <tag>解耦</tag>
        <tag>耦合</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2如何在Action与JSP之间传值</title>
    <url>/2017/06/29/Struts2%E5%A6%82%E4%BD%95%E5%9C%A8Action%E4%B8%8EJSP%E4%B9%8B%E9%97%B4%E4%BC%A0%E5%80%BC/</url>
    <content><![CDATA[<h2 id="struts2中Action到底是什么，怎么理解"><a href="#struts2中Action到底是什么，怎么理解" class="headerlink" title="struts2中Action到底是什么，怎么理解"></a>struts2中Action到底是什么，怎么理解</h2><span id="more"></span>

<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><h4 id="struts2中Action到底是什么，怎么理解-1"><a href="#struts2中Action到底是什么，怎么理解-1" class="headerlink" title="struts2中Action到底是什么，怎么理解"></a>struts2中Action到底是什么，怎么理解</h4><p>1.配置完web.xml<br>2.创建视图页面login.jsp<br>3.创建业务控制器LoginAction类<br>（解释说：创建业务控制器LoginAction类，该类为程序的Action类）<br>4.配置LoginAction类<br>（解释说：当Action处理完客户端请求后返回一个字符串，没个字符串对应一个视图）</p>
<p>那么这个Action到底是什么，是一个类吗？怎么理解它，它和用于标签的有什么区别。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>首先，你了解Servlet么？Servlet是运行在java服务器端的java代码，这个Action本质就是Servlet啊。它作为java web应用的控制层，它完成浏览器的请求后返回一个页面给客户端浏览器。<br>其次，action的处理流程是由strut2的中央控制器完成的，Action处理完客户端请求后返回一个字符串，每个字符串对应一个视图，也就是说它处理浏览器的请求的过程，返回的视图本质就是jsp页面。<br>结论就是：action的本质就是Servlet。</p>
<h2 id="Struts2如何在Action与JSP之间传值"><a href="#Struts2如何在Action与JSP之间传值" class="headerlink" title="Struts2如何在Action与JSP之间传值"></a>Struts2如何在Action与JSP之间传值</h2><h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>ActionValueOf<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ActionValueOf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="User-用户实体类"><a href="#User-用户实体类" class="headerlink" title="User 用户实体类"></a>User 用户实体类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="InfoAction"><a href="#InfoAction" class="headerlink" title="InfoAction"></a>InfoAction</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> action;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InfoAction</span> <span class="keyword">extends</span> <span class="title class_">ActionSupport</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h3><p><code>index.jsp</code> 只用于打开页面时先进入 <code>action</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%--meta标签在 index.jsp 打开后跳转到指定的 action--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0; url=info.action&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="info-jsp"><a href="#info-jsp" class="headerlink" title="info.jsp"></a>info.jsp</h3><p><code>info.jsp</code> 用一个页面来实现与 <code>action</code> 的相互传值,其中用 <code>OGNL</code> 来提取 <code>action</code> 实体类的值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;info.action&quot;</span>&gt;</span></span><br><span class="line">    用户名 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user.username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;s:property value=&quot;</span><span class="attr">user.username</span>&quot;/&gt;</span>&quot;/&gt;</span><br><span class="line">    密　码 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user.password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;s:property value=&quot;</span><span class="attr">user.password</span>&quot;/&gt;</span>&quot;/&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;info.action?user.username=Simon&amp;user.password=password&quot;</span>&gt;</span>利用script get方式进入action<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>用户名 : <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">&quot;user.username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>密　码 : <span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">&quot;user.password&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="struts-xml-配置文件"><a href="#struts-xml-配置文件" class="headerlink" title="struts.xml 配置文件"></a>struts.xml 配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;default&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action.InfoAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span>&gt;</span>info.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="web-xml-配置"><a href="#web-xml-配置" class="headerlink" title="web.xml 配置"></a>web.xml 配置</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="点击下载案例"><a href="#点击下载案例" class="headerlink" title="点击下载案例"></a><a href="https://gitee.com/admin-james/action-value-of-demo">点击下载案例</a></h2>]]></content>
      <categories>
        <category>struts2</category>
        <category>Action</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>OGNL</tag>
        <tag>struts2</tag>
        <tag>Action</tag>
        <tag>传值</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2拦截器实现用户访问控制</title>
    <url>/2017/06/14/Struts2%E6%8B%A6%E6%88%AA%E5%99%A8%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h2 id="拦截器-Interceptor"><a href="#拦截器-Interceptor" class="headerlink" title="拦截器 Interceptor"></a>拦截器 Interceptor</h2><p>java里的拦截器是动态拦截Action调用的对象。它提供了一种机制可以使开发者可以定义在一个action执行的前后执行的代码，也可以在一个action执行前阻止其执行，同时也提供了一种可以提取action中可重用部分的方式。在AOP（Aspect-Oriented Programming）中拦截器用于在某个方法或字段被访问之前，进行拦截然后在之前或之后加入某些操作。</p>
<span id="more"></span>

<h2 id="自定义拦截器"><a href="#自定义拦截器" class="headerlink" title="自定义拦截器"></a>自定义拦截器</h2><h3 id="自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。"><a href="#自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。" class="headerlink" title="自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。"></a>自定义一个实现Interceptor接口（或者继承自AbstractInterceptor）的类。</h3><h3 id="在struts-xml中注册上一步中定义的拦截器。"><a href="#在struts-xml中注册上一步中定义的拦截器。" class="headerlink" title="在struts.xml中注册上一步中定义的拦截器。"></a>在struts.xml中注册上一步中定义的拦截器。</h3><h3 id="在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。"><a href="#在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。" class="headerlink" title="在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。"></a>在需要使用的Action中引用上述定义的拦截器，为了方便也可将拦截器定义为默认的拦截器，这样在不加特殊声明的情况下所有的Action都被这个拦截器拦截。</h3><h2 id="与过滤器的区别"><a href="#与过滤器的区别" class="headerlink" title="与过滤器的区别"></a>与过滤器的区别</h2><p>过滤器可以简单理解为“取你所想取”，忽视掉那些你不想要的东西；拦截器可以简单理解为“拒你所想拒”，关心你想要拒绝掉哪些东西，比如一个BBS论坛上拦截掉敏感词汇。</p>
<h3 id="拦截器是基于java反射机制的，而过滤器是基于函数回调的。"><a href="#拦截器是基于java反射机制的，而过滤器是基于函数回调的。" class="headerlink" title="拦截器是基于java反射机制的，而过滤器是基于函数回调的。"></a>拦截器是基于java反射机制的，而过滤器是基于函数回调的。</h3><h3 id="过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。"><a href="#过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。" class="headerlink" title="过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。"></a>过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。</h3><h3 id="拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。"><a href="#拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。" class="headerlink" title="拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。"></a>拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。</h3><h3 id="拦截器可以访问action上下文、值栈里的对象，而过滤器不能。"><a href="#拦截器可以访问action上下文、值栈里的对象，而过滤器不能。" class="headerlink" title="拦截器可以访问action上下文、值栈里的对象，而过滤器不能。"></a>拦截器可以访问action上下文、值栈里的对象，而过滤器不能。</h3><h3 id="在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。"><a href="#在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。" class="headerlink" title="在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。"></a>在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。</h3><h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionInvocation;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.interceptor.AbstractInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">extends</span> <span class="title class_">AbstractInterceptor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">intercept</span><span class="params">(ActionInvocation actionInvocation)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//得到session key为users 的数据</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">users</span> <span class="operator">=</span> actionInvocation.getInvocationContext().getSession().get(<span class="string">&quot;users&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> actionInvocation.getInvocationContext().getName();</span><br><span class="line">        <span class="comment">//得到访问action 的名字 login.action 得到 login</span></span><br><span class="line">        System.out.println(name);</span><br><span class="line">        <span class="comment">//第一次登录时users 肯定为空,如果登录时找不到users 应该给它通过拦截器</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != users || <span class="string">&quot;login&quot;</span>.equals(name))</span><br><span class="line">            <span class="comment">//继续执行剩余的拦截器和action</span></span><br><span class="line">            <span class="keyword">return</span> actionInvocation.invoke();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="struts-xml-拦截器配置"><a href="#struts-xml-拦截器配置" class="headerlink" title="struts.xml 拦截器配置"></a>struts.xml 拦截器配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;default&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--定义权限验证拦截器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">&quot;sessionUser&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.interceptor.LoginInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">interceptor</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">&quot;LoginFlag&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;sessionUser&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;defaultStack&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义默认拦截器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">default-interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;LoginFlag&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中可以看到有一行配置 <code>&lt;interceptor-ref name=&quot;defaultStack&quot;/&gt;</code> defaultStack该拦截器用于实现数据的传输，如果不写的话会出现数据提取不到</p>
]]></content>
      <categories>
        <category>struts2</category>
        <category>idea</category>
        <category>Interceptor</category>
        <category>AbstractInterceptor</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>struts2</tag>
        <tag>拦截器</tag>
        <tag>Interceptor</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2的配置 struts.xml Action详解</title>
    <url>/2018/05/15/Struts2%E7%9A%84%E9%85%8D%E7%BD%AE-struts-xml-Action%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="struts-xml中的package的配置"><a href="#struts-xml中的package的配置" class="headerlink" title="struts.xml中的package的配置"></a>struts.xml中的package的配置</h2><p><code>name</code>:逻辑上的包名</p>
<p><code>namespace</code>:命名空间，用来区分同意struts下的相同action（注意是一种逻辑上的的路径） 默认 <code>/</code></p>
<p><code>extends</code>: 继承某个配置文件 默认 <code>struts-default</code></p>
<span id="more"></span>

<h3 id="具体使用过程中要注意，有与命名空间的命名，我们要在相应的过程中加上对应的命名空间的路径，例如："><a href="#具体使用过程中要注意，有与命名空间的命名，我们要在相应的过程中加上对应的命名空间的路径，例如：" class="headerlink" title="具体使用过程中要注意，有与命名空间的命名，我们要在相应的过程中加上对应的命名空间的路径，例如："></a>具体使用过程中要注意，有与命名空间的命名，我们要在相应的过程中加上对应的命名空间的路径，例如：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">s:form</span> <span class="attr">action</span>=<span class="string">&quot;db/login.action&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此代码说明的就是将会去调用db命名空间下的login对应的action</p>
<h3 id="标签的下的是物理路径（绝对路径），即指在项目中的实际位置，代码如下"><a href="#标签的下的是物理路径（绝对路径），即指在项目中的实际位置，代码如下" class="headerlink" title="标签的下的是物理路径（绝对路径），即指在项目中的实际位置，代码如下"></a><result>标签的下的是物理路径（绝对路径），即指在项目中的实际位置，代码如下</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/login/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="struts-xml中的result的配置"><a href="#struts-xml中的result的配置" class="headerlink" title="struts.xml中的result的配置"></a>struts.xml中的result的配置</h2><h3 id="对于action的配置我这里面只是简单的概括，具体很多细节性的东西我将专门写一篇博客，主要讲解的动态的对action进行配置属性有："><a href="#对于action的配置我这里面只是简单的概括，具体很多细节性的东西我将专门写一篇博客，主要讲解的动态的对action进行配置属性有：" class="headerlink" title="对于action的配置我这里面只是简单的概括，具体很多细节性的东西我将专门写一篇博客，主要讲解的动态的对action进行配置属性有："></a>对于action的配置我这里面只是简单的概括，具体很多细节性的东西我将专门写一篇博客，主要讲解的动态的对action进行配置属性有：</h3><p><code>name</code>:Action类的映射名称 默认值 <code>success</code></p>
<p><code>class</code>:Action类的完整路径</p>
<p><code>method</code>:默认使用的execute()方法，如果要自定义触发方法，需要使用method自定义 默认值 <code>execute</code></p>
<h2 id="struts-xml配置过程中的注意信息"><a href="#struts-xml配置过程中的注意信息" class="headerlink" title="struts.xml配置过程中的注意信息"></a>struts.xml配置过程中的注意信息</h2><p>在实际开发的项目中，我们可能需要配置很多的action，有时候为了便于我们的分类，我们一般需要创建不同包下的struts-user.xml文件，不过最终我们的这些配置都是要导入进我们的struts.xml文件中。使用的标签和jsp编程中<include></p>
<h3 id="struts-xml"><a href="#struts-xml" class="headerlink" title="struts.xml"></a>struts.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;struts-user.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="struts-user-xml"><a href="#struts-user-xml" class="headerlink" title="struts-user.xml"></a>struts-user.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.ui.theme&quot;</span> <span class="attr">value</span>=<span class="string">&quot;simple&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/db&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.action.UserAction&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">method</span>=<span class="string">&quot;execude2&quot;</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--result下的路径是物理路径 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/login/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/login/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!-- 包名不能相同 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;usertemp&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/temp&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.action.UserAction&quot;</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">method</span>=<span class="string">&quot;execude2&quot;</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--result下的路径是物理路径 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/login/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/login/success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Action的动态结果的配置"><a href="#Action的动态结果的配置" class="headerlink" title="Action的动态结果的配置"></a>Action的动态结果的配置</h2><h3 id="通过通配符实现，不同的类响应不同的类中的方法："><a href="#通过通配符实现，不同的类响应不同的类中的方法：" class="headerlink" title="通过通配符实现，不同的类响应不同的类中的方法："></a>通过通配符实现，不同的类响应不同的类中的方法：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;*_*&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.action.&#123;1&#125;Action&quot;</span> <span class="attr">method</span>=<span class="string">&quot;&#123;2&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> &gt;</span>/&#123;2&#125;.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="UserAction-Java"><a href="#UserAction-Java" class="headerlink" title="UserAction.Java"></a>UserAction.Java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserAction</span> <span class="keyword">extends</span> <span class="title class_">ActionSupport</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String nextResult;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Struts2-xml"><a href="#Struts2-xml" class="headerlink" title="Struts2.xml"></a>Struts2.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action.UserAction&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span>&gt;</span>/&#123;nextResult&#125;<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>struts2</category>
        <category>struts.xml</category>
      </categories>
      <tags>
        <tag>struts2</tag>
        <tag>Action</tag>
        <tag>struts.xml</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2的配置和一个简单的例子</title>
    <url>/2017/06/07/Struts2%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%BE%8B%E5%AD%90/</url>
    <content><![CDATA[<h2 id="什么是Struts2"><a href="#什么是Struts2" class="headerlink" title="什么是Struts2"></a>什么是Struts2</h2><p>Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着太大的变化，但是相对于WebWork，Struts 2的变化很小。</p>
<span id="more"></span>

<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><pre><code>idea
tomcat
jdk
maven
</code></pre>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="pom-xml-配置-Struts2"><a href="#pom-xml-配置-Struts2" class="headerlink" title="pom.xml 配置 Struts2"></a>pom.xml 配置 Struts2</h3><p><a href="https://mvnrepository.com/artifact/org.apache.struts">点击前往获取自己想要的版本对应的XML</a></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.struts<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>struts2-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.16.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建-User-类-用于展现提取对象的数据"><a href="#创建-User-类-用于展现提取对象的数据" class="headerlink" title="创建 User 类 用于展现提取对象的数据"></a>创建 User 类 用于展现提取对象的数据</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建-LoginAction-类-代替以往的-servlet-层"><a href="#创建-LoginAction-类-代替以往的-servlet-层" class="headerlink" title="创建 LoginAction 类 代替以往的 servlet 层"></a>创建 LoginAction 类 代替以往的 servlet 层</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.action;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.Action;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionContext;</span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承 ActionSupport 用于实现 servlet层 数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginAction</span> <span class="keyword">extends</span> <span class="title class_">ActionSupport</span> <span class="keyword">implements</span> <span class="title class_">Action</span> &#123;</span><br><span class="line">    <span class="comment">//接收页面提交数据 属性名 为 input 标签 name 属性</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供 get set 接收页面的数据 get 为提取 set 为接收</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实现Action 的方法 为 struts.xml action 标签 method=&quot;&quot;的默认方法入口 可以不写该属性</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于实现 servlet层 数据校验</span></span><br><span class="line">    <span class="comment">//在页面跳转到login 方法前会先进来这里面</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">validate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(username.length()==<span class="number">0</span> || password.length()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//如果在validate 方法里面 调用addFieldError 则后面不进入 login 方法 并如同login 默认返回 Action 接口提供的INPUT常量字符串</span></span><br><span class="line">            addFieldError(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;用户名不能为空&quot;</span>);</span><br><span class="line">            addFieldError(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;密码不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义入口 login</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setUsername(<span class="string">&quot;simon&quot;</span>);</span><br><span class="line">        user.setPassword(<span class="string">&quot;simon&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到上下文对象</span></span><br><span class="line">        <span class="type">ActionContext</span> <span class="variable">context</span> <span class="operator">=</span> ActionContext.getContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到request对象</span></span><br><span class="line">        Map&lt;String, Object&gt; request = (Map&lt;String, Object&gt;) context.get(<span class="string">&quot;request&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到session对象</span></span><br><span class="line">        Map&lt;String, Object&gt; session = context.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到application对象</span></span><br><span class="line">        Map&lt;String, Object&gt; application = context.getApplication();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user.getUsername().equals(getUsername()) &amp;&amp; user.getPassword().equals(getPassword())) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//登录成功存一个User对象</span></span><br><span class="line">            session.put(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//使用自定义字符串返回 success Action 接口提供的常量为 SUCCESS</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义errorinfo 错误信息到request</span></span><br><span class="line">        request.put(<span class="string">&quot;errorinfo&quot;</span>, <span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">        <span class="comment">//使用Action 接口提供的常量字符串</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="创建页面-index-jsp"><a href="#创建页面-index-jsp" class="headerlink" title="创建页面 index.jsp"></a>创建页面 index.jsp</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%--从request里面找errorinfo的数据--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>$&#123;requestScope.errorinfo&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&lt;%--显示全部 fielderror 错误信息--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">s:fielderror</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&lt;%--显示某个 fielderror 错误信息--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;<span class="name">s:fielderror</span> <span class="attr">fieldName</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">&lt;%--Login 为 struts.xml 定义 action name 的名称 .action 为 Struts 标识--%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;Login.action&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    &lt;%--name属性要和LoginAction对象的属性一致--%&gt;</span><br><span class="line">    用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密　码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="创建页面-success-jsp"><a href="#创建页面-success-jsp" class="headerlink" title="创建页面 success.jsp"></a>创建页面 success.jsp</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎您，<span class="tag">&lt;<span class="name">s:property</span> <span class="attr">value</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>session对象的User对象数据<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户名: $&#123;sessionScope.user.username&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>密　码: $&#123;sessionScope.user.password&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置-web-xml-文件"><a href="#配置-web-xml-文件" class="headerlink" title="配置 web.xml 文件"></a>配置 web.xml 文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置-struts-xml-文件"><a href="#配置-struts-xml-文件" class="headerlink" title="配置 struts.xml 文件"></a>配置 struts.xml 文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;default&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--method 默认值为execute 也可以自定义login方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;Login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.action.LoginAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示程序处理正常，并返回给用户成功后的结果--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>success.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示处理结果失败--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--表示数据校验处理失败--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;input&quot;</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h2><h3 id="Struts2官方文档"><a href="#Struts2官方文档" class="headerlink" title="Struts2官方文档"></a><a href="http://struts.apache.org/docs/">Struts2官方文档</a></h3>]]></content>
      <categories>
        <category>struts2</category>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>struts2</tag>
        <tag>servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题个性化教程</title>
    <url>/2017/04/05/Theme-of-personalized/</url>
    <content><![CDATA[<h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><p><a href="http://tholman.com/github-corners/">点击 GitHub Corners</a> 或者 <a href="https://blog.github.com/2008-12-19-github-ribbons/">点击 GitHub Ribbons</a> 挑选自己喜欢的样式，并复制代码。</p>
<p>然后粘贴刚才复制的代码到 <code>themes/Hexo主题文件夹/layout/导航栏定义文件</code> 的文件中(代码放置位置自行调节)，例如 <code>Next主题</code> 位于 <code>themes/next/layout/_layout.swig</code> 并把href改为你的GitHub地址</p>
<span id="more"></span>

<h2 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h2><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 <code>Hexo</code> 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p>
<p>在 <code>Hexo</code> 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 <code>_config.yml</code> 将 <code>skip_render</code> 参数的值设置为</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br></pre></td></tr></table></figure>

<h2 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h2><p>打开主题配置文件 <code>_config.yml</code> 搜索 <code>social_icons:</code> 在<a href="https://fontawesome.com/icons">图标库</a>找自己喜欢的小图标，并将名字复制到对应的键值对</p>
<h2 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h2><p>打开 <code>\themes\next\layout\_partials\footer.swig</code> 文件,在copyright前加上：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>然后在合适的位置添加显示统计的代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user-md&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class="line">本站访客数:<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="在这里有两中不同计算方式的统计代码"><a href="#在这里有两中不同计算方式的统计代码" class="headerlink" title="在这里有两中不同计算方式的统计代码"></a>在这里有两中不同计算方式的统计代码</h3><h4 id="pv的方式，单个用户连续点击n篇文章，记录n次访问量"><a href="#pv的方式，单个用户连续点击n篇文章，记录n次访问量" class="headerlink" title="pv的方式，单个用户连续点击n篇文章，记录n次访问量"></a>pv的方式，单个用户连续点击n篇文章，记录n次访问量</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_pv&quot;</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"><a href="#uv的方式，单个用户连续点击n篇文章，只记录1次访客数" class="headerlink" title="uv的方式，单个用户连续点击n篇文章，只记录1次访客数"></a>uv的方式，单个用户连续点击n篇文章，只记录1次访客数</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_container_site_uv&quot;</span>&gt;</span></span><br><span class="line">  本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>添加之后再执行 <code>hexo d -g</code> 然后再刷新页面就能看到效果</p>
<h2 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h2><p>切换到根目录下，然后运行如下代码</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<p>然后在 <code>/themes/next/layout/_partials/footer.swig</code> 文件尾部加上：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;theme-info&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-count&quot;</span>&gt;</span>博客全站共&#123;&#123; totalcount(site) &#125;&#125;字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h2><p>在根目录下安装 <code>hexo-wordcount</code> 运行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<p>然后在主题的配置文件中，配置如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="每次-hexo-new-“My-New-Post”-生成默认的md文件格式"><a href="#每次-hexo-new-“My-New-Post”-生成默认的md文件格式" class="headerlink" title="每次 hexo new “My New Post” 生成默认的md文件格式"></a>每次 hexo new “My New Post” 生成默认的md文件格式</h2><p>在 <code>/scaffolds/post.md</code> 文件中修改默认格式</p>
<h2 id="隐藏网页底部powered-By-Hexo-x2F-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-x2F-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo &#x2F; 强力驱动"></a>隐藏网页底部powered By Hexo &#x2F; 强力驱动</h2><p>打开 <code>themes/next/layout/_partials/footer.swig</code> 使用 <code>&lt;!-- --&gt;</code> 隐藏之间的代码即可，或者直接删除</p>
<h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>打开 <code>themes/next/layout/_partials/head.swig</code> 文件，在以下位置插入这样一段代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">prompt</span>(<span class="string">&#x27;请输入访问密码&#x27;</span>) !== <span class="string">&#x27;&#123;&#123; page.password &#125;&#125;&#x27;</span>)&#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&#x27;访问失败&#x27;</span>);</span><br><span class="line">                history.<span class="title function_">back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>然后在文章上定义键值对密码</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">category:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">password</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h2><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> 在里面写下如下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;http://om8u46rmb.bkt.clouddn.com/sword2.ico&quot;</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">&quot;http://om8u46rmb.bkt.clouddn.com/sword1.ico&quot;</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>其中 <code>url</code> 里面必须是 <code>ico</code> 图片，ico 图片可以上传到网上</p>
<h2 id="点击爆炸效果"><a href="#点击爆炸效果" class="headerlink" title="点击爆炸效果"></a>点击爆炸效果</h2><p>首先在 <code>themes/next/source/js/src</code> 里面建一个叫 <code>fireworks.js</code> 的文件，代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    pointerX = (e.<span class="property">clientX</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>) - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>, pointerY = e.<span class="property">clientY</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span> - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">360</span>) * <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>, a = anime.<span class="title function_">random</span>(<span class="number">50</span>, <span class="number">180</span>), n = [-<span class="number">1</span>, <span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">x</span>: e.<span class="property">x</span> + n * <span class="title class_">Math</span>.<span class="title function_">cos</span>(t), <span class="attr">y</span>: e.<span class="property">y</span> + n * <span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">x</span> = e, a.<span class="property">y</span> = t, a.<span class="property">color</span> = colors[anime.<span class="title function_">random</span>(<span class="number">0</span>, colors.<span class="property">length</span> - <span class="number">1</span>)], a.<span class="property">radius</span> = anime.<span class="title function_">random</span>(<span class="number">16</span>, <span class="number">32</span>), a.<span class="property">endPos</span> = <span class="title function_">setParticuleDirection</span>(a), a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="title function_">beginPath</span>(), ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>), ctx.<span class="property">fillStyle</span> = a.<span class="property">color</span>, ctx.<span class="title function_">fill</span>()</span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">x</span> = e, a.<span class="property">y</span> = t, a.<span class="property">color</span> = <span class="string">&quot;#F00&quot;</span>, a.<span class="property">radius</span> = <span class="number">0.1</span>, a.<span class="property">alpha</span> = <span class="number">0.5</span>, a.<span class="property">lineWidth</span> = <span class="number">6</span>, a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="property">globalAlpha</span> = a.<span class="property">alpha</span>, ctx.<span class="title function_">beginPath</span>(), ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>), ctx.<span class="property">lineWidth</span> = a.<span class="property">lineWidth</span>, ctx.<span class="property">strokeStyle</span> = a.<span class="property">color</span>, ctx.<span class="title function_">stroke</span>(), ctx.<span class="property">globalAlpha</span> = <span class="number">1</span></span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.<span class="property">animatables</span>.<span class="property">length</span>; t++) &#123;</span><br><span class="line">        e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="title function_">createCircle</span>(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">        n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e, t))</span><br><span class="line">    &#125;</span><br><span class="line">    anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;</span><br><span class="line">        <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span></span><br><span class="line">        &#125;, <span class="attr">y</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span></span><br><span class="line">        &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>, <span class="attr">update</span>: renderParticule</span><br><span class="line">    &#125;).<span class="title function_">add</span>(&#123;</span><br><span class="line">        <span class="attr">targets</span>: a,</span><br><span class="line">        <span class="attr">radius</span>: anime.<span class="title function_">random</span>(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">        <span class="attr">lineWidth</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">alpha</span>: &#123;<span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">600</span>, <span class="number">800</span>)&#125;,</span><br><span class="line">        <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">        <span class="attr">update</span>: renderParticule,</span><br><span class="line">        <span class="attr">offset</span>: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="variable language_">this</span>, i = <span class="variable language_">arguments</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(a), a = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            e.<span class="title function_">apply</span>(n, i)</span><br><span class="line">        &#125;, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>), numberOfParticules = <span class="number">30</span>, pointerX = <span class="number">0</span>, pointerY = <span class="number">0</span>, tap = <span class="string">&quot;mousedown&quot;</span>, colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>], setCanvasSize = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        canvasEl.<span class="property">width</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerWidth</span>, canvasEl.<span class="property">height</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerHeight</span>, canvasEl.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> + <span class="string">&quot;px&quot;</span>, canvasEl.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> + <span class="string">&quot;px&quot;</span>, canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;, <span class="number">500</span>), render = <span class="title function_">anime</span>(&#123;</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvasEl.<span class="property">width</span>, canvasEl.<span class="property">height</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="string">&quot;sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp; <span class="string">&quot;toggle-sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp; <span class="string">&quot;A&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; <span class="string">&quot;IMG&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; (render.<span class="title function_">play</span>(), <span class="title function_">updateCoords</span>(e), <span class="title function_">animateParticules</span>(pointerX, pointerY))</span><br><span class="line">    &#125;, !<span class="number">1</span>), <span class="title function_">setCanvasSize</span>(), <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    pointerX = (e.<span class="property">clientX</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>) - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>, pointerY = e.<span class="property">clientY</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span> - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">360</span>) * <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">180</span>, a = anime.<span class="title function_">random</span>(<span class="number">50</span>, <span class="number">180</span>), n = [-<span class="number">1</span>, <span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">x</span>: e.<span class="property">x</span> + n * <span class="title class_">Math</span>.<span class="title function_">cos</span>(t), <span class="attr">y</span>: e.<span class="property">y</span> + n * <span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">x</span> = e, a.<span class="property">y</span> = t, a.<span class="property">color</span> = colors[anime.<span class="title function_">random</span>(<span class="number">0</span>, colors.<span class="property">length</span> - <span class="number">1</span>)], a.<span class="property">radius</span> = anime.<span class="title function_">random</span>(<span class="number">16</span>, <span class="number">32</span>), a.<span class="property">endPos</span> = <span class="title function_">setParticuleDirection</span>(a), a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="title function_">beginPath</span>(), ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>), ctx.<span class="property">fillStyle</span> = a.<span class="property">color</span>, ctx.<span class="title function_">fill</span>()</span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.<span class="property">x</span> = e, a.<span class="property">y</span> = t, a.<span class="property">color</span> = <span class="string">&quot;#F00&quot;</span>, a.<span class="property">radius</span> = <span class="number">0.1</span>, a.<span class="property">alpha</span> = <span class="number">0.5</span>, a.<span class="property">lineWidth</span> = <span class="number">6</span>, a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="property">globalAlpha</span> = a.<span class="property">alpha</span>, ctx.<span class="title function_">beginPath</span>(), ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>), ctx.<span class="property">lineWidth</span> = a.<span class="property">lineWidth</span>, ctx.<span class="property">strokeStyle</span> = a.<span class="property">color</span>, ctx.<span class="title function_">stroke</span>(), ctx.<span class="property">globalAlpha</span> = <span class="number">1</span></span><br><span class="line">    &#125;, a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.<span class="property">animatables</span>.<span class="property">length</span>; t++) &#123;</span><br><span class="line">        e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="title function_">createCircle</span>(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">        n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e, t))</span><br><span class="line">    &#125;</span><br><span class="line">    anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;</span><br><span class="line">        <span class="attr">targets</span>: n, <span class="attr">x</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span></span><br><span class="line">        &#125;, <span class="attr">y</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span></span><br><span class="line">        &#125;, <span class="attr">radius</span>: <span class="number">0.1</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>), <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>, <span class="attr">update</span>: renderParticule</span><br><span class="line">    &#125;).<span class="title function_">add</span>(&#123;</span><br><span class="line">        <span class="attr">targets</span>: a,</span><br><span class="line">        <span class="attr">radius</span>: anime.<span class="title function_">random</span>(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">        <span class="attr">lineWidth</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">alpha</span>: &#123;<span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">600</span>, <span class="number">800</span>)&#125;,</span><br><span class="line">        <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">        <span class="attr">update</span>: renderParticule,</span><br><span class="line">        <span class="attr">offset</span>: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="variable language_">this</span>, i = <span class="variable language_">arguments</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(a), a = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            e.<span class="title function_">apply</span>(n, i)</span><br><span class="line">        &#125;, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    <span class="keyword">var</span> ctx = canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>), numberOfParticules = <span class="number">30</span>, pointerX = <span class="number">0</span>, pointerY = <span class="number">0</span>, tap = <span class="string">&quot;mousedown&quot;</span>, colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>], setCanvasSize = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        canvasEl.<span class="property">width</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerWidth</span>, canvasEl.<span class="property">height</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerHeight</span>, canvasEl.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> + <span class="string">&quot;px&quot;</span>, canvasEl.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> + <span class="string">&quot;px&quot;</span>, canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;, <span class="number">500</span>), render = <span class="title function_">anime</span>(&#123;</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>, <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvasEl.<span class="property">width</span>, canvasEl.<span class="property">height</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="string">&quot;sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp; <span class="string">&quot;toggle-sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp; <span class="string">&quot;A&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; <span class="string">&quot;IMG&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp; (render.<span class="title function_">play</span>(), <span class="title function_">updateCoords</span>(e), <span class="title function_">animateParticules</span>(pointerX, pointerY))</span><br><span class="line">    &#125;, !<span class="number">1</span>), <span class="title function_">setCanvasSize</span>(), <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>打开 <code>themes/next/layout/_layout.swig</code> 在 <code>&lt;/body&gt;</code> 上面写下如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">fireworks</span> %&#125;</span><br><span class="line">   &lt;canvas <span class="keyword">class</span>=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/fireworks.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件，在里面最后写下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fireworks</span></span><br><span class="line"><span class="attr">fireworks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo</category>
        <category>next</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>搭建博客</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 设置MySQL远程访问权限</title>
    <url>/2018/11/30/Ubuntu-%E8%AE%BE%E7%BD%AEMySQL%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h2 id="第一步：修改配置文件的端口绑定"><a href="#第一步：修改配置文件的端口绑定" class="headerlink" title="第一步：修改配置文件的端口绑定"></a>第一步：修改配置文件的端口绑定</h2><p>打开的目录可能会根据MySQL的版本稍有不同，可以先尝试打开&#x2F;etc&#x2F;mysql&#x2F;my.cnf这个配置文件，若该文件不存在或文件内容为空，则尝试下面的文件路径。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>在下面行的开头加上#，注释掉该行，然后保存退出vim(文本编辑器)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bind-address = 127.0.0.1</span><br></pre></td></tr></table></figure>

<h2 id="第二步：修改访问权限"><a href="#第二步：修改访问权限" class="headerlink" title="第二步：修改访问权限"></a>第二步：修改访问权限</h2><p>进入mysql,输入如下命令，输入密码，进入mysql命令行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<p>授权root用户访问权限，并刷新权限，此处的root可用其它MySQL用户替换，{password}部分需替换为该用户对应的密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to root@&quot;%&quot; with grant option;</span><br><span class="line">flush privileges;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure>

<h2 id="第三步：重启mysql服务"><a href="#第三步：重启mysql服务" class="headerlink" title="第三步：重启mysql服务"></a>第三步：重启mysql服务</h2><p>重启mysql服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>
<p>启动mysql服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure>
<p>停止mysql服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure>
<p>查看mysql服务状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysql status</span><br></pre></td></tr></table></figure>

<h2 id="第四步：关闭服务器防火墙"><a href="#第四步：关闭服务器防火墙" class="headerlink" title="第四步：关闭服务器防火墙"></a>第四步：关闭服务器防火墙</h2><p>关闭防火墙</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure>
<p>开启防火墙</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>
<p>查看当前防火墙状态(inactive关闭状态 active开启状态)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>

<h2 id="第五步：添加安全组规则"><a href="#第五步：添加安全组规则" class="headerlink" title="第五步：添加安全组规则"></a>第五步：添加安全组规则</h2><h3 id="根据自己购买的ECS平台添加安全组规则"><a href="#根据自己购买的ECS平台添加安全组规则" class="headerlink" title="根据自己购买的ECS平台添加安全组规则"></a><a href="https://www.baidu.com/s?wd=%E6%B7%BB%E5%8A%A0%E5%AE%89%E5%85%A8%E7%BB%84%E8%A7%84%E5%88%99">根据自己购买的ECS平台添加安全组规则</a></h3>]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>mysql</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu重启/关机命令</title>
    <url>/2018/12/04/Ubuntu%E9%87%8D%E5%90%AF-%E5%85%B3%E6%9C%BA%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="重启命令"><a href="#重启命令" class="headerlink" title="重启命令"></a>重启命令</h2><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">reboot</td>
<td align="left">重启</td>
</tr>
<tr>
<td align="left">shutdown -r now</td>
<td align="left">立刻重启</td>
</tr>
<tr>
<td align="left">shutdown -r 7</td>
<td align="left">过7分钟自动重启</td>
</tr>
<tr>
<td align="left">shutdown -r 21:35</td>
<td align="left">在时间为21:35时候重启</td>
</tr>
</tbody></table>
<p>如果是通过shutdown命令设置重启的话，可以用 <em>shutdown -c</em> 命令取消重启</p>
<span id="more"></span>

<h2 id="关机命令"><a href="#关机命令" class="headerlink" title="关机命令"></a>关机命令</h2><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">halt</td>
<td align="left">立刻关机（一般加-p 关闭电源）</td>
</tr>
<tr>
<td align="left">poweroff</td>
<td align="left">立刻关机</td>
</tr>
<tr>
<td align="left">shutdown -h now</td>
<td align="left">立刻关机</td>
</tr>
<tr>
<td align="left">shutdown -h 10</td>
<td align="left">10分钟后自动关机</td>
</tr>
</tbody></table>
<p>如果是通过shutdown命令设置重启的话，可以用 <em>shutdown -c</em> 命令取消重启</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>centOS安装maven</title>
    <url>/2019/05/05/centOS%E5%AE%89%E8%A3%85maven/</url>
    <content><![CDATA[<h2 id="centOS安装maven"><a href="#centOS安装maven" class="headerlink" title="centOS安装maven"></a>centOS安装maven</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz</span><br><span class="line">tar zxf apache-maven-3.3.9-bin.tar.gz</span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="前提安装jdk8"><a href="#前提安装jdk8" class="headerlink" title="前提安装jdk8"></a>前提安装jdk8</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/software/jdk8</span><br><span class="line">export MAVEN_HOME=/usr/local/software/apache-maven-3.3.9</span><br><span class="line">export JAVA_BIN=/usr/local/software/jdk8</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$MAVEN_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export JAVA_HOME MAVEN_HOME JAVA_BIN PATH CLASSPATH</span><br></pre></td></tr></table></figure>

<h3 id="环境变量立即生效"><a href="#环境变量立即生效" class="headerlink" title="环境变量立即生效"></a>环境变量立即生效</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn -v</span><br><span class="line">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)</span><br><span class="line">Maven home: /usr/local/software/apache-maven-3.3.9</span><br><span class="line">Java version: 1.8.0_141, vendor: Oracle Corporation</span><br><span class="line">Java home: /usr/local/software/jdk8/jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-862.14.4.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>maven</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>wget</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo部署私人服务器</title>
    <url>/2019/10/15/hexo%E9%83%A8%E7%BD%B2%E7%A7%81%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="一、开始"><a href="#一、开始" class="headerlink" title="一、开始"></a>一、开始</h2><h3 id="配置本地-node-环境"><a href="#配置本地-node-环境" class="headerlink" title="配置本地 node 环境"></a>配置本地 node 环境</h3><ol>
<li><p><code>node</code>下载 <a href="https://nodejs.org/zh-cn/download/">官网下载</a>，可以的话推荐使用 <code>nvm</code> 安装</p>
</li>
<li><p>安装记得把目录改到其他盘，这里我具体是在 <code>D:\programming\nodejs</code></p>
</li>
</ol>
<span id="more"></span>

<!-- ![node更换路径](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/node-path.jpg) -->

<p>打开<code>cmd</code>查看<code>node</code>安装情况</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置全局环境</li>
</ol>
<p>进入安装目录，创建文件夹<code>node_global</code>和<code>node_cache</code> 并执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;D:\programming\nodejs\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;D:\programming\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure>

<p>环境配置：新增环境变量<code>NODE_PATH</code>和添加<code>Path</code>，两个值都为 <code>D:\programming\nodejs\node_global</code></p>
<!-- ![node更换路径](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/env-node.jpg) -->

<!-- ![node更换路径](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/env-path.jpg) -->

<ol start="4">
<li>安装<code>hexo-cli</code></li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br><span class="line">hexo</span><br></pre></td></tr></table></figure>

<p>如果显示下面情况，恭喜你成功全局模块调用</p>
<!-- ![node更换路径](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/test-hexo.jpg) -->

<ol start="5">
<li><p>如果出现<code>命令未找到，或不是可执行程序</code>，别着急！<strong>先仔细重复 3-4 步</strong>，一般是能够给解决的，如果实在是不能解决，往后看</p>
</li>
<li><p>随便找个地方初始化文件，执行如下命令：</p>
</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo-blog</span><br><span class="line"><span class="built_in">cd</span> hexo-blog &amp;&amp; npm init -y</span><br></pre></td></tr></table></figure>

<p>现在有 3 种解决方法，<strong>任选其一</strong></p>
<ul>
<li>法 1：检查全局目录是否的<code>hexo</code>模块，执行如下命令：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">D:\programming\nodejs\node_global\hexo</span><br></pre></td></tr></table></figure>

<ul>
<li>法 2：如果觉得每次加前缀麻烦，使用<code>link</code>命令链接</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm <span class="built_in">link</span> hexo</span><br></pre></td></tr></table></figure>

<p>package.json 中新建脚本如下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run hexo</span><br></pre></td></tr></table></figure>

<!-- ![新建npm脚本](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/npm-script.jpg) -->

<ul>
<li>法 3：你还可以直接在<code>hexo-blog</code>中下载</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli</span><br><span class="line"><span class="comment"># 还是要在package.json中新建脚本</span></span><br><span class="line">npm run hexo</span><br></pre></td></tr></table></figure>

<h3 id="初始化hexo项目"><a href="#初始化hexo项目" class="headerlink" title="初始化hexo项目"></a>初始化<code>hexo</code>项目</h3><ol>
<li>如果是按照上一节步骤 4 过来的，则在<code>hexo-blog</code>文件下初始化</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init myblog &amp;&amp; <span class="built_in">cd</span> myblog</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>下载主题</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>在<strong>本地配置文件</strong>中设置<code>theme</code>属性</p>
<!-- ![添加next主题](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/hexo-theme.jpg) -->

<ol start="3">
<li>本地执行<code>hexo</code>项目，添加<code>start</code>脚本</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure>

<!-- ![新建npm-start脚本](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/npm-script-start.jpg) -->

<p>打开 <a href="http://localhost:4000/">http://localhost:4000</a> 验证效果吧</p>
<h3 id="git环境搭建"><a href="#git环境搭建" class="headerlink" title="git环境搭建"></a><code>git</code>环境搭建</h3><ol>
<li><p><code>git</code>安装：<a href="https://git-scm.com/downloads">官网下载</a></p>
</li>
<li><p>生成<code>ssh</code>认证，执行如下命令</p>
</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail@example.com&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail@example.com&quot;</span></span><br><span class="line"><span class="comment"># 禁用自动转换，这个不设置后面上传时会出现警告</span></span><br><span class="line">git config --global core.autocrlf <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<!-- ![git警告](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/git-warning.jpg) -->

<p>最后获取到的<code>ssh</code>认证在<code>C:\Users\yourname\.ssh</code>中</p>
<hr>
<h2 id="三、服务器配置"><a href="#三、服务器配置" class="headerlink" title="三、服务器配置"></a>三、服务器配置</h2><h3 id="搭建远程Git私库"><a href="#搭建远程Git私库" class="headerlink" title="搭建远程Git私库"></a>搭建远程<code>Git</code>私库</h3><ol>
<li><p>登录到远程服务器，推荐使用<code>Xshell 5</code></p>
</li>
<li><p>安装 git</p>
</li>
</ol>
<p>CentOS</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如无，则安装</span></span><br><span class="line">git --version</span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel</span><br><span class="line">yum install -y git</span><br></pre></td></tr></table></figure>

<p>Ubuntu</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如无，则安装</span></span><br><span class="line">git --version</span><br><span class="line">sudo apt-get update</span><br><span class="line">apt install git</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建用户并配置其仓库</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">useradd git</span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line">passwd git</span><br><span class="line"><span class="comment"># 这步很重要，不切换用户后面会很麻烦</span></span><br><span class="line">su git</span><br><span class="line"><span class="built_in">cd</span> /home/git/</span><br><span class="line"><span class="comment"># 项目存在的真实目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p projects/blog</span><br><span class="line"><span class="built_in">mkdir</span> repos &amp;&amp; <span class="built_in">cd</span> repos</span><br><span class="line"><span class="comment"># 创建一个裸露的仓库</span></span><br><span class="line">git init --bare blog.git</span><br><span class="line"><span class="built_in">cd</span> blog.git/hooks</span><br><span class="line"><span class="comment"># 创建 hook 钩子函数，输入了内容如下</span></span><br><span class="line">vi post-receive</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure>

<p>添加完毕后修改权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x post-receive</span><br><span class="line"><span class="comment"># 退出到 root 登录</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 添加权限</span></span><br><span class="line"><span class="built_in">chown</span> -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>测试<code>git仓库</code>是否可用，另找空白文件夹</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@&#123;server_ip&#125;:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure>

<p>如果能把空仓库拉下来，就说明 git 仓库搭建成功了</p>
<!-- ![git仓库测试](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/git-clone.jpg) -->

<ol start="5">
<li>建立<code>ssh</code>信任关系，在<strong>本地电脑</strong></li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/&#123;yourname&#125;/.ssh/id_rsa.pub git@&#123;server_ip&#125;</span><br><span class="line"><span class="comment"># 测试能否登录</span></span><br><span class="line">ssh git@&#123;server_ip&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注</strong>：此时的 ssh 登录 git 用户不需要密码！否则就<strong>有错</strong>，请仔细重复步骤 3-5</p>
<ol start="6">
<li>为了安全起见禁用 git 用户的 shell 登录权限，从而只能用 git clone，git push 等登录</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看 git-shell 是否在登录方式里面</span></span><br><span class="line"><span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># 查看是否安装</span></span><br><span class="line"><span class="built_in">which</span> git-shell</span><br><span class="line"><span class="comment"># 添加上2步显示出来的路劲，通常在 /usr/bin/git-shell</span></span><br><span class="line">vi /etc/shells</span><br></pre></td></tr></table></figure>

<p>修改<code>/etc/passwd</code>中的权限</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将原来的</span></span><br><span class="line">git:x:1001:1001::/home/git:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改为</span></span><br><span class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure>

<h3 id="搭建nginx服务器"><a href="#搭建nginx服务器" class="headerlink" title="搭建nginx服务器"></a>搭建<code>nginx</code>服务器</h3><ol>
<li>下载并安装<code>nginx</code></li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">wget http://nginx.org/download/nginx-1.15.2.tar.gz</span><br><span class="line">tar xzvf nginx-1.15.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.15.2</span><br></pre></td></tr></table></figure>

<p>Ubuntu系统需要的依赖库</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install build-essential</span><br><span class="line">sudo apt-get install libtool</span><br><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">sudo apt-get install openssl</span><br><span class="line">sudo apt-get install libssl-dev</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果后面还想要配置 SSL 协议，就执行后面一句！</span></span><br><span class="line">./configure</span><br><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 为 nginx 取别名，后面可直接用。用户登出失效，可以修改新增到 `~/.bashrc` 文件</span></span><br><span class="line"><span class="built_in">alias</span> nginx=<span class="string">&#x27;/usr/local/nginx/sbin/nginx&#x27;</span></span><br></pre></td></tr></table></figure>


<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> nginx=<span class="string">&#x27;/usr/local/nginx/sbin/nginx&#x27;</span></span><br></pre></td></tr></table></figure>

<p>执行文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置<code>nginx</code>文件</li>
</ol>
<p>先启动是否安装成功</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 直接来！浏览器查看 server_ip，默认是 80 端口</span></span><br><span class="line">nginx</span><br></pre></td></tr></table></figure>

<p>修改配置文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nginx -s stop // 先停止nginx</span><br><span class="line"><span class="built_in">cd</span> /usr/local/nginx/conf</span><br><span class="line">vi nginx.conf</span><br><span class="line"><span class="comment"># 修改 root 解析路径，如下图</span></span><br><span class="line"><span class="comment"># 同时将 user 改为 root 如下图，不然nginx无法访问 /home/git/projects/blog</span></span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>

<p>http配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /home/git/projects/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>https配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen        80;</span><br><span class="line">        server_name   aliatry.com;</span><br><span class="line">		</span><br><span class="line">        rewrite       ^/(.*) https://$host$1 permanent;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            #root   /home/git/projects/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       443 ssl;</span><br><span class="line">        server_name  aliatry.com;</span><br><span class="line"></span><br><span class="line">        ssl_certificate      cert.pem;</span><br><span class="line">        ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">        ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">        ssl_protocols     TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /home/git/projects/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<!-- ![修改nginx配置](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/nginx-conf.jpg) -->

<!-- ![修改nginx user](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/nginx-user.jpg) -->

<hr>
<h2 id="四、发布"><a href="#四、发布" class="headerlink" title="四、发布"></a>四、发布</h2><p>至此我们就把本地和服务器的环境全部搭建完成，现在利用 hexo 配置文件进行链接</p>
<h3 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置<code>_config.yml</code>文件</h3><ol>
<li>编辑 <code>_config.yml</code> 的 deploy 属性</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">    <span class="attr">server:</span> <span class="string">git@server_ip:/home/git/repos/blog.git</span></span><br></pre></td></tr></table></figure>
<!-- ![编辑本地deploy](https://raw.githubusercontent.com/lawler61/hexo-to-server/master/hexo-to-server/config-deploy.jpg) -->

<ol start="2">
<li>在 package.json 中添加 npm 脚本</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;deploy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g -d&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>链接！这下在本地调试就用<code>npm start</code>，调试好了就上传到服务器，美滋滋~快通过你的服务器 ip 访问吧</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hexo</category>
        <category>部署</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>部署</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下使用apt-get下载jdk8</title>
    <url>/2018/12/14/linux%E4%B8%8B%E4%BD%BF%E7%94%A8apt-get%E4%B8%8B%E8%BD%BDjdk8/</url>
    <content><![CDATA[<h2 id="Linux下使用apt-get下载jdk8"><a href="#Linux下使用apt-get下载jdk8" class="headerlink" title="Linux下使用apt-get下载jdk8"></a>Linux下使用apt-get下载jdk8</h2><h3 id="apt-get更新到最新"><a href="#apt-get更新到最新" class="headerlink" title="apt-get更新到最新"></a>apt-get更新到最新</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>输出下面版本号则安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openjdk version &quot;1.8.0_191&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_191-8u191-b12-0ubuntu0.16.04.1-b12)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.191-b12, mixed mode)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>jdk8</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>apt-get</tag>
        <tag>jdk8</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下使用wget下载jdk8</title>
    <url>/2018/12/04/linux%E4%B8%8B%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BDjdk8/</url>
    <content><![CDATA[<h2 id="进到目录-x2F-usr-x2F-local-x2F-software"><a href="#进到目录-x2F-usr-x2F-local-x2F-software" class="headerlink" title="进到目录&#x2F;usr&#x2F;local&#x2F;software"></a>进到目录&#x2F;usr&#x2F;local&#x2F;software</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/software</span><br></pre></td></tr></table></figure>

<h2 id="下载jdk8到本地"><a href="#下载jdk8到本地" class="headerlink" title="下载jdk8到本地"></a>下载jdk8到本地</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-cookies --no-check-certificate --header &quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot; &quot;http://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.tar.gz&quot;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="解压文件夹"><a href="#解压文件夹" class="headerlink" title="解压文件夹"></a>解压文件夹</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u141-linux-x64.tar.gz jdk1.8.0_141/  </span><br></pre></td></tr></table></figure>

<h2 id="修改解压后文件夹名为jdk8"><a href="#修改解压后文件夹名为jdk8" class="headerlink" title="修改解压后文件夹名为jdk8"></a>修改解压后文件夹名为jdk8</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv jdk1.8.0_141 jdk8</span><br></pre></td></tr></table></figure>

<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/software/jdk8</span><br><span class="line">export JAVA_BIN=/usr/local/software/jdk8</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export JAVA_HOME JAVA_BIN PATH CLASSPATH</span><br></pre></td></tr></table></figure>

<h2 id="环境变量立即生效"><a href="#环境变量立即生效" class="headerlink" title="环境变量立即生效"></a>环境变量立即生效</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="查看Java版本号"><a href="#查看Java版本号" class="headerlink" title="查看Java版本号"></a>查看Java版本号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>

<h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java version &quot;1.8.0_141&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_141-b15)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.141-b15, mixed mode)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>wget</category>
        <category>java</category>
        <category>jdk8</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>java</tag>
        <tag>wget</tag>
        <tag>jdk8</tag>
      </tags>
  </entry>
  <entry>
    <title>lsof Linux安装</title>
    <url>/2019/10/15/lsof-Linux%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="yum-install-lsof"><a href="#yum-install-lsof" class="headerlink" title="yum install lsof"></a>yum install lsof</h2><span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@aliatry ~]# yum install lsof</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Determining fastest mirrors</span><br><span class="line">base                                                                                                                                              | 3.6 kB  00:00:00     </span><br><span class="line">epel                                                                                                                                              | 5.3 kB  00:00:00     </span><br><span class="line">extras                                                                                                                                            | 2.9 kB  00:00:00     </span><br><span class="line">mysql-connectors-community                                                                                                                        | 2.5 kB  00:00:00     </span><br><span class="line">mysql-tools-community                                                                                                                             | 2.5 kB  00:00:00     </span><br><span class="line">mysql57-community                                                                                                                                 | 2.5 kB  00:00:00     </span><br><span class="line">updates                                                                                                                                           | 2.9 kB  00:00:00     </span><br><span class="line">(1/9): base/7/x86_64/group_gz                                                                                                                     | 165 kB  00:00:00     </span><br><span class="line">(2/9): extras/7/x86_64/primary_db                                                                                                                 | 152 kB  00:00:00     </span><br><span class="line">(3/9): epel/x86_64/updateinfo                                                                                                                     | 1.0 MB  00:00:00     </span><br><span class="line">(4/9): base/7/x86_64/primary_db                                                                                                                   | 6.0 MB  00:00:00     </span><br><span class="line">(5/9): updates/7/x86_64/primary_db                                                                                                                | 1.9 MB  00:00:00     </span><br><span class="line">(6/9): mysql-connectors-community/x86_64/primary_db                                                                                               |  48 kB  00:00:00     </span><br><span class="line">(7/9): epel/x86_64/primary_db                                                                                                                     | 6.9 MB  00:00:00     </span><br><span class="line">(8/9): mysql-tools-community/x86_64/primary_db                                                                                                    |  66 kB  00:00:00     </span><br><span class="line">(9/9): mysql57-community/x86_64/primary_db                                                                                                        | 190 kB  00:00:00     </span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package lsof.x86_64 0:4.87-6.el7 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=========================================================================================================================================================================</span><br><span class="line"> Package                               Arch                                    Version                                       Repository                             Size</span><br><span class="line">=========================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> lsof                                  x86_64                                  4.87-6.el7                                    base                                  331 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=========================================================================================================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 331 k</span><br><span class="line">Installed size: 927 k</span><br><span class="line">Is this ok [y/d/N]: y</span><br><span class="line">Downloading packages:</span><br><span class="line">lsof-4.87-6.el7.x86_64.rpm                                                                                                                        | 331 kB  00:00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : lsof-4.87-6.el7.x86_64                                                                                                                                1/1</span><br><span class="line">  Verifying  : lsof-4.87-6.el7.x86_64                                                                                                                                1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  lsof.x86_64 0:4.87-6.el7                                                                                                                                               </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>nohup /dev/null 2&gt;&amp;1 含义详解</title>
    <url>/2018/12/07/nohup-dev-null-2-1-%E5%90%AB%E4%B9%89%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="nohup-x2F-dev-x2F-null-2-gt-amp-1-含义详解"><a href="#nohup-x2F-dev-x2F-null-2-gt-amp-1-含义详解" class="headerlink" title="nohup &#x2F;dev&#x2F;null 2&gt;&amp;1 含义详解"></a>nohup &#x2F;dev&#x2F;null 2&gt;&amp;1 含义详解</h2><p>nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户&#x2F;关闭终端之后继续运行相应的进程。nohup就是不挂起的意思(no hang up)。</p>
<span id="more"></span>

<p>该命令的一般形式为：nohup command &amp;</p>
<p>ls xxx 1&gt;out.txt 2&gt;&amp;1<br>nohup java -jar helloword.jar &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 &amp;<br>对 于&amp; 1 更准确的说应该是文件描述符 1,而1 一般代表的就是STDOUT_FILENO,实际上这个操作就是一个dup2(2)调用.他标准输出到all_result ,然后复制标准输出到文件描述符2(STDERR_FILENO),其后果就是文件描述符1和2指向同一个文件表项,也可以说错误的输出被合并了.其中0 表示键盘输入 1表示屏幕输出 2表示错误输出.把标准出错重定向到标准输出,然后扔到&#x2F;DEV&#x2F;NULL下面去。通俗的说，就是把所有标准输出和标准出错都扔到垃圾桶里面。<br>command &gt;out.file 2&gt;&amp;1 &amp;<br>command &gt;out.file是将command的输出重定向到out.file文件，即输出内容不打印到屏幕上，而是输出到out.file文件中。 2&gt;&amp;1 是将标准出错重定向到标准输出，这里的标准输出已经重定向到了out.file文件，即将标准出错也输出到out.file文件中。最后一个&amp; ， 是让该命令在后台执行。</p>
<p>试想2&gt;1代表什么，2与&gt;结合代表错误重定向，而1则代表错误重定向到一个文件1，而不代表标准输出；<br>换成2&gt;&amp;1，&amp;与1结合就代表标准输出了，就变成错误重定向到标准输出.</p>
<p>你可以用<br>ls 2&gt;1测试一下，不会报没有2文件的错误，但会输出一个空的文件1；<br>ls xxx 2&gt;1测试，没有xxx这个文件的错误输出到了1中；<br>ls xxx 2&gt;&amp;1测试，不会生成1这个文件了，不过错误跑到标准输出了；<br>ls xxx &gt;out.txt 2&gt;&amp;1, 实际上可换成 ls xxx 1&gt;out.txt 2&gt;&amp;1；重定向符号&gt;默认是1,错误和输出都传到out.txt了。</p>
<p>为何2&gt;&amp;1要写在后面？<br>command &gt; file 2&gt;&amp;1<br>首先是command &gt; file将标准输出重定向到file中， 2&gt;&amp;1 是标准错误拷贝了标准输出的行为，也就是同样被重定向到file中，最终结果就是标准输出和错误都被重定向到file中。<br>command 2&gt;&amp;1 &gt;file<br>2&gt;&amp;1 标准错误拷贝了标准输出的行为，但此时标准输出还是在终端。&gt;file 后输出才被重定向到file，但标准错误仍然保持在终端。</p>
<p>用strace可以看到：</p>
<ol>
<li><p>command &gt; file 2&gt;&amp;1<br>这个命令中实现重定向的关键系统调用序列是：<br>open(file) &#x3D;&#x3D; 3<br>dup2(3,1)<br>dup2(1,2)</p>
</li>
<li><p>command 2&gt;&amp;1 &gt;file<br>这个命令中实现重定向的关键系统调用序列是：<br>dup2(1,2)<br>open(file) &#x3D;&#x3D; 3<br>dup2(3,1)</p>
</li>
</ol>
<p>为什么要用 &#x2F;dev&#x2F;null 2&gt;&amp;1 这样的写法.这条命令的意思是将标准输出和错误输出全部重定向到&#x2F;dev&#x2F;null中,也就是将产生的所有信息丢弃.下面我就为大家来说一下, command &gt; file 2&gt;file   与command &gt; file 2&gt;&amp;1 有什么不同的地方.<br>首先~command &gt; file 2&gt;file 的意思是将命令所产生的标准输出信息,和错误的输出信息送到file 中.command   &gt; file 2&gt;file 这样的写法,stdout和stderr都直接送到file中, file会被打开两次,这样stdout和stderr会互相覆盖,这样写相当使用了FD1和FD2两个同时去抢占file 的管道.<br>而command &gt;file 2&gt;&amp;1 这条命令就将stdout直接送向file, stderr 继承了FD1管道后,再被送往file,此时,file 只被打开了一次,也只使用了一个管道FD1,它包括了stdout和stderr的内容.<br>从IO效率上,前一条命令的效率要比后面一条的命令效率要低,所以在编写shell脚本的时候,较多的时候我们会用command &gt; file 2&gt;&amp;1 这样的写法.</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>nohup</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nohup</tag>
      </tags>
  </entry>
  <entry>
    <title>使用工具类管理SessionFactory和Session</title>
    <url>/2017/06/06/%E4%BD%BF%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%AE%A1%E7%90%86SessionFactory%E5%92%8CSession/</url>
    <content><![CDATA[<h2 id="使用工具类管理SessionFactory和Session"><a href="#使用工具类管理SessionFactory和Session" class="headerlink" title="使用工具类管理SessionFactory和Session"></a>使用工具类管理SessionFactory和Session</h2><span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.hibernate.HibernateException;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HibernateUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> SessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化Configuration和SessionFactory</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//配置文件名，来源resources 根目录</span></span><br><span class="line">            configuration = <span class="keyword">new</span> <span class="title class_">Configuration</span>().configure(<span class="string">&quot;hibernate.cfg.xml&quot;</span>);</span><br><span class="line">            sessionFactory = configuration.buildSessionFactory();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (HibernateException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ExceptionInInitializerError</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取Session对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Session <span class="title function_">currentSesstion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.getCurrentSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hibernate</category>
      </categories>
      <tags>
        <tag>hibernate</tag>
        <tag>session</tag>
        <tag>SessionFactory</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot跨域配置</title>
    <url>/2018/12/05/springboot%E8%B7%A8%E5%9F%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="springboot跨域配置"><a href="#springboot跨域配置" class="headerlink" title="springboot跨域配置"></a>springboot跨域配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MvcConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>, <span class="string">&quot;DELETE&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>).maxAge(<span class="number">3600</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="maxAge-3600"><a href="#maxAge-3600" class="headerlink" title="maxAge(3600)"></a>maxAge(3600)</h3><p>用于设置跨许信息有效期<br><code>Access-Control-Max-Age</code> 该字段可选，用来指定本次预检请求的有效期，单位为秒。在有效期间，不用发出另一条预检请求。<br>就是在这段时间内不用再发options请求</p>
]]></content>
      <categories>
        <category>springboot</category>
        <category>跨域配置</category>
      </categories>
      <tags>
        <tag>跨域配置</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>springcloud feign 多文件上传</title>
    <url>/2019/06/05/springcloud-feign-%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>第三方调用的我的接口,上传若干个文件,我用 <code>MultiPartFile[]</code> 数组接收,之后我调用其他服务的接口,把文件发送过去,统一保存</p>
<p>目前存在的问题就是,当你使用 <code>feign</code> 传递 <code>MultipartFile</code> 对象时,接收方无法解析,所以需要重写 <code>feign</code> 的 <code>Encoder</code> ,让它支持 <code>MultipartFile</code> 类型以及 <code>MultipartFile[]</code> 数组类型</p>
<span id="more"></span>

<h2 id="异常输出"><a href="#异常输出" class="headerlink" title="异常输出"></a>异常输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class java.io.FileDescriptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile[0]-&gt;org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile[&quot;inputStream&quot;]-&gt;java.io.FileInputStream[&quot;fd&quot;])</span><br></pre></td></tr></table></figure>

<h2 id="Maven引入jar包"><a href="#Maven引入jar包" class="headerlink" title="Maven引入jar包"></a>Maven引入jar包</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支持feign传递MultipartFile --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.openfeign.form<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>feign-form-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="SpringMultipartEncoder-类-重写-FormEncoder-使得-feign-可以支持文件传输"><a href="#SpringMultipartEncoder-类-重写-FormEncoder-使得-feign-可以支持文件传输" class="headerlink" title="SpringMultipartEncoder 类 - 重写 FormEncoder 使得 feign 可以支持文件传输"></a><code>SpringMultipartEncoder</code> 类 - 重写 <code>FormEncoder</code> 使得 <code>feign</code> 可以支持文件传输</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> feign.RequestTemplate;</span><br><span class="line"><span class="keyword">import</span> feign.codec.EncodeException;</span><br><span class="line"><span class="keyword">import</span> feign.codec.Encoder;</span><br><span class="line"><span class="keyword">import</span> feign.form.ContentType;</span><br><span class="line"><span class="keyword">import</span> feign.form.FormEncoder;</span><br><span class="line"><span class="keyword">import</span> feign.form.MultipartFormContentProcessor;</span><br><span class="line"><span class="keyword">import</span> feign.form.spring.SpringManyMultipartFilesWriter;</span><br><span class="line"><span class="keyword">import</span> feign.form.spring.SpringSingleMultipartFileWriter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支持feign传递MultipartFile</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMultipartEncoder</span> <span class="keyword">extends</span> <span class="title class_">FormEncoder</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor with the default Feign&#x27;s encoder as a delegate.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SpringMultipartEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(<span class="keyword">new</span> <span class="title class_">Default</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor with specified delegate encoder.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> delegate delegate encoder, if this encoder couldn&#x27;t encode object.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SpringMultipartEncoder</span><span class="params">(Encoder delegate)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(delegate);</span><br><span class="line"></span><br><span class="line">        <span class="type">MultipartFormContentProcessor</span> <span class="variable">processor</span> <span class="operator">=</span> (MultipartFormContentProcessor) getContentProcessor(ContentType.MULTIPART);</span><br><span class="line">        processor.addWriter(<span class="keyword">new</span> <span class="title class_">SpringSingleMultipartFileWriter</span>());</span><br><span class="line">        processor.addWriter(<span class="keyword">new</span> <span class="title class_">SpringManyMultipartFilesWriter</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">encode</span><span class="params">(Object object, Type bodyType, RequestTemplate template)</span> <span class="keyword">throws</span> EncodeException &#123;</span><br><span class="line">        <span class="comment">// 单MultipartFile判断</span></span><br><span class="line">        <span class="keyword">if</span> (bodyType.equals(MultipartFile.class)) &#123;</span><br><span class="line">            <span class="type">MultipartFile</span> <span class="variable">file</span> <span class="operator">=</span> (MultipartFile) object;</span><br><span class="line">            <span class="type">Map</span> <span class="variable">data</span> <span class="operator">=</span> Collections.singletonMap(file.getName(), object);</span><br><span class="line">            <span class="built_in">super</span>.encode(data, MAP_STRING_WILDCARD, template);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bodyType.equals(MultipartFile[].class)) &#123;</span><br><span class="line">            <span class="comment">// MultipartFile数组处理</span></span><br><span class="line">            MultipartFile[] file = (MultipartFile[]) object;</span><br><span class="line">            <span class="keyword">if</span> (file != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">Map</span> <span class="variable">data</span> <span class="operator">=</span> Collections.singletonMap(file.length == <span class="number">0</span> ? <span class="string">&quot;&quot;</span> : file[<span class="number">0</span>].getName(), object);</span><br><span class="line">                <span class="built_in">super</span>.encode(data, MAP_STRING_WILDCARD, template);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 其他类型调用父类默认处理方法</span></span><br><span class="line">        <span class="built_in">super</span>.encode(object, bodyType, template);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="FeignMultipartSupportConfig-类-配置-Encoder-注入-messageConverters"><a href="#FeignMultipartSupportConfig-类-配置-Encoder-注入-messageConverters" class="headerlink" title="FeignMultipartSupportConfig 类 - 配置 Encoder 注入 messageConverters"></a><code>FeignMultipartSupportConfig</code> 类 - 配置 <code>Encoder</code> 注入 <code>messageConverters</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> feign.codec.Encoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.ObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.http.HttpMessageConverters;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.support.SpringEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FeignMultipartSupportConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Bean</span></span><br><span class="line"><span class="comment">//    public Encoder feignEncoder(ObjectFactory&lt;HttpMessageConverters&gt; messageConverters) &#123;</span></span><br><span class="line"><span class="comment">//        return new SpringMultipartEncoder(new SpringEncoder(messageConverters));</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectFactory&lt;HttpMessageConverters&gt; messageConverters;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Encoder <span class="title function_">feignEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SpringMultipartEncoder</span>(<span class="keyword">new</span> <span class="title class_">SpringEncoder</span>(messageConverters));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="消费者的文件服务客户端-FileClient-类-FeignClient"><a href="#消费者的文件服务客户端-FileClient-类-FeignClient" class="headerlink" title="消费者的文件服务客户端 FileClient 类 - FeignClient"></a>消费者的文件服务客户端 <code>FileClient</code> 类 - FeignClient</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件存储客户端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;file-service&quot;, configuration = SpringMultipartEncoder.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FileClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件存储对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> firstKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/api/file/upload&quot;, consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)</span></span><br><span class="line">    List&lt;String&gt; <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestPart(value = &quot;files&quot;)</span> MultipartFile[] files, <span class="meta">@RequestParam(&quot;firstKey&quot;)</span> String firstKey)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="上面有个-SpringMultipartEncoder-类-这个是我们重写刚才导入jar包中的-FormEncoder-以支持任意数量文件上传-同时这里用-RequestPart-注意不能用-RequestParam-如果用-RequestParam-被调用的服务方会出现如下错误"><a href="#上面有个-SpringMultipartEncoder-类-这个是我们重写刚才导入jar包中的-FormEncoder-以支持任意数量文件上传-同时这里用-RequestPart-注意不能用-RequestParam-如果用-RequestParam-被调用的服务方会出现如下错误" class="headerlink" title="上面有个 SpringMultipartEncoder 类,这个是我们重写刚才导入jar包中的 FormEncoder ,以支持任意数量文件上传,同时这里用 @RequestPart ,注意不能用 @RequestParam,如果用 @RequestParam ,被调用的服务方会出现如下错误"></a>上面有个 <code>SpringMultipartEncoder</code> 类,这个是我们重写刚才导入jar包中的 <code>FormEncoder</code> ,以支持任意数量文件上传,同时这里用 <em><code>@RequestPart</code></em> ,注意不能用 <em><code>@RequestParam</code></em>,如果用 <em><code>@RequestParam</code></em> ,被调用的服务方会出现如下错误</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Caused by: org.apache.commons.fileupload.FileUploadException: the request was rejected because no multipart boundary was found</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="RequestParam-适用于-name-valueString-类型的请求域"><a href="#RequestParam-适用于-name-valueString-类型的请求域" class="headerlink" title="@RequestParam 适用于 name-valueString 类型的请求域"></a><code>@RequestParam</code> 适用于 <code>name-valueString</code> 类型的请求域</h4></li>
<li><h4 id="RequestPart-适用于复杂的请求域-JSON-XML"><a href="#RequestPart-适用于复杂的请求域-JSON-XML" class="headerlink" title="@RequestPart 适用于复杂的请求域 (JSON,XML)"></a><code>@RequestPart</code> 适用于复杂的请求域 (JSON,XML)</h4></li>
</ul>
<h2 id="消费者的文件服务控制层"><a href="#消费者的文件服务控制层" class="headerlink" title="消费者的文件服务控制层"></a>消费者的文件服务控制层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> FileClient fileClient;  <span class="comment">// 消费者的文件服务客户端</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传文件存储对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> files</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> firstKey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;file/v1/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;String&gt; <span class="title function_">fileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;files&quot;)</span> MultipartFile[] files, String firstKey)</span> &#123;</span><br><span class="line">    List&lt;String&gt; strings = fileClient.upload(files, firstKey);</span><br><span class="line">    <span class="keyword">return</span> strings;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="生产者的文件服务控制层"><a href="#生产者的文件服务控制层" class="headerlink" title="生产者的文件服务控制层"></a>生产者的文件服务控制层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传文件存储对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> files</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> firstKey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/api/file/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;String&gt; <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestParam(&quot;files&quot;)</span> MultipartFile[] files, <span class="meta">@RequestParam(&quot;firstKey&quot;)</span> String firstKey)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springcloud</category>
        <category>feign</category>
        <category>MultiPartFile</category>
      </categories>
      <tags>
        <tag>springcloud</tag>
        <tag>feign</tag>
        <tag>MultiPartFile</tag>
      </tags>
  </entry>
  <entry>
    <title>单例模式 饿汉模式 懒汉模式 示例</title>
    <url>/2018/04/24/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-%E9%A5%BF%E6%B1%89%E6%A8%A1%E5%BC%8F-%E6%87%92%E6%B1%89%E6%A8%A1%E5%BC%8F-%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p>是一种常用的软件设计模式。在它的核心结构中只包含一个被称为单例的特殊类。通过单例模式可以保证系统中，应用该模式的类一个类只有一个实例。即一个类只有一个对象实例</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>单例模式是设计模式中最简单的形式之一。这一模式的目的是使得类的一个对象成为系统中的唯一实例。要实现这一点，可以从客户端对其进行实例化开始。因此需要用一种只允许生成对象类的唯一实例的机制，“阻止”所有想要生成对象的访问。使用工厂方法来限制实例化过程。这个方法应该是静态方法（类方法），因为让类的实例去生成另一个唯一实例毫无意义。</p>
<span id="more"></span>

<h2 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h2><p>对于系统中的某些类来说，只有一个实例很重要，例如，一个系统中可以存在多个打印任务，但是只能有一个正在工作的任务；一个系统只能有一个窗口管理器或文件系统；一个系统只能有一个计时工具或ID(序号)生成器。如在Windows中就只能打开一个任务管理器。如果不使用机制对窗口对象进行唯一化，将弹出多个窗口，如果这些窗口显示的内容完全一致，则是重复对象，浪费内存资源；如果这些窗口显示的内容不一致，则意味着在某一瞬间系统有多个状态，与实际不符，也会给用户带来误解，不知道哪一个才是真实的状态。因此有时确保系统中某个对象的唯一性即一个类只能有一个实例非常重要。 [3]<br>如何保证一个类只有一个实例并且这个实例易于被访问呢？定义一个全局变量可以确保对象随时都可以被访问，但不能防止我们实例化多个对象。一个更好的解决办法是让类自身负责保存它的唯一实例。这个类可以保证没有其他实例被创建，并且它可以提供一个访问该实例的方法。这就是单例模式的模式动机。</p>
<h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><p>显然单例模式的要点有三个；一是某个类只能有一个实例；二是它必须自行创建这个实例；三是它必须自行向整个系统提供这个实例。</p>
<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>读取数据库配置文件 只读取一次</p>
<h2 id="database-properties-配置文件"><a href="#database-properties-配置文件" class="headerlink" title="database.properties 配置文件"></a>database.properties 配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=root</span><br><span class="line">password=simon</span><br></pre></td></tr></table></figure>

<h2 id="ConfigManagerHungry-工具类-单例饿汉模式"><a href="#ConfigManagerHungry-工具类-单例饿汉模式" class="headerlink" title="ConfigManagerHungry 工具类 单例饿汉模式"></a>ConfigManagerHungry 工具类 单例饿汉模式</h2><p>类初始化自行实例化,不存在线程不安全。不具备延迟加载特性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单例 饿汉模式</span></span><br><span class="line"><span class="comment"> * 类初始化自行实例化,不存在线程不安全</span></span><br><span class="line"><span class="comment"> * 不具备延迟加载特性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigManagerHungry</span> &#123;</span><br><span class="line">    <span class="comment">//类加载自行进行初始化操作</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">ConfigManagerHungry</span> <span class="variable">configManagerHungry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConfigManagerHungry</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有构造器 读取数据库配置文件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ConfigManagerHungry</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;饿汉模式 ConfigManagerHungry ------&gt;&gt;&gt;&gt; 创建&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">configFile</span> <span class="operator">=</span> <span class="string">&quot;database.properties&quot;</span>;</span><br><span class="line">        properties = <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ConfigManagerHungry.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">            is.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局访问点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConfigManagerHungry <span class="title function_">getConfigManagerHungry</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> configManagerHungry;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> properties.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ConfigManagerIdler-工具类-单例懒汉模式"><a href="#ConfigManagerIdler-工具类-单例懒汉模式" class="headerlink" title="ConfigManagerIdler 工具类 单例懒汉模式"></a>ConfigManagerIdler 工具类 单例懒汉模式</h2><p>具备延迟加载特性。线程不安全</p>
<!-- more -->

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单例 懒汉模式</span></span><br><span class="line"><span class="comment"> * 具备延迟加载特性</span></span><br><span class="line"><span class="comment"> * 线程不安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigManagerIdler</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConfigManagerIdler configManagerIdler;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有构造器 读取数据库配置文件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ConfigManagerIdler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">configFile</span> <span class="operator">=</span> <span class="string">&quot;database.properties&quot;</span>;</span><br><span class="line">        properties = <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ConfigManagerIdler.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">            is.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局访问点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConfigManagerIdler <span class="title function_">getConfigManagerIdler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == configManagerIdler) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;懒汉模式 ConfigManagerIdler ------&gt;&gt;&gt;&gt; 创建&quot;</span>);</span><br><span class="line">            configManagerIdler = <span class="keyword">new</span> <span class="title class_">ConfigManagerIdler</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> configManagerIdler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> properties.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ConfigManager-工具类-单例模式"><a href="#ConfigManager-工具类-单例模式" class="headerlink" title="ConfigManager 工具类 单例模式"></a>ConfigManager 工具类 单例模式</h2><p>结合饿汉模式与懒汉模式的特性。及具有延迟加载特性并线程安全</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单例模式</span></span><br><span class="line"><span class="comment"> * 结合饿汉模式与懒汉模式的特性</span></span><br><span class="line"><span class="comment"> * 及具有延迟加载特性并线程安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigManager</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConfigManager configManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Properties properties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//私有构造器 读取数据库配置文件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ConfigManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">configFile</span> <span class="operator">=</span> <span class="string">&quot;database.properties&quot;</span>;</span><br><span class="line">        properties = <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ConfigManager.class.getClassLoader().getResourceAsStream(configFile);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line">            is.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用内部静态类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ConfigManagerHelper</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ConfigManager</span> <span class="variable">INSTANCE</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ConfigManager</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//全局访问点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ConfigManager <span class="title function_">getConfigManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == configManager) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;单例模式 ConfigManager ------&gt;&gt;&gt;&gt; 创建&quot;</span>);</span><br><span class="line">            configManager = ConfigManagerHelper.INSTANCE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> configManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getValue</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> properties.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Test-测试类"><a href="#Test-测试类" class="headerlink" title="Test 测试类"></a>Test 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.util.ConfigManager;</span><br><span class="line"><span class="keyword">import</span> com.util.ConfigManagerHungry;</span><br><span class="line"><span class="keyword">import</span> com.util.ConfigManagerIdler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;one  -----------------&quot;</span>);</span><br><span class="line">        System.out.println(getConfigManager());</span><br><span class="line">        System.out.println(getConfigManagerHungry());</span><br><span class="line">        System.out.println(getConfigManagerIdler());</span><br><span class="line">        System.out.println(<span class="string">&quot;two  -----------------&quot;</span>);</span><br><span class="line">        System.out.println(getConfigManager());</span><br><span class="line">        System.out.println(getConfigManagerHungry());</span><br><span class="line">        System.out.println(getConfigManagerIdler());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单例模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getConfigManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;username : &quot;</span> + ConfigManager.getConfigManager().getValue(<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;password : &quot;</span> + ConfigManager.getConfigManager().getValue(<span class="string">&quot;password&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 饿汉模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getConfigManagerHungry</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;username : &quot;</span> + ConfigManagerHungry.getConfigManagerHungry().getValue(<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;password : &quot;</span> + ConfigManagerHungry.getConfigManagerHungry().getValue(<span class="string">&quot;password&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 懒汉模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getConfigManagerIdler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;username : &quot;</span> + ConfigManagerIdler.getConfigManagerIdler().getValue(<span class="string">&quot;username&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        stringBuffer.append(<span class="string">&quot;password : &quot;</span> + ConfigManagerIdler.getConfigManagerIdler().getValue(<span class="string">&quot;password&quot;</span>) + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> stringBuffer.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="控制台输出结果"><a href="#控制台输出结果" class="headerlink" title="控制台输出结果"></a>控制台输出结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">one  -----------------</span><br><span class="line">单例模式 ConfigManager ------&gt;&gt;&gt;&gt; 创建</span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br><span class="line"></span><br><span class="line">饿汉模式 ConfigManagerHungry ------&gt;&gt;&gt;&gt; 创建</span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br><span class="line"></span><br><span class="line">懒汉模式 ConfigManagerIdler ------&gt;&gt;&gt;&gt; 创建</span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br><span class="line"></span><br><span class="line">two  -----------------</span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br><span class="line"></span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br><span class="line"></span><br><span class="line">username : root</span><br><span class="line">password : simon</span><br></pre></td></tr></table></figure>

<p>控制台输出可以看到，三个工具类的通过单例模式可以保证系统中，应用该模式的类一个类只有一个实例。即一个类只有一个对象实例</p>
<h1 id="示例下载"><a href="#示例下载" class="headerlink" title="示例下载"></a><a href="https://gitee.com/admin-james/Singleton">示例下载</a></h1>]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>单例模式</tag>
        <tag>饿汉模式</tag>
        <tag>懒汉模式</tag>
      </tags>
  </entry>
  <entry>
    <title>idea建立WebServlet遇到的问题</title>
    <url>/2017/06/06/idea%E5%BB%BA%E7%AB%8BWebServlet%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="直接用idea建立的web项目，其自动生成的web-xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3-0版本"><a href="#直接用idea建立的web项目，其自动生成的web-xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3-0版本" class="headerlink" title="直接用idea建立的web项目，其自动生成的web.xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3.0版本"></a>直接用idea建立的web项目，其自动生成的web.xml，这样建立servlet-name等标签会报错（不支持这种做法，更提倡用注解的办法），解决办法是将web-app标签替换成以下的3.0版本</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="随后创建-Java-类-继承-javax-servlet-http-HttpServlet"><a href="#随后创建-Java-类-继承-javax-servlet-http-HttpServlet" class="headerlink" title="随后创建 Java 类 继承 javax.servlet.http.HttpServlet"></a>随后创建 Java 类 继承 javax.servlet.http.HttpServlet</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="meta">@WebServlet(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">selectServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="利用注解进行配置"><a href="#利用注解进行配置" class="headerlink" title="利用注解进行配置"></a>利用注解进行配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在servlet类的上面写入注解@WebServlet(&quot;/hello&quot;)</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/hello&quot;)</span></span><br></pre></td></tr></table></figure>

<h2 id="pom-xml-配置"><a href="#pom-xml-配置" class="headerlink" title="pom.xml 配置"></a>pom.xml 配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>chapter6d4<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>chapter6d4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.hynnet/oracle-driver-ojdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>idea</category>
        <category>web.xml</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>servlet</tag>
        <tag>javaweb</tag>
        <tag>web.xml</tag>
      </tags>
  </entry>
  <entry>
    <title>多内部资源视图解析器 配合 @XmlRootElement 返回 XML、JSON、HTML 以及 @ResponseBody注解 JSON 返回 object 处理</title>
    <url>/2018/07/27/%E5%A4%9A%E5%86%85%E9%83%A8%E8%B5%84%E6%BA%90%E8%A7%86%E5%9B%BE%E8%A7%A3%E6%9E%90%E5%99%A8-%E9%85%8D%E5%90%88-XmlRootElement-%E8%BF%94%E5%9B%9E-XML%E3%80%81JSON%E3%80%81HTML-%E4%BB%A5%E5%8F%8A-ResponseBody%E6%B3%A8%E8%A7%A3-JSON-%E8%BF%94%E5%9B%9E-object-%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h2 id="SSM"><a href="#SSM" class="headerlink" title="SSM"></a>SSM</h2><p>（Spring+SpringMVC+MyBatis）框架集由Spring、SpringMVC、MyBatis三个开源框架整合而成，常作为数据源较简单的web项目的框架。<br>其中spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。<br>SpringMVC分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。<br>MyBatis是一个支持普通SQL查询，存储过程和高级映射的优秀持久层框架。<br>页面发送请求给控制器，控制器调用业务层处理逻辑，逻辑层向持久层发送请求，持久层与数据库交互，后将结果返回给业务层，业务层将处理逻辑发送给控制器，控制器再调用视图展现数据。</p>
<span id="more"></span>

<h2 id="pom-xml-SSM框架集-jar包"><a href="#pom-xml-SSM框架集-jar包" class="headerlink" title="pom.xml SSM框架集-jar包"></a>pom.xml SSM框架集-jar包</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SSM-school<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SSM-school<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring AOP就是用aspectj来实现的，是依赖关系--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring-webmvc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实现多内部资源视图解析器 生成xml--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--初始化会话工厂--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis框架--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis与spring对接的jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql 数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.44<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JSP 标准标签库 (JSTL)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--json转换工具包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="StudentController-servlet层-多视图解析"><a href="#StudentController-servlet层-多视图解析" class="headerlink" title="StudentController servlet层 多视图解析"></a>StudentController servlet层 多视图解析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多视图解析 不需要加 <span class="doctag">@ResponseBody</span> 注解</span></span><br><span class="line"><span class="comment"> * 并实现一个方法做到下面三个方法的效果</span></span><br><span class="line"><span class="comment"> * view?id=7 或 view.html?id=7 返回 HTML 页面</span></span><br><span class="line"><span class="comment"> * view.json?id=7 返回 JSON 字符串参数</span></span><br><span class="line"><span class="comment"> * view.xml?id=7 返回 XML</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/view&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">view</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">    <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;student&quot;</span>, student);</span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;view&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * rest风格</span></span><br><span class="line"><span class="comment"> * 依赖 <span class="doctag">@PathVariable</span>注解 指定参数</span></span><br><span class="line"><span class="comment"> * 原地址栏 /view?id=7</span></span><br><span class="line"><span class="comment"> * rest风格 /view/7</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/view/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">view</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">    <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;student&quot;</span>, student);</span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;view&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//局部编码格式配置 produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;</span></span><br><span class="line"><span class="comment">//springMVC.xml JSON全局编码格式已设置</span></span><br><span class="line"><span class="comment">//@ResponseBody 返回JSON注解</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/stringJson/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">stringJson</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">    <span class="keyword">return</span> JSON.toJSONString(student);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//局部编码格式配置 produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;</span></span><br><span class="line"><span class="comment">//springMVC.xml JSON全局编码格式已设置</span></span><br><span class="line"><span class="comment">//@ResponseBody 返回JSON注解</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/objectJson/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">objectJson</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">    <span class="keyword">return</span> student;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="springMVC-xml-springMVC配置文件"><a href="#springMVC-xml-springMVC配置文件" class="headerlink" title="springMVC.xml springMVC配置文件"></a>springMVC.xml springMVC配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描注解的Bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.controller,com.biz&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 多内部资源视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.ContentNegotiatingViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定json 用什么工具解析  xml 用什么工具解析 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultViews&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--定义json 编码格式--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonJsonView&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;charset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--定义xml 用oxm解析--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.xml.MarshallingView&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.oxm.jaxb.Jaxb2Marshaller&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;classesToBeBound&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.pojo.Student<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.pojo.Classes<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定 jsp解析器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;viewResolvers&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--内部资源视图解析器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--前缀解析--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--后缀解析--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--使 @Controller 注解生效--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使 @ResponseBody 返回 object 时 利用 alibaba.fastjson 工具 转换--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--解决springmvc返回的json中文问题  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--解决springMVC返回的json为object 时进行转换--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="示例下载-密码-nihp"><a href="#示例下载-密码-nihp" class="headerlink" title="示例下载 密码: nihp"></a><a href="https://pan.baidu.com/s/1NtVIbh_U1nB-qSrNtmDDNw">示例下载</a> 密码: nihp</h2>]]></content>
      <categories>
        <category>springMVC</category>
        <category>多内部资源视图解析器</category>
        <category>内部资源视图解析器</category>
      </categories>
      <tags>
        <tag>JSON</tag>
        <tag>多内部资源视图解析器</tag>
        <tag>XmlRootElement</tag>
        <tag>ResponseBody</tag>
        <tag>xml</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 Docker 构建一个代理服务器</title>
    <url>/2023/07/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Docker-%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>演示如何使用 Docker 构建一个代理服务器，将请求代理到 <code>https://api.openai.com/</code> 并使用 HTTPS 进行通信。</p>
<span id="more"></span>

<ul>
<li><p>在与 <code>Dockerfile</code> 相同的目录中创建一个名为 <code>nginx.conf</code> 的文件，并将以下内容复制到文件中：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">  <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  <span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/nginx/cert.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/nginx/cert.key;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:le_nginx_SSL:<span class="number">1m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">1440m</span>;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> TLS13-AES-<span class="number">256</span>-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-<span class="number">128</span>-GCM-SHA256:TLS13-AES-<span class="number">128</span>-CCM-<span class="number">8</span>-SHA256:TLS13-AES-<span class="number">128</span>-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="attribute">proxy_pass</span> https://api.openai.com/;</span><br><span class="line">      <span class="attribute">proxy_ssl_server_name</span> <span class="literal">on</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Host api.openai.com;</span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="attribute">chunked_transfer_encoding</span> <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_buffering</span> <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_cache</span> <span class="literal">off</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>请确保将 <code>cert.pem</code> 和 <code>cert.key</code> 替换为您自己的 SSL 证书文件路径。</p>
</li>
<li><p>在与 <code>Dockerfile</code> 相同的目录中，将您的 SSL 证书文件（包括 <code>cert.pem</code> 和 <code>cert.key</code>）放置在该目录下。</p>
</li>
<li><p>创建一个名为 <code>Dockerfile</code> 的文件，并将以下内容复制到文件中：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nginx:latest</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> nginx.conf /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> cert.pem /etc/nginx/cert.pem</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> cert.key /etc/nginx/cert.key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">443</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开终端，切换到包含 <code>Dockerfile</code> 和 <code>nginx.conf</code> 文件的目录。</p>
</li>
<li><p>运行以下命令来构建 Docker 镜像：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">docker build -t openai-proxy .</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建完成后，运行以下命令来启动代理服务器容器：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">docker run -d -p <span class="number">8443</span>:<span class="number">443</span> openai-proxy</span><br></pre></td></tr></table></figure>
<p>这将在后台启动一个名为 <code>openai-proxy</code> 的容器，并将容器内的 443 端口映射到主机的 8443 端口。</p>
</li>
</ul>
<p>现在，您可以通过访问 <code>https://localhost:8443</code> 来访问代理服务器，并通过代理服务器访问 <code>https://api.openai.com/</code>。请注意，这只是一个简单的示例，您可能需要根据需要进行更改和调整，以满足您的具体需求和环境配置。同时，使用自签名证书时，您的浏览器可能会显示安全警告，因为证书不是由受信任的颁发机构签发。</p>
]]></content>
      <categories>
        <category>Nginx</category>
        <category>代理服务器</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>代理服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>如何解决JavaScript中0.1+0.2不等于0.3</title>
    <url>/2016/10/22/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3JavaScript%E4%B8%AD0-1-0-2%E4%B8%8D%E7%AD%89%E4%BA%8E0-3/</url>
    <content><![CDATA[<h2 id="如何解决JavaScript中0-1-0-2不等于0-3"><a href="#如何解决JavaScript中0-1-0-2不等于0-3" class="headerlink" title="如何解决JavaScript中0.1+0.2不等于0.3"></a>如何解决JavaScript中0.1+0.2不等于0.3</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0.1</span>+<span class="number">0.2</span>===<span class="number">0.3</span>);    <span class="comment">//true or false?</span></span><br></pre></td></tr></table></figure>

<p>在正常的数学逻辑思维中，0.1+0.2&#x3D;0.3这个逻辑是正确的，但是在JavaScript中0.1+0.2!&#x3D;&#x3D;0.3，这是为什么呢？这个问题也会偶尔被用来当做面试题来考查面试者对JavaScript的数值的理解程度</p>
<p>在JavaScript中的二进制的浮点数0.1和0.2并不是十分精确，在他们相加的结果并非正好等于0.3，而是一个比较接近的数字 0.30000000000000004 ，所以条件判断结果为 false</p>
<span id="more"></span>

<p>那么应该怎样来解决0.1+0.2等于0.3呢? 最好的方法是设置一个误差范围值，通常称为”机器精度“，而对于 JavaScript 来说，这个值通常是2^-52,而在 ES6 中，已经为我们提供了这样一个属性：Number.EPSILON，而这个值正等于2^-52。这个值非常非常小，在底层计算机已经帮我们运算好，并且无限接近0，但不等于0,。这个时候我们只要判断(0.1+0.2)-0.3小于Number.EPSILON，在这个误差的范围内就可以判定0.1+0.2&#x3D;&#x3D;&#x3D;0.3为true</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">numbersEqual</span>(<span class="params">a,b</span>)&#123;  </span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">abs</span>(a-b)&lt;<span class="title class_">Number</span>.<span class="property">EPSILON</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">var</span> a=<span class="number">0.1</span>+<span class="number">0.2</span>， b=<span class="number">0.3</span>;  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">numbersEqual</span>(a,b));    <span class="comment">//true  </span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务Docker打包插件配置</title>
    <url>/2021/12/08/%E5%BE%AE%E6%9C%8D%E5%8A%A1Docker%E6%89%93%E5%8C%85%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="SpringBoot打包插件配置"><a href="#SpringBoot打包插件配置" class="headerlink" title="SpringBoot打包插件配置"></a>SpringBoot打包插件配置</h1><h2 id="聚合工程-pom-xml-添加全局变量"><a href="#聚合工程-pom-xml-添加全局变量" class="headerlink" title="聚合工程 pom.xml 添加全局变量"></a>聚合工程 <code>pom.xml</code> 添加全局变量</h2><ul>
<li>镜像前缀: <code>image-prefix</code> 自行修改</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>image-prefix<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="子模块-pom-xml-添加配置"><a href="#子模块-pom-xml-添加配置" class="headerlink" title="子模块 pom.xml 添加配置"></a>子模块 <code>pom.xml</code> 添加配置</h2><ul>
<li>打包名称: <code>alibaba-cloud-finalName</code> 自行修改</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>alibaba-cloud-finalName<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--需要加这个, 不然打包镜像找不到启动文件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dockerfile-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">repository</span>&gt;</span>$&#123;docker.image.prefix&#125;/$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">buildArgs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">JAR_FILE</span>&gt;</span>target/$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">JAR_FILE</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">buildArgs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="子模块-pom-xml-同级添加-Dockerfile-配置文件"><a href="#子模块-pom-xml-同级添加-Dockerfile-配置文件" class="headerlink" title="子模块 pom.xml 同级添加 Dockerfile 配置文件"></a>子模块 <code>pom.xml</code> 同级添加 <code>Dockerfile</code> 配置文件</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">FROM adoptopenjdk/openjdk11:ubi</span><br><span class="line">VOLUME /tmp</span><br><span class="line">ARG JAR_FILE</span><br><span class="line">COPY <span class="variable">$&#123;JAR_FILE&#125;</span> app.jar</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="docker镜像过大"><a href="#docker镜像过大" class="headerlink" title="docker镜像过大"></a>docker镜像过大</h3><ul>
<li><p>在 Dockerfile 中, 每一条指令都会创建一个镜像层, 会增加整体镜像的大小. 合并多个指令串起来执行, Dockerfile 中的 <code>RUN</code> 指令通过 <code>&amp;&amp;</code> 和 <code>/</code> 支持将命令串联在一起, 可以省不少镜像层</p>
</li>
<li><p>选用更小的基础镜像, 比如运行 SpringCloud 项目，不必用 <code>jdk</code> , 直接选用 <code>jre</code> 镜像即可, 可以节省50%的内存甚至更多</p>
</li>
</ul>
<h2 id="优化后的-Dockerfile"><a href="#优化后的-Dockerfile" class="headerlink" title="优化后的 Dockerfile"></a>优化后的 <code>Dockerfile</code></h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">FROM adoptopenjdk/openjdk11:jre11u-nightly</span><br><span class="line">VOLUME /tmp</span><br><span class="line">ARG JAR_FILE</span><br><span class="line">COPY <span class="variable">$&#123;JAR_FILE&#125;</span> app.jar</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span><br></pre></td></tr></table></figure>

<h2 id="执行-console-控制台-maven-指令打包"><a href="#执行-console-控制台-maven-指令打包" class="headerlink" title="执行 console 控制台 maven 指令打包"></a>执行 <code>console</code> 控制台 <code>maven</code> 指令打包</h2><h3 id="配置编码格式-pom-xml"><a href="#配置编码格式-pom-xml" class="headerlink" title="配置编码格式 pom.xml"></a>配置编码格式 <code>pom.xml</code></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>utf8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用utf8构建, 不要用系统编码方式构建--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="父模块执行-mvn"><a href="#父模块执行-mvn" class="headerlink" title="父模块执行 mvn"></a>父模块执行 <code>mvn</code></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mvn clean install</span><br></pre></td></tr></table></figure>

<h3 id="子模块执行-mvn"><a href="#子模块执行-mvn" class="headerlink" title="子模块执行 mvn"></a>子模块执行 <code>mvn</code></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mvn install <span class="string">&#x27;-Dmaven.test.skip=true&#x27;</span> dockerfile:build</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>springboot</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务注册中心Docker容器化部署Nacos</title>
    <url>/2021/11/18/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83Docker%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2Nacos/</url>
    <content><![CDATA[<h1 id="Nacos-文档"><a href="#Nacos-文档" class="headerlink" title="Nacos 文档"></a><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html">Nacos 文档</a></h1><p>欢迎来到 Nacos 的世界！</p>
<p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。</p>
<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。</p>
<span id="more"></span>

<h2 id="常用属性配置"><a href="#常用属性配置" class="headerlink" title="常用属性配置"></a>常用属性配置</h2><table>
<thead>
<tr>
<th align="left">name</th>
<th align="left">description</th>
<th align="left">option</th>
</tr>
</thead>
<tbody><tr>
<td align="left">MODE</td>
<td align="left">cluster模式&#x2F;standalone模式</td>
<td align="left">cluster&#x2F;standalone default <strong>cluster</strong></td>
</tr>
<tr>
<td align="left">NACOS_SERVERS</td>
<td align="left">nacos cluster地址</td>
<td align="left">eg. ip1,ip2,ip3</td>
</tr>
<tr>
<td align="left">PREFER_HOST_MODE</td>
<td align="left">是否支持hostname</td>
<td align="left">hostname&#x2F;ip default <strong>ip</strong></td>
</tr>
<tr>
<td align="left">NACOS_SERVER_PORT</td>
<td align="left">nacos服务器端口</td>
<td align="left">default <strong>8848</strong></td>
</tr>
<tr>
<td align="left">NACOS_SERVER_IP</td>
<td align="left">多网卡下的自定义nacos服务器IP</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SPRING_DATASOURCE_PLATFORM</td>
<td align="left">standalone 支持 mysql</td>
<td align="left">mysql &#x2F; empty default empty</td>
</tr>
<tr>
<td align="left">MYSQL_MASTER_SERVICE_HOST</td>
<td align="left">mysql 主节点host</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MYSQL_MASTER_SERVICE_PORT</td>
<td align="left">mysql 主节点端口</td>
<td align="left">default : <strong>3306</strong></td>
</tr>
<tr>
<td align="left">MYSQL_MASTER_SERVICE_DB_NAME</td>
<td align="left">mysql 主节点数据库</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MYSQL_MASTER_SERVICE_USER</td>
<td align="left">数据库用户名</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MYSQL_MASTER_SERVICE_PASSWORD</td>
<td align="left">数据库密码</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MYSQL_SLAVE_SERVICE_HOST</td>
<td align="left">mysql从节点host</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MYSQL_SLAVE_SERVICE_PORT</td>
<td align="left">mysql从节点端口</td>
<td align="left">default :<strong>3306</strong></td>
</tr>
<tr>
<td align="left">MYSQL_DATABASE_NUM</td>
<td align="left">数据库数量</td>
<td align="left">default :<strong>2</strong></td>
</tr>
<tr>
<td align="left">JVM_XMS</td>
<td align="left">-Xms</td>
<td align="left">default :<strong>2g</strong></td>
</tr>
<tr>
<td align="left">JVM_XMX</td>
<td align="left">-Xmx</td>
<td align="left">default :<strong>2g</strong></td>
</tr>
<tr>
<td align="left">JVM_XMN</td>
<td align="left">-Xmn</td>
<td align="left">default :<strong>1g</strong></td>
</tr>
<tr>
<td align="left">JVM_MS</td>
<td align="left">-XX:MetaspaceSize</td>
<td align="left">default :<strong>128m</strong></td>
</tr>
<tr>
<td align="left">JVM_MMS</td>
<td align="left">-XX:MaxMetaspaceSize</td>
<td align="left">default :<strong>320m</strong></td>
</tr>
<tr>
<td align="left">NACOS_DEBUG</td>
<td align="left">开启远程调试</td>
<td align="left">y&#x2F;n default :<strong>n</strong></td>
</tr>
<tr>
<td align="left">TOMCAT_ACCESSLOG_ENABLED</td>
<td align="left">server.tomcat.accesslog.enabled</td>
<td align="left">default :<strong>false</strong></td>
</tr>
</tbody></table>
<h1 id="docker拉取镜像"><a href="#docker拉取镜像" class="headerlink" title="docker拉取镜像"></a>docker拉取镜像</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull nacos/nacos-server</span><br></pre></td></tr></table></figure>

<h1 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<h1 id="启动Nacos"><a href="#启动Nacos" class="headerlink" title="启动Nacos"></a>启动Nacos</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --env MODE=standalone --name nacos -d -p 8848:8848  nacos/nacos-server</span><br></pre></td></tr></table></figure>

<h1 id="列出容器"><a href="#列出容器" class="headerlink" title="列出容器"></a>列出容器</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>

<h1 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h1><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker logs -f <span class="variable">$&#123;CONTAINER ID&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="访问Nacos"><a href="#访问Nacos" class="headerlink" title="访问Nacos"></a><a href="http://localhost:8848/nacos">访问Nacos</a></h1><p>记得开放阿里云的网络安全组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8848/nacos</span><br></pre></td></tr></table></figure>

<h2 id="默认登录密码"><a href="#默认登录密码" class="headerlink" title="默认登录密码"></a>默认登录密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nacos/nacos</span><br></pre></td></tr></table></figure>

<h1 id="Nacos注册中心配置mysql持久化"><a href="#Nacos注册中心配置mysql持久化" class="headerlink" title="Nacos注册中心配置mysql持久化"></a>Nacos注册中心配置mysql持久化</h1><h2 id="nacos数据库脚本-nacos-config-sql"><a href="#nacos数据库脚本-nacos-config-sql" class="headerlink" title="nacos数据库脚本(nacos_config.sql)"></a>nacos数据库脚本(nacos_config.sql)</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"># Sequel Pro <span class="keyword">SQL</span> dump</span><br><span class="line"># Version <span class="number">4541</span></span><br><span class="line">#</span><br><span class="line"># http:<span class="operator">/</span><span class="operator">/</span>www.sequelpro.com<span class="operator">/</span></span><br><span class="line"># https:<span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>sequelpro<span class="operator">/</span>sequelpro</span><br><span class="line">#</span><br><span class="line"># Host: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> (MySQL <span class="number">5.7</span><span class="number">.32</span>)</span><br><span class="line"># Database: nacos_config</span><br><span class="line"># Generation <span class="type">Time</span>: <span class="number">2021</span><span class="number">-02</span><span class="number">-22</span> <span class="number">11</span>:<span class="number">00</span>:<span class="number">00</span> <span class="operator">+</span><span class="number">0000</span></span><br><span class="line"># <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET NAMES utf8 */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#x27;NO_AUTO_VALUE_ON_ZERO&#x27; */</span>;</span><br><span class="line"><span class="comment">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> config_info</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="keyword">COLLATE</span> utf8_bin COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `c_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_use` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `effect` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_schema` text <span class="keyword">COLLATE</span> utf8_bin,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> config_info_aggr</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_aggr` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `datum_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;datum_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;增加租户字段&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> config_info_beta</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_beta` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `beta_ips` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;betaIps&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="keyword">COLLATE</span> utf8_bin COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_beta&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> config_info_tag</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_tag` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tag_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text <span class="keyword">COLLATE</span> utf8_bin COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_tag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> config_tags_relation</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_tags_relation` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `tag_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_name&#x27;</span>,</span><br><span class="line">  `tag_type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_type&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_tag_relation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> group_capacity</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `group_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;集群、各Group容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> his_config_info</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `his_config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">64</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  `src_user` text <span class="keyword">COLLATE</span> utf8_bin,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `op_type` <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;多租户改造&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> permissions</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `permissions` (</span><br><span class="line">  `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `resource` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `action` <span class="type">varchar</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_role_permission` (`role`,`resource`,`action`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> roles</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `roles` (</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `idx_user_role` (`username`,`role`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> tenant_capacity</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Tenant ID&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;租户容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> tenant_info</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `kp` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;kp&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tenant_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_name&#x27;</span>,</span><br><span class="line">  `tenant_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tenant_desc&#x27;</span>,</span><br><span class="line">  `create_source` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create_source&#x27;</span>,</span><br><span class="line">  `gmt_create` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;tenant_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Dump <span class="keyword">of</span> <span class="keyword">table</span> users</span><br><span class="line"># <span class="comment">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `users` (</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `enabled` tinyint(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`username`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */</span>;</span><br><span class="line"><span class="comment">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */</span>;</span><br><span class="line"><span class="comment">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="新增一个用户-nacos-x2F-nacos"><a href="#新增一个用户-nacos-x2F-nacos" class="headerlink" title="新增一个用户 nacos&#x2F;nacos"></a>新增一个用户 nacos&#x2F;nacos</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` (`username`, `password`, `enabled`)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>,<span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<h2 id="持久化启动命令"><a href="#持久化启动命令" class="headerlink" title="持久化启动命令"></a>持久化启动命令</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">-e MODE=standalone \</span><br><span class="line">-e SPRING_DATASOURCE_PLATFORM=mysql \</span><br><span class="line">-e MYSQL_SERVICE_HOST=172.27.111.100 \</span><br><span class="line">-e MYSQL_SERVICE_PORT=3306 \</span><br><span class="line">-e MYSQL_SERVICE_USER=root \</span><br><span class="line">-e MYSQL_SERVICE_PASSWORD=123456 \</span><br><span class="line">-e MYSQL_SERVICE_DB_NAME=nacos_config \</span><br><span class="line">-p 8848:8848 \</span><br><span class="line">--restart=always \</span><br><span class="line">--name nacos \</span><br><span class="line">nacos/nacos-server</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>centOS</tag>
        <tag>docker</tag>
        <tag>nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>快速部署Kibana 并配置外网可以访问</title>
    <url>/2018/12/14/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Kibana-%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%A4%96%E7%BD%91%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE/</url>
    <content><![CDATA[<h1 id="阿里云服务器部署kibana"><a href="#阿里云服务器部署kibana" class="headerlink" title="阿里云服务器部署kibana"></a>阿里云服务器部署kibana</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-6.5.3-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf kibana-6.5.3-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>

<h2 id="阿里云外网访问"><a href="#阿里云外网访问" class="headerlink" title="阿里云外网访问"></a>阿里云外网访问</h2><p>开放端口,修改配置文件 confing目录下的kibana.yml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server.host: &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>
<h2 id="守护进程后台启动"><a href="#守护进程后台启动" class="headerlink" title="守护进程后台启动"></a>守护进程后台启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup  XXX  &amp;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Kibana</category>
      </categories>
      <tags>
        <tag>wget</tag>
        <tag>Kibana</tag>
      </tags>
  </entry>
  <entry>
    <title>源码安装RocketMQ4.X可视化控制台</title>
    <url>/2019/05/06/%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85RocketMQ4-X%E5%8F%AF%E8%A7%86%E5%8C%96%E6%8E%A7%E5%88%B6%E5%8F%B0/</url>
    <content><![CDATA[<h2 id="RocketMQ可视化控制台中文文档"><a href="#RocketMQ可视化控制台中文文档" class="headerlink" title="RocketMQ可视化控制台中文文档"></a><a href="https://github.com/apache/rocketmq-externals/blob/master/rocketmq-console/doc/1_0_0/UserGuide_CN.md">RocketMQ可视化控制台中文文档</a></h2><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/apache/rocketmq-externals/archive/master.zip</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip master.zip</span><br><span class="line">cd rocketmq-externals-master/rocketmq-console/</span><br></pre></td></tr></table></figure>
<h2 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>

<h2 id="target目录-通过java-jar的方式运行-启动后是8080端口"><a href="#target目录-通过java-jar的方式运行-启动后是8080端口" class="headerlink" title="target目录 通过java -jar的方式运行 启动后是8080端口"></a>target目录 通过java -jar的方式运行 启动后是8080端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup java -jar ./target/rocketmq-console-ng-1.0.1.jar &amp;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>RocketMQ</category>
        <category>可视化控制台</category>
      </categories>
      <tags>
        <tag>RocketMQ</tag>
        <tag>可视化控制台</tag>
      </tags>
  </entry>
  <entry>
    <title>源码编译安装Redis4.X</title>
    <url>/2018/12/04/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Redis4-X/</url>
    <content><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-4.0.9.tar.gz</span><br></pre></td></tr></table></figure>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar xzf redis-4.0.9.tar.gz</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a>进入文件夹</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd redis-4.0.9</span><br></pre></td></tr></table></figure>
<h2 id="编译依赖-GCC"><a href="#编译依赖-GCC" class="headerlink" title="编译依赖 GCC"></a>编译依赖 GCC</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动服务端：src/redis-server</span><br><span class="line">启动客户端：src/redis-cli</span><br></pre></td></tr></table></figure>
<h2 id="默认是本地访问的，需要开放外网访问"><a href="#默认是本地访问的，需要开放外网访问" class="headerlink" title="默认是本地访问的，需要开放外网访问"></a>默认是本地访问的，需要开放外网访问</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开redis.conf文件在NETWORK部分修改</span><br><span class="line">注释掉bind 127.0.0.1可以使所有的ip访问redis</span><br><span class="line">修改 protected-mode，值改为no</span><br></pre></td></tr></table></figure>

<h2 id="WARNING-解决方案"><a href="#WARNING-解决方案" class="headerlink" title="WARNING 解决方案"></a>WARNING 解决方案</h2><h3 id="WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-x2F-proc-x2F-sys-x2F-net-x2F-core-x2F-somaxconn-is-set-to-the-lower-value-of-128"><a href="#WARNING-The-TCP-backlog-setting-of-511-cannot-be-enforced-because-x2F-proc-x2F-sys-x2F-net-x2F-core-x2F-somaxconn-is-set-to-the-lower-value-of-128" class="headerlink" title="WARNING: The TCP backlog setting of 511 cannot be enforced because &#x2F;proc&#x2F;sys&#x2F;net&#x2F;core&#x2F;somaxconn is set to the lower value of 128."></a>WARNING: The TCP backlog setting of 511 cannot be enforced because &#x2F;proc&#x2F;sys&#x2F;net&#x2F;core&#x2F;somaxconn is set to the lower value of 128.</h3><p>在 <code>/etc/rc.local</code> 目录下新增以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 511 &gt; /proc/sys/net/core/somaxconn</span><br></pre></td></tr></table></figure>

<h3 id="WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-x3D-1’-to-x2F-etc-x2F-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-x3D-1’-for-this-to-take-effect"><a href="#WARNING-overcommit-memory-is-set-to-0-Background-save-may-fail-under-low-memory-condition-To-fix-this-issue-add-‘vm-overcommit-memory-x3D-1’-to-x2F-etc-x2F-sysctl-conf-and-then-reboot-or-run-the-command-‘sysctl-vm-overcommit-memory-x3D-1’-for-this-to-take-effect" class="headerlink" title="WARNING: overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory &#x3D; 1’ to&#x2F;etc&#x2F;sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory&#x3D;1’ for this to take effect."></a>WARNING: overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add ‘vm.overcommit_memory &#x3D; 1’ to&#x2F;etc&#x2F;sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory&#x3D;1’ for this to take effect.</h3><p>在 <code>/etc/sysctl.conf</code> 目录下新增以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vm.overcommit_memory = 1</span><br></pre></td></tr></table></figure>

<h3 id="WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-thisissue-run-the-command-‘echo-never-gt-x2F-sys-x2F-kernel-x2F-mm-x2F-transparent-hugepage-x2F-enabled’-as-root-and-add-it-to-your-x2F-etc-x2F-rc-local-in-order-to-retain-thesetting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled"><a href="#WARNING-you-have-Transparent-Huge-Pages-THP-support-enabled-in-your-kernel-This-will-create-latency-and-memory-usage-issues-with-Redis-To-fix-thisissue-run-the-command-‘echo-never-gt-x2F-sys-x2F-kernel-x2F-mm-x2F-transparent-hugepage-x2F-enabled’-as-root-and-add-it-to-your-x2F-etc-x2F-rc-local-in-order-to-retain-thesetting-after-a-reboot-Redis-must-be-restarted-after-THP-is-disabled" class="headerlink" title="WARNING: you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix thisissue run the command ‘echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled’ as root, and add it to your &#x2F;etc&#x2F;rc.local in order to retain thesetting after a reboot. Redis must be restarted after THP is disabled."></a>WARNING: you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix thisissue run the command ‘echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled’ as root, and add it to your &#x2F;etc&#x2F;rc.local in order to retain thesetting after a reboot. Redis must be restarted after THP is disabled.</h3><p>在 <code>/etc/rc.local</code> 目录下新增以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br></pre></td></tr></table></figure>

<h3 id="内核立即生效"><a href="#内核立即生效" class="headerlink" title="内核立即生效"></a>内核立即生效</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
<h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$redis-cli</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config set requirepass &#123;password&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>wget</tag>
      </tags>
  </entry>
  <entry>
    <title>热部署在Eclipse和IDEA里面的使用</title>
    <url>/2019/01/14/%E7%83%AD%E9%83%A8%E7%BD%B2%E5%9C%A8Eclipse%E5%92%8CIDEA%E9%87%8C%E9%9D%A2%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="热部署在Eclipse和IDEA里面的使用"><a href="#热部署在Eclipse和IDEA里面的使用" class="headerlink" title="热部署在Eclipse和IDEA里面的使用"></a>热部署在Eclipse和IDEA里面的使用</h2><p>简介：讲解热部署的使用注意事项，在eclipse里面默认开启，在IDE里面默认关闭</p>
<h2 id="增加依赖"><a href="#增加依赖" class="headerlink" title="增加依赖"></a>增加依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="eclipse热部署默认自动开启"><a href="#eclipse热部署默认自动开启" class="headerlink" title="eclipse热部署默认自动开启"></a>eclipse热部署默认自动开启</h2><h2 id="idea里面要设置"><a href="#idea里面要设置" class="headerlink" title="idea里面要设置"></a>idea里面要设置</h2><h3 id="相关偏好里开启自动编译"><a href="#相关偏好里开启自动编译" class="headerlink" title="相关偏好里开启自动编译"></a>相关偏好里开启自动编译</h3><p><code>File</code> &gt;&gt;&gt; <code>Settings</code> &gt;&gt;&gt; <code>Build,Execution,Deployment</code> &gt;&gt;&gt; <code>Compiler</code></p>
<p>勾选 <code>Build project automatically</code></p>
<h3 id="Shift-Ctrl-Alt-x2F-，选择Registry"><a href="#Shift-Ctrl-Alt-x2F-，选择Registry" class="headerlink" title="Shift+Ctrl+Alt+&#x2F;，选择Registry"></a>Shift+Ctrl+Alt+&#x2F;，选择Registry</h3><p>勾选 compiler.automake.allow.when.app.running</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a><a href="https://www.cnblogs.com/aqsunkai/p/6690574.html">参考链接</a></h3>]]></content>
      <categories>
        <category>热部署</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>热部署</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>邮件传输协议</title>
    <url>/2021/10/26/%E9%82%AE%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="SMTP协议"><a href="#SMTP协议" class="headerlink" title="SMTP协议"></a>SMTP协议</h1><p>全称为 Simple Mail Transfer Protocol，简单邮件传输协议。它定义了邮件客户端软件和SMTP邮件服务器之间，以及两台SMTP邮件服务器之间的通信规则</p>
<span id="more"></span>

<h1 id="POP3协议"><a href="#POP3协议" class="headerlink" title="POP3协议"></a>POP3协议</h1><p>全称为 Post Office Protocol，邮局协议。它定义了邮件客户端软件和POP3邮件服务器的通信规则</p>
<h1 id="IMAP协议"><a href="#IMAP协议" class="headerlink" title="IMAP协议"></a>IMAP协议</h1><p>全称为 Internet Message Access Protocol,Internet消息访问协议，它是对POP3协议一种扩展，也是定义了邮件客户端软件和IMAP邮件服务器的通信规则</p>
]]></content>
      <tags>
        <tag>mail</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云对象存储服务 springcloud服务接口</title>
    <url>/2018/12/27/%E9%98%BF%E9%87%8C%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1-springcloud%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3/</url>
    <content><![CDATA[<h1 id="阿里云对象存储服务-springcloud服务接口"><a href="#阿里云对象存储服务-springcloud服务接口" class="headerlink" title="阿里云对象存储服务 springcloud服务接口"></a>阿里云对象存储服务 springcloud服务接口</h1><p>本文章提供的是阿里云对象存储的核心示例代码 , 具体springcloud接口服务于最下面查看 <code>示例下载</code></p>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 示例说明</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * HelloOSS是OSS Java SDK的示例程序，您可以修改endpoint、accessKeyId、accessKeySecret、bucketName后直接运行。</span></span><br><span class="line"><span class="comment"> * 运行方法请参考README。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 本示例中的并不包括OSS Java SDK的所有功能，详细功能及使用方法，请参看“SDK手册 &gt; Java-SDK”，</span></span><br><span class="line"><span class="comment"> * 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/preface.html?spm=5176.docoss/sdk/java-sdk/。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 调用OSS Java SDK的方法时，抛出异常表示有错误发生；没有抛出异常表示成功执行。</span></span><br><span class="line"><span class="comment"> * 当错误发生时，OSS Java SDK的方法会抛出异常，异常中包括错误码、错误信息，详细请参看“SDK手册 &gt; Java-SDK &gt; 异常处理”，</span></span><br><span class="line"><span class="comment"> * 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/exception.html?spm=5176.docoss/api-reference/error-response。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * OSS控制台可以直观的看到您调用OSS Java SDK的结果，OSS控制台地址是：https://oss.console.aliyun.com/index#/。</span></span><br><span class="line"><span class="comment"> * OSS控制台使用方法请参看文档中心的“控制台用户指南”， 指南的来链接地址是：https://help.aliyun.com/document_detail/oss/getting-started/get-started.html?spm=5176.docoss/user_guide。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * OSS的文档中心地址是：https://help.aliyun.com/document_detail/oss/user_guide/overview.html。</span></span><br><span class="line"><span class="comment"> * OSS Java SDK的文档地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/install.html?spm=5176.docoss/sdk/java-sdk。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.aliyun.oss.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.ClientException;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSException;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.BucketInfo;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.OSSObject;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.OSSObjectSummary;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.ObjectListing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.PropertyConfigurator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloOSS</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> Logger.getLogger(HelloOSS.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// endpoint是访问OSS的域名。如果您已经在OSS的控制台上 创建了Bucket，请在控制台上查看域名。</span></span><br><span class="line">    <span class="comment">// 如果您还没有创建Bucket，endpoint选择请参看文档中心的“开发人员指南 &gt; 基本概念 &gt; 访问域名”，</span></span><br><span class="line">    <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/user_guide/oss_concept/endpoint.html?spm=5176.docoss/user_guide/endpoint_region</span></span><br><span class="line">    <span class="comment">// endpoint的格式形如“http://oss-cn-hangzhou.aliyuncs.com/”，注意http://后不带bucket名称，</span></span><br><span class="line">    <span class="comment">// 比如“http://bucket-name.oss-cn-hangzhou.aliyuncs.com”，是错误的endpoint，请去掉其中的“bucket-name”。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;http://oss-cn-hangzhou.aliyuncs.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// accessKeyId和accessKeySecret是OSS的访问密钥，您可以在控制台上创建和查看，</span></span><br><span class="line">    <span class="comment">// 创建和查看访问密钥的链接地址是：https://ak-console.aliyun.com/#/。</span></span><br><span class="line">    <span class="comment">// 注意：accessKeyId和accessKeySecret前后都没有空格，从控制台复制时请检查并去除多余的空格。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> <span class="string">&quot;&lt;yourAccessKeyId&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> <span class="string">&quot;&lt;yourAccessKeySecret&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Bucket用来管理所存储Object的存储空间，详细描述请参看“开发人员指南 &gt; 基本概念 &gt; OSS基本概念介绍”。</span></span><br><span class="line">    <span class="comment">// Bucket命名规范如下：只能包括小写字母，数字和短横线（-），必须以小写字母或者数字开头，长度必须在3-63字节之间。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> <span class="string">&quot;&lt;yourBucketName&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Object是OSS存储数据的基本单元，称为OSS的对象，也被称为OSS的文件。详细描述请参看“开发人员指南 &gt; 基本概念 &gt; OSS基本概念介绍”。</span></span><br><span class="line">    <span class="comment">// Object命名规范如下：使用UTF-8编码，长度必须在1-1023字节之间，不能以“/”或者“\”字符开头。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">firstKey</span> <span class="operator">=</span> <span class="string">&quot;my-first-key&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 日志配置，OSS Java SDK使用log4j记录错误信息。示例程序会在工程目录下生成“oss-demo.log”日志文件，默认日志级别是INFO。</span></span><br><span class="line">        <span class="comment">// 日志的配置文件是“conf/log4j.properties”，如果您不需要日志，可以没有日志配置文件和下面的日志配置。</span></span><br><span class="line">        PropertyConfigurator.configure(<span class="string">&quot;conf/log4j.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">&quot;Started&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成OSSClient，您可以指定一些参数，详见“SDK手册 &gt; Java-SDK &gt; 初始化”，</span></span><br><span class="line">        <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/init.html?spm=5176.docoss/sdk/java-sdk/get-start</span></span><br><span class="line">        <span class="type">OSSClient</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClient</span>(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断Bucket是否存在。详细请参看“SDK手册 &gt; Java-SDK &gt; 管理Bucket”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/manage_bucket.html?spm=5176.docoss/sdk/java-sdk/init</span></span><br><span class="line">            <span class="keyword">if</span> (ossClient.doesBucketExist(bucketName)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您已经创建Bucket：&quot;</span> + bucketName + <span class="string">&quot;。&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;您的Bucket不存在，创建Bucket：&quot;</span> + bucketName + <span class="string">&quot;。&quot;</span>);</span><br><span class="line">                <span class="comment">// 创建Bucket。详细请参看“SDK手册 &gt; Java-SDK &gt; 管理Bucket”。</span></span><br><span class="line">                <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/manage_bucket.html?spm=5176.docoss/sdk/java-sdk/init</span></span><br><span class="line">                ossClient.createBucket(bucketName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查看Bucket信息。详细请参看“SDK手册 &gt; Java-SDK &gt; 管理Bucket”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/manage_bucket.html?spm=5176.docoss/sdk/java-sdk/init</span></span><br><span class="line">            <span class="type">BucketInfo</span> <span class="variable">info</span> <span class="operator">=</span> ossClient.getBucketInfo(bucketName);</span><br><span class="line">            System.out.println(<span class="string">&quot;Bucket &quot;</span> + bucketName + <span class="string">&quot;的信息如下：&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t数据中心：&quot;</span> + info.getBucket().getLocation());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t创建时间：&quot;</span> + info.getBucket().getCreationDate());</span><br><span class="line">            System.out.println(<span class="string">&quot;\t用户标志：&quot;</span> + info.getBucket().getOwner());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 把字符串存入OSS，Object的名称为firstKey。详细请参看“SDK手册 &gt; Java-SDK &gt; 上传文件”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/upload_object.html?spm=5176.docoss/user_guide/upload_object</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(<span class="string">&quot;Hello OSS&quot;</span>.getBytes());</span><br><span class="line">            ossClient.putObject(bucketName, firstKey, is);</span><br><span class="line">            System.out.println(<span class="string">&quot;Object：&quot;</span> + firstKey + <span class="string">&quot;存入OSS成功。&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 下载文件。详细请参看“SDK手册 &gt; Java-SDK &gt; 下载文件”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/download_object.html?spm=5176.docoss/sdk/java-sdk/manage_object</span></span><br><span class="line">            <span class="type">OSSObject</span> <span class="variable">ossObject</span> <span class="operator">=</span> ossClient.getObject(bucketName, firstKey);</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> ossObject.getObjectContent();</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">objectContent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream));</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">                <span class="keyword">if</span> (line == <span class="literal">null</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                objectContent.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            inputStream.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;Object：&quot;</span> + firstKey + <span class="string">&quot;的内容是：&quot;</span> + objectContent);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 文件存储入OSS，Object的名称为fileKey。详细请参看“SDK手册 &gt; Java-SDK &gt; 上传文件”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/upload_object.html?spm=5176.docoss/user_guide/upload_object</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">fileKey</span> <span class="operator">=</span> <span class="string">&quot;README.md&quot;</span>;</span><br><span class="line">            ossClient.putObject(bucketName, fileKey, <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;README.md&quot;</span>));</span><br><span class="line">            System.out.println(<span class="string">&quot;Object：&quot;</span> + fileKey + <span class="string">&quot;存入OSS成功。&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查看Bucket中的Object。详细请参看“SDK手册 &gt; Java-SDK &gt; 管理文件”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/manage_object.html?spm=5176.docoss/sdk/java-sdk/manage_bucket</span></span><br><span class="line">            <span class="type">ObjectListing</span> <span class="variable">objectListing</span> <span class="operator">=</span> ossClient.listObjects(bucketName);</span><br><span class="line">            List&lt;OSSObjectSummary&gt; objectSummary = objectListing.getObjectSummaries();</span><br><span class="line">            System.out.println(<span class="string">&quot;您有以下Object：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (OSSObjectSummary object : objectSummary) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;\t&quot;</span> + object.getKey());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 删除Object。详细请参看“SDK手册 &gt; Java-SDK &gt; 管理文件”。</span></span><br><span class="line">            <span class="comment">// 链接地址是：https://help.aliyun.com/document_detail/oss/sdk/java-sdk/manage_object.html?spm=5176.docoss/sdk/java-sdk/manage_bucket</span></span><br><span class="line">            ossClient.deleteObject(bucketName, firstKey);</span><br><span class="line">            System.out.println(<span class="string">&quot;删除Object：&quot;</span> + firstKey + <span class="string">&quot;成功。&quot;</span>);</span><br><span class="line">            ossClient.deleteObject(bucketName, fileKey);</span><br><span class="line">            System.out.println(<span class="string">&quot;删除Object：&quot;</span> + fileKey + <span class="string">&quot;成功。&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (OSSException oe) &#123;</span><br><span class="line">            oe.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException ce) &#123;</span><br><span class="line">            ce.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            ossClient.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">&quot;Completed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="示例下载"><a href="#示例下载" class="headerlink" title="示例下载"></a><a href="https://gitee.com/admin-james/aliyun_oss_service">示例下载</a></h1>]]></content>
      <categories>
        <category>阿里云</category>
        <category>oss</category>
      </categories>
      <tags>
        <tag>springcloud</tag>
        <tag>阿里云</tag>
        <tag>oss</tag>
        <tag>对象存储</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云服务器 快速安装ElasticSearch</title>
    <url>/2018/12/14/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85ElasticSearch/</url>
    <content><![CDATA[<h2 id="使用wget-下载elasticsearch安装包"><a href="#使用wget-下载elasticsearch安装包" class="headerlink" title="使用wget 下载elasticsearch安装包"></a>使用wget 下载elasticsearch安装包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.13.tar.gz</span><br></pre></td></tr></table></figure>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf elasticsearch-5.6.13.tar.gz</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="外网访问配置"><a href="#外网访问配置" class="headerlink" title="外网访问配置"></a>外网访问配置</h2><p><code>config</code>目录下面<code>elasticsearch.yml</code><br>修改为 <code>network.host: 0.0.0.0</code></p>
<h2 id="常见配置问题资料"><a href="#常见配置问题资料" class="headerlink" title="常见配置问题资料"></a><a href="https://www.jianshu.com/p/c5d6ec0f35e0">常见配置问题资料</a></h2><h2 id="此版本配合-spring-boot-对应版本-2-0-7-RELEASE-使用"><a href="#此版本配合-spring-boot-对应版本-2-0-7-RELEASE-使用" class="headerlink" title="此版本配合 spring-boot 对应版本 2.0.7.RELEASE 使用"></a>此版本配合 spring-boot 对应版本 2.0.7.RELEASE 使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0.7.RELEASE&lt;/version&gt;</span><br><span class="line">    &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;/parent&gt;</span><br></pre></td></tr></table></figure>

<h3 id="spring-boot-使用依赖"><a href="#spring-boot-使用依赖" class="headerlink" title="spring-boot 使用依赖"></a>spring-boot 使用依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="IK中文分词GitHub下载网站"><a href="#IK中文分词GitHub下载网站" class="headerlink" title="IK中文分词GitHub下载网站"></a>IK中文分词<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases">GitHub下载网站</a></h2><h3 id="版本查看"><a href="#版本查看" class="headerlink" title="版本查看"></a><a href="https://github.com/medcl/elasticsearch-analysis-ik/blob/master/README.md">版本查看</a></h3><h3 id="使用wget-下载IK中文分词器"><a href="#使用wget-下载IK中文分词器" class="headerlink" title="使用wget 下载IK中文分词器"></a>使用wget 下载IK中文分词器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.6.13/elasticsearch-analysis-ik-5.6.13.zip</span><br></pre></td></tr></table></figure>

<p>插件下载到ES根目录下的<code>plugins</code>文件夹中 : <code>./elasticsearch-5.6.13/plugins/</code></p>
<h3 id="解压-1"><a href="#解压-1" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip elasticsearch-analysis-ik-5.6.13.zip</span><br></pre></td></tr></table></figure>
<h3 id="删除压缩包"><a href="#删除压缩包" class="headerlink" title="删除压缩包"></a>删除压缩包</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm elasticsearch-analysis-ik-5.6.13.zip</span><br></pre></td></tr></table></figure>

<h2 id="当我们在使用elasticsearch的时候，如果是以root权限来执行elasticsearch"><a href="#当我们在使用elasticsearch的时候，如果是以root权限来执行elasticsearch" class="headerlink" title="当我们在使用elasticsearch的时候，如果是以root权限来执行elasticsearch"></a>当我们在使用elasticsearch的时候，如果是以root权限来执行elasticsearch</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./elasticsearch</span><br></pre></td></tr></table></figure>

<!-- more -->

<h2 id="则会有以下报错"><a href="#则会有以下报错" class="headerlink" title="则会有以下报错"></a>则会有以下报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2018-12-04T10:24:21,751][WARN ][o.e.b.ElasticsearchUncaughtExceptionHandler] [] uncaught exception in thread [main]</span><br><span class="line">org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:125) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:112) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:85) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">Caused by: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:105) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:172) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:323) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:121) ~[elasticsearch-6.2.2.jar:6.2.2]</span><br></pre></td></tr></table></figure>

<p>这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考虑，<br>建议创建一个单独的用户用来运行ElasticSearch</p>
<h2 id="创建elsearch用户组及elsearch用户"><a href="#创建elsearch用户组及elsearch用户" class="headerlink" title="创建elsearch用户组及elsearch用户"></a>创建elsearch用户组及elsearch用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd elsearch</span><br><span class="line">useradd elsearch -g elsearch -p elasticsearch</span><br></pre></td></tr></table></figure>

<h2 id="更改elasticsearch文件夹及内部文件的所属用户及组为elsearch-elsearch"><a href="#更改elasticsearch文件夹及内部文件的所属用户及组为elsearch-elsearch" class="headerlink" title="更改elasticsearch文件夹及内部文件的所属用户及组为elsearch:elsearch"></a>更改elasticsearch文件夹及内部文件的所属用户及组为elsearch:elsearch</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R elsearch:elsearch <span class="variable">$&#123;elasticsearch&#125;</span></span><br></pre></td></tr></table></figure>

<p>${elasticsearch}为你elasticsearch的目录路径</p>
<h2 id="切换到elsearch用户再启动"><a href="#切换到elsearch用户再启动" class="headerlink" title="切换到elsearch用户再启动"></a>切换到elsearch用户再启动</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su elsearch #切换账户</span><br><span class="line">cd elasticsearch/bin #进入你的elasticsearch目录下的bin目录</span><br><span class="line">./elasticsearch</span><br></pre></td></tr></table></figure>

<h2 id="启动后会打印正常启动日志信息如下"><a href="#启动后会打印正常启动日志信息如下" class="headerlink" title="启动后会打印正常启动日志信息如下"></a>启动后会打印正常启动日志信息如下</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2018-12-04T10:48:10,218][INFO ][o.e.n.Node               ] [] initializing ...</span><br><span class="line">[2018-12-04T10:48:10,387][INFO ][o.e.e.NodeEnvironment    ] [5tOgySS] using [1] data paths, mounts [[/ (/dev/vda1)]], net usable_space [34.2gb], net total_space [39.2gb], types [ext4]</span><br><span class="line">[2018-12-04T10:48:10,387][INFO ][o.e.e.NodeEnvironment    ] [5tOgySS] heap size [990.7mb], compressed ordinary object pointers [true]</span><br><span class="line">[2018-12-04T10:48:10,388][INFO ][o.e.n.Node               ] node name [5tOgySS] derived from node ID [5tOgySSsTVyh-aqzPrZrZQ]; set [node.name] to override</span><br><span class="line">[2018-12-04T10:48:10,389][INFO ][o.e.n.Node               ] version[6.2.2], pid[2211], build[10b1edd/2018-02-16T19:01:30.685723Z], OS[Linux/4.4.0-117-generic/amd64], JVM[Oracle Corporation/OpenJDK 64-Bit Server VM/1.8.0_191/25.191-b12]</span><br><span class="line">[2018-12-04T10:48:10,389][INFO ][o.e.n.Node               ] JVM arguments [-Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.io.tmpdir=/tmp/elasticsearch.UJf6TjBC, -XX:+HeapDumpOnOutOfMemoryError, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintTenuringDistribution, -XX:+PrintGCApplicationStoppedTime, -Xloggc:logs/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=32, -XX:GCLogFileSize=64m, -Des.path.home=/usr/local/lib/elasticsearch-6.2.2, -Des.path.conf=/usr/local/lib/elasticsearch-6.2.2/config]</span><br><span class="line">[2018-12-04T10:48:11,432][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [aggs-matrix-stats]</span><br><span class="line">[2018-12-04T10:48:11,432][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [analysis-common]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [ingest-common]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [lang-expression]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [lang-mustache]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [lang-painless]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [mapper-extras]</span><br><span class="line">[2018-12-04T10:48:11,433][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [parent-join]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [percolator]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [rank-eval]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [reindex]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [repository-url]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [transport-netty4]</span><br><span class="line">[2018-12-04T10:48:11,434][INFO ][o.e.p.PluginsService     ] [5tOgySS] loaded module [tribe]</span><br><span class="line">[2018-12-04T10:48:11,435][INFO ][o.e.p.PluginsService     ] [5tOgySS] no plugins loaded</span><br><span class="line">[2018-12-04T10:48:14,742][INFO ][o.e.d.DiscoveryModule    ] [5tOgySS] using discovery type [zen]</span><br><span class="line">[2018-12-04T10:48:15,172][INFO ][o.e.n.Node               ] initialized</span><br><span class="line">[2018-12-04T10:48:15,172][INFO ][o.e.n.Node               ] [5tOgySS] starting ...</span><br><span class="line">[2018-12-04T10:48:15,356][INFO ][o.e.t.TransportService   ] [5tOgySS] publish_address &#123;127.0.0.1:9300&#125;, bound_addresses &#123;127.0.0.1:9300&#125;</span><br><span class="line">[2018-12-04T10:48:15,365][WARN ][o.e.b.BootstrapChecks    ] [5tOgySS] max file descriptors [65535] for elasticsearch process is too low, increase to at least [65536]</span><br><span class="line">[2018-12-04T10:48:15,365][WARN ][o.e.b.BootstrapChecks    ] [5tOgySS] max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br><span class="line">[2018-12-04T10:48:18,413][INFO ][o.e.c.s.MasterService    ] [5tOgySS] zen-disco-elected-as-master ([0] nodes joined), reason: new_master &#123;5tOgySS&#125;&#123;5tOgySSsTVyh-aqzPrZrZQ&#125;&#123;2do4g-5VQhqH_uTYtm9Paw&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;</span><br><span class="line">[2018-12-04T10:48:18,417][INFO ][o.e.c.s.ClusterApplierService] [5tOgySS] new_master &#123;5tOgySS&#125;&#123;5tOgySSsTVyh-aqzPrZrZQ&#125;&#123;2do4g-5VQhqH_uTYtm9Paw&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;, reason: apply cluster state (from master [master &#123;5tOgySS&#125;&#123;5tOgySSsTVyh-aqzPrZrZQ&#125;&#123;2do4g-5VQhqH_uTYtm9Paw&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125; committed version [1] source [zen-disco-elected-as-master ([0] nodes joined)]])</span><br><span class="line">[2018-12-04T10:48:18,526][INFO ][o.e.h.n.Netty4HttpServerTransport] [5tOgySS] publish_address &#123;127.0.0.1:9200&#125;, bound_addresses &#123;127.0.0.1:9200&#125;</span><br><span class="line">[2018-12-04T10:48:18,526][INFO ][o.e.n.Node               ] [5tOgySS] started</span><br><span class="line">[2018-12-04T10:48:18,534][INFO ][o.e.g.GatewayService     ] [5tOgySS] recovered [0] indices into cluster_state</span><br></pre></td></tr></table></figure>

<h2 id="ElasticSearch后台启动命令"><a href="#ElasticSearch后台启动命令" class="headerlink" title="ElasticSearch后台启动命令"></a>ElasticSearch后台启动命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./elasticsearch -d</span><br></pre></td></tr></table></figure>

<h2 id="常见异常"><a href="#常见异常" class="headerlink" title="常见异常"></a>常见异常</h2><h3 id="max-file-descriptors-65535-for-elasticsearchprocess-is-too-low-increase-to-at-least-65536"><a href="#max-file-descriptors-65535-for-elasticsearchprocess-is-too-low-increase-to-at-least-65536" class="headerlink" title="max file descriptors [65535] for elasticsearchprocess is too low, increase to at least [65536]"></a>max file descriptors [65535] for elasticsearchprocess is too low, increase to at least [65536]</h3><p>修改 <code>/etc/security/limits.conf</code> 添加如下内容(建议新增到最下面)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* - nofile 65536</span><br><span class="line">* - memlock unlimited</span><br></pre></td></tr></table></figure>

<h3 id="max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144"><a href="#max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-increase-to-at-least-262144" class="headerlink" title="max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]"></a>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</h3><p>修改 <code>/etc/sysctl.conf</code> 添加如下内容(建议新增到最下面)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vm.max_map_count = 262144</span><br></pre></td></tr></table></figure>

<p>修改完内核参数立即生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>elasticsearch</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>wget</tag>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云服务器部署Logstash</title>
    <url>/2018/12/06/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2Logstash/</url>
    <content><![CDATA[<h1 id="阿里云服务器部署Logstash"><a href="#阿里云服务器部署Logstash" class="headerlink" title="阿里云服务器部署Logstash"></a>阿里云服务器部署Logstash</h1><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-6.5.3.tar.gz</span><br></pre></td></tr></table></figure>

<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf logstash-6.5.3.tar.gz</span><br></pre></td></tr></table></figure>

<h2 id="快速启动-需要java8-jre-目前不支持java9"><a href="#快速启动-需要java8-jre-目前不支持java9" class="headerlink" title="快速启动(需要java8 jre,目前不支持java9)"></a>快速启动(需要java8 jre,目前不支持java9)</h2><span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./bin/logstash -e &#x27;input &#123;stdin &#123;&#125;&#125; output &#123;stdout &#123;&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="目录文件说明"><a href="#目录文件说明" class="headerlink" title="目录文件说明"></a><a href="https://www.elastic.co/guide/en/logstash/6.5/dir-layout.html">目录文件说明</a></h2><h2 id="配置讲解"><a href="#配置讲解" class="headerlink" title="配置讲解"></a><a href="https://www.elastic.co/guide/en/logstash/6.5/logstash-settings-file.html">配置讲解</a></h2><p>logstash.yml  修改 pipeline.workers，根据CPU核数增加1到2即可<br>jvm.options   修改 xms和xmx为相同，一般是系统内存三份之二</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>Logstash</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>wget</tag>
        <tag>阿里云</tag>
        <tag>Logstash</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 语法 API</title>
    <url>/2016/09/18/Markdown-Syntax-API/</url>
    <content><![CDATA[<h1 id="Markdown：语法"><a href="#Markdown：语法" class="headerlink" title="Markdown：语法"></a>Markdown：语法</h1><h2 id="overview">概观</h2>

<h3 id="philosophy">哲学</h3>

<p>Markdown旨在尽可能易于阅读和易于编写。</p>
<p>但是，可读性强调一切。Markdown格式的文档应该以纯文本的形式发布，而不会看起来像标签或格式化指令。尽管Markdown的语法受到了几种现有的文本到HTML过滤器的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>， <a href="http://www.aaronsw.com/2002/atx/">atx</a>， <a href="http://textism.com/tools/textile/">Textile</a>， <a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>，<a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>， 和 <a href="http://ettext.taint.org/doc/">EtText</a> ，Markdown语法的最大灵感来源是纯文本电子邮件的格式。</p>
<p>为此，Markdown的语法完全由标点字符组成，标点字符经过仔细选择以便看起来像他们的意思。 例如，一个词的星号实际上看起来像 *强调*。 Markdown列表看起来就像列表。 即使blockquotes看起来像引用的文本段落，假设你曾经使用过电子邮件。</p>
<span id="more"></span>

<h3 id="html">内联HTML</h3>

<p>Markdown的语法仅用于一个目的：用作网络 <em>书写</em> 的格式。</p>
<p>Markdown不是HTML的替代品，甚至不接近它。 它的语法非常小，仅对应于HTML标签的一小部分。 这个想法 <em>并不是</em> 创建一个使插入HTML标签更容易的语法。 在我看来，HTML标签已经很容易插入。 Markdown的想法是让阅读，写作和阅读变得容易编辑散文。 HTML是一种 <em>发布</em> 格式; Markdown是一种 <em>书写</em> 格式。 因此，Markdown的格式化语法只能解决以纯文本形式传达的问题。</p>
<p>对于Markdown语法未涉及的任何标记，您只需使用HTML本身。 没有必要在前言或分隔它以表明您正在从Markdown切换到HTML; 你只需使用标签。</p>
<p>唯一的限制是块级HTML元素 - 例如 <code>&lt;div&gt;</code>， <code>&lt;table&gt;</code>， <code>&lt;pre&gt;</code>， <code>&lt;p&gt;</code> 等等。必须通过空行将其与周围内容分开，并且块的开始和结束标记不应该用制表符或空格缩进。 Markdown足够智能，不会在HTML块级标签周围添加额外的（不需要的） <code>&lt;p&gt;</code> 标签。</p>
<p>例如，要将一个HTML表添加到Markdown文章中：</p>
<pre><code>这是一个正常的段落。
</code></pre>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Foo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<pre><code>这是另一个常规段落。
</code></pre>
<p>请注意，Markdown格式化语法不在块级HTML标记中处理。 例如，您不能在HTML块中使用Markdown风格 <code>*重点*</code>。</p>
<p>跨度级HTML标记 - 例如 <code>&lt;span&gt;</code>， <code>&lt;cite&gt;</code> 或 <code>&lt;del&gt;</code> - 可用于Markdown段落，列表项目或标题中的任何位置。 如果你愿意，你甚至可以使用HTML标签而不是Markdown格式; 例如 如果您希望使用HTML <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标记而不是Markdown的链接或图像语法，请继续前进。</p>
<p>与块级HTML标签不同，Markdown语法 <em>在</em> 跨度级别标签内处理。</p>
<h3 id="autoescape">自动转义特殊字符</h3>

<p>在HTML中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code>。 左尖括号用于启动标签; ＆符号用于表示HTML实体。 如果你想用它们作为文字字符，你必须将它们作为实体转义，例如 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p>
<p>特别是对于网络编写者来说，＆符号是很困难的。 如果你想写’AT&amp;T’，你需要写’<code>AT&amp;amp;T</code>‘。 您甚至需要在网址中跳过＆符号。 因此，如果你想链接到：</p>
<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird
</code></pre>
<p>您需要将URL编码为：</p>
<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird
</code></pre>
<p>在你的锚标记 <code>href</code> 属性中。 不用说，这很容易被遗忘，并且可能是在其他标记良好的网站中最常见的HTML验证错误来源。</p>
<p>Markdown允许您自然使用这些角色，并为您处理所有必要的转义。 如果使用＆符号作为HTML实体的一部分，则它保持不变; 否则它将被翻译成 <code>&amp;amp;</code>。</p>
<p>所以，如果你想在你的文章中包含一个版权符号，你可以写：</p>
<pre><code>&amp;copy;
</code></pre>
<p>Markdown将不再支持它。 但是如果你写：</p>
<pre><code>AT&amp;T
</code></pre>
<p>Markdown会将其转化为：</p>
<pre><code>AT&amp;amp;T
</code></pre>
<p>同样，由于Markdown支持 <a href="#html">嵌入式HTML</a>，因此如果您使用尖括号作为HTML标签的分隔符，Markdown会像这样对待它们。 但是如果你写：</p>
<pre><code>4 &lt; 5
</code></pre>
<p>Markdown会将其转化为：</p>
<pre><code>4 &amp;lt; 5
</code></pre>
<p>但是，在Markdown代码跨度和块内部，尖括号和＆符号 <em>总是</em> 自动编码。 这使得使用Markdown很容易编写HTML代码。 （与原始HTML相反，这是一种用于编写HTML语法的可怕格式，因为您的示例代码中的每个 <code>&lt;</code> 和 <code>&amp;</code> 都需要被转义。）</p>
<hr>
<h2 id="block">块元素</h2>


<h3 id="p">段落和换行符</h3>

<p>段落只是一个或多个连续的文本行，由一个或多个空行分隔。 （空白行是任何看起来像空行的行 - 只包含空格或制表符的行被认为是空白。）普通段落不应该用空格或制表符缩进。</p>
<p>“一条或多条连续文本”规则的含义是Markdown支持“硬包装”文本段落。 这与大多数其他文本到HTML格式化程序（包括Movable Type的“Convert Line Breaks”选项）有很大不同，它将段落中的每个换行符转换为一个 <code>&lt;br /&gt;</code> 标记。</p>
<p>当你 <em>想要</em> 使用Markdown插入一个 <code>&lt;br /&gt;</code> 中断标签时，可以用两个或多个空格结束一行，然后输入返回。</p>
<p>是的，这需要花费更多的努力来创建一个 <code>&lt;br /&gt;</code> ，但是一个简单的“每行换行符都是 <code>&lt;br /&gt;</code> ”规则对于Markdown来说不起作用。 Markdown的电子邮件风格的 <a href="#blockquote">块引用</a> 和多段 <a href="#list">列表项</a> 最适合 - 并且看起来更好 - 当您用严格的休息格式化它们时。</p>
<h3 id="header">头</h3>

<p>Markdown支持两种标题， [Setext] [1] 和 [atx] [2]。</p>
<p>Setext风格的标题是使用等号（用于第一级标题）和破折号（用于第二级标题）的“下划线”。 例如：</p>
<pre><code>这是H1
=============

这是H2
-------------
</code></pre>
<p>任何数字的下划线 <code>=</code> 或 <code>-</code> 将起作用。</p>
<p>Atx风格的标题在行首使用1-6个哈希字符，对应于标题级别1-6。 例如：</p>
<pre><code># 这是H1

## 这是H2

###### 这是一个H6

或者，你可以“关闭”atx风格的头文件。 这纯粹是美容 - 如果你认为它看起来更好，你可以使用它。 结束哈希值甚至不需要匹配用于打开头的哈希数。 （开放散列的数量
确定标题级别。）：

# 这是H1 #

## 这是H2 ##

### 这是一个H3 ######
</code></pre>
<h3 id="blockquote">引用文字</h3>

<p>Markdown使用电子邮件风格的 <code>&gt;</code> 字符进行区块引用。如果您熟悉在电子邮件中引用文本段落，那么您知道如何在Markdown中创建块引用。它看起来最好，如果你硬包装的文本，并把 <code>&gt;</code> 每一行前：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt;
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre>
<p>Markdown可以让你懒惰，只把 <code>&gt;</code> 放在硬包装段落的第一行之前：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre>
<p>块引号可以通过添加额外的 <code>&gt;</code>来嵌套（即块引用）：</p>
<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre>
<p>Blockquotes可以包含其他Markdown元素，包括标题，列表和代码块：</p>
<pre><code>&gt; ## This is a header.
&gt;
&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt;
&gt; Here&#39;s some example code:
&gt;
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre>
<p>任何体面的文本编辑器都应该使电子邮件式引用变得容易。 例如，使用BBEdit，您可以进行选择并从文本菜单中选择“提高报价级别”。</p>
<h3 id="list">清单</h3>

<p>Markdown支持有序（编号）和无序（项目符号）列表。</p>
<p>无序列表使用星号，加号和连字符 - 可互换<br>– 作为列表标记：</p>
<pre><code>*   Red
*   Green
*   Blue
</code></pre>
<p>相当于：</p>
<pre><code>+   Red
+   Green
+   Blue
</code></pre>
<p>和：</p>
<pre><code>-   Red
-   Green
-   Blue
</code></pre>
<p>有序列表使用数字后跟句点：</p>
<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre>
<p>请注意，用于标记列表的实际数字对Markdown产生的HTML输出没有影响。 从上面的列表产生的HTML Markdown是：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>McHale<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Parish<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果你改为在Markdown中写下这样的列表：</p>
<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre>
<p>甚至：</p>
<pre><code>3. Bird
1. McHale
8. Parish
</code></pre>
<p>你会得到完全相同的HTML输出。 关键是，如果你愿意，你可以在你订购的Markdown列表中使用序号，以便你的源代码中的数字与发布的HTML中的数字相匹配。 但是如果你想懒惰，你不需要。</p>
<p>但是，如果确实使用懒惰列表编号，则仍应以数字1开始列表。在将来的某个时间，Markdown可能支持以任意数字开始的有序列表。</p>
<p>列表标记通常从左边界开始，但可以缩进最多三个空格。 列表标记后面必须跟一个或多个空格或制表符。</p>
<p>为了使列表看起来不错，您可以使用悬挂缩进来包装项目：</p>
<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>
<p>但是如果你想懒惰，你不必：</p>
<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>
<p>如果列表项以空行分隔，Markdown会将这些项目包装在HTML输出中的 <code>&lt;p&gt;</code> 标签中。 例如，这个输入：</p>
<pre><code>*   Bird
*   Magic
</code></pre>
<p>将变成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是这个：</p>
<pre><code>*   Bird

*   Magic
</code></pre>
<p>将变成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Bird<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Magic<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>列表项目可能由多个段落组成。 列表项中的每个后续段落都必须缩进4个空格或一个制表符：</p>
<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>
<p>它看起来不错，如果你缩进后续段落的每一行，但在这里再一次，Markdown会让你变得懒惰：</p>
<pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
</code></pre>
<p>要在列表项中放置一个块引用，需要缩进块引用的<code>&gt;</code>分隔符：</p>
<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre>
<p>要将代码块放在列表项中，代码块需要缩进 <em>两次</em> – 8个空格或两个制表符：</p>
<pre><code>*   A list item with a code block:

        &lt;code goes here&gt;
</code></pre>
<p>值得注意的是，有可能通过写这样的东西来偶然触发一个有序列表：</p>
<pre><code>1986. What a great season.
</code></pre>
<p>换句话说，在一行的开始处的 <em>数字周期空间</em> 序列。 为了避免这种情况，您可以使用反斜杠来避开这段时间：</p>
<pre><code>1986\. What a great season.
</code></pre>
<h3 id="precode">代码块</h3>

<p>预格式化的代码块用于编写有关编程或标记源代码。 而不是形成正常的段落，字面上解释代码块的行。 Markdown在 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签中包装了一个代码块。</p>
<p>要在Markdown中生成代码块，只需将块的每一行缩进至少4个空格或1个标签。 例如，给出这个输入：</p>
<pre><code>This is a normal paragraph:

    This is a code block.
</code></pre>
<p>Markdown将产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a normal paragraph:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>This is a code block.</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>从代码块的每一行删除一级缩进 - 4个空格或1个制表符。 例如，这个：</p>
<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre>
<p>将变成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Here is an example of AppleScript:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>tell application &quot;Foo&quot;</span><br><span class="line">    beep</span><br><span class="line">end tell</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>一个代码块会一直持续到它没有缩进的一行（或文章结尾）。</p>
<p>在代码块中，＆符号（<code>&amp;</code>）和尖括号（<code>&lt;</code>和<code>&gt;</code>）会自动转换为HTML实体。 这使得使用Markdown包含示例HTML源代码变得非常简单 - 只需粘贴并缩进即可，Markdown将处理编码＆符号和尖括号的麻烦。 例如，这个：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;copy;</span> 2004 Foo Corporation</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>将变成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>div class=&quot;footer&quot;<span class="symbol">&amp;gt;</span></span><br><span class="line">    <span class="symbol">&amp;amp;</span>copy; 2004 Foo Corporation</span><br><span class="line"><span class="symbol">&amp;lt;</span>/div<span class="symbol">&amp;gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>定期Markdown语法不在代码块内处理。 例如，星号只是代码块内的字面星号。 这意味着使用Markdown编写Markdown自己的语法也很容易。</p>
<h3 id="hr">横向规则</h3>

<p>您可以通过在一行上单独放置三个或更多连字符，星号或下划线来生成水平规则标签（<code>&lt;hr /&gt;</code>）。 如果你愿意，你可以在连字符或星号之间使用空格。 以下每一行都将生成一条水平线：</p>
<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre>
<hr>
<h2 id="span">跨度元素</h2>

<h3 id="link">链接</h3>

<p>Markdown支持两种链接： <em>内联</em> 和 <em>引用</em>。</p>
<p>在这两种样式中，链接文本都由[方括号]分隔。</p>
<p>要创建内联链接，请在链接文本的方括号之后立即使用一组常规括号。 在圆括号内，将链接指向的URL以及链接的 <em>可选</em> 标题放在引号中。 例如：</p>
<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre>
<p>会产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Title&quot;</span>&gt;</span></span><br><span class="line">an example<span class="tag">&lt;/<span class="name">a</span>&gt;</span> inline link.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.net/&quot;</span>&gt;</span>This link<span class="tag">&lt;/<span class="name">a</span>&gt;</span> has no</span><br><span class="line">title attribute.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果您指的是同一台服务器上的本地资源，则可以使用相对路径：</p>
<pre><code>See my [About](/about/) page for details.   
</code></pre>
<p>引用样式链接使用第二组方括号，在其中放置您选择的标签以标识链接：</p>
<pre><code>This is [an example][id] reference-style link.
</code></pre>
<p>您可以选择使用空格来分隔括号组：</p>
<pre><code>This is [an example] [id] reference-style link.
</code></pre>
<p>然后，在文档的任何地方，您都可以像这样定义您的链接标签，并单独定义一行：</p>
<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre>
<p>那是：</p>
<ul>
<li>Square brackets containing the link identifier (optionally<br>indented from the left margin using up to three spaces);</li>
<li>followed by a colon;</li>
<li>followed by one or more spaces (or tabs);</li>
<li>followed by the URL for the link;</li>
<li>optionally followed by a title attribute for the link, enclosed<br>in double or single quotes, or enclosed in parentheses.</li>
</ul>
<p>以下三个链接定义是等价的：</p>
<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &#39;Optional Title Here&#39;
[foo]: http://example.com/  (Optional Title Here)
</code></pre>
<p><strong>注意：</strong> Markdown.pl 1.0.1中有一个已知的错误，它可以防止使用单引号来分隔链接标题。</p>
<p>链接URL可以（可选）用尖括号包围：</p>
<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
</code></pre>
<p>您可以将title属性放在下一行，并使用额外的空格或制表符来填充，这对于更长的URL来说往往更好看：</p>
<pre><code>[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
</code></pre>
<p>链接定义仅用于在Markdown处理期间创建链接，并在HTML输出中从文档中剥离链接定义。</p>
<p>链接定义名称可能由字母，数字，空格和标点符号组成 - 但它们不区分大小写。 例如。 这两个链接：</p>
<pre><code>[link text][a]
[link text][A]
</code></pre>
<p>是等同的。</p>
<p><em>隐含链接名称</em> 快捷方式允许您省略链接的名称，在这种情况下链接文本本身被用作名称。 只需使用一组空白的方括号 - 例如，将单词“Google”链接到google.com网站，您可以简单地编写：</p>
<pre><code>[Google][]
</code></pre>
<p>然后定义链接：</p>
<pre><code>[Google]: http://google.com/
</code></pre>
<p>由于链接名称可能包含空格，因此此快捷键甚至适用于链接文本中的多个单词：</p>
<pre><code>Visit [Daring Fireball][] for more information.
</code></pre>
<p>然后定义链接：</p>
<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre>
<p>链接定义可以放置在Markdown文档的任何位置。 我倾向于在他们使用的每个段落之后立即放置它们，但是如果你愿意，可以将它们全部放在文档的末尾，有点像脚注。</p>
<p>以下是实际参考链接的示例：</p>
<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>
<p>使用隐式链接名称快捷方式，可以改为编写：</p>
<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>
<p>以上两个示例都会生成以下HTML输出：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I get 10 times more traffic from <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://google.com/&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">title</span>=<span class="string">&quot;Google&quot;</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span> than from</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://search.yahoo.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Yahoo Search&quot;</span>&gt;</span>Yahoo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">or <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://search.msn.com/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;MSN Search&quot;</span>&gt;</span>MSN<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>为了比较，这里是使用Markdown的内联链接样式编写的同一段：</p>
<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre>
<p>引用式链接的关键不在于它们更容易编写。 关键是，使用参考样式的链接，您的文档来源更具可读性。 比较上面的例子：使用参考样式的链接，该段本身只有81个字符长; 带有内联式链接，它有176个字符; 并作为原始HTML，它是234个字符。 在原始HTML中，标记多于文本。</p>
<p>使用Markdown的参考风格链接，源文档与浏览器中呈现的最终输出非常相似。 通过允许您将标记相关的元数据移出段落，您可以添加链接而不中断散文的叙述流程。</p>
<h3 id="em">重点</h3>

<p>Markdown将星号（<code>*</code>）和下划线（<code>_</code>）作为重点指标。 用一个 <code>*</code> 或 <code>_</code> 包裹的文本将用一个HTML <code>&lt;em&gt;</code> 标签包装; 用两个 <code>*</code> 或 <code>_</code> 将被包含一个HTML <code>&lt;strong&gt;</code> 标签。 例如，这个输入：</p>
<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre>
<p>会产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single asterisks<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>single underscores<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double asterisks<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>double underscores<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>你可以使用你喜欢的任何风格; 唯一的限制是必须使用相同的字符来打开和关闭重点范围。</p>
<p>强调可以用在词的中间：</p>
<pre><code>un*frigging*believable
</code></pre>
<p>但是如果用空格包围 <code>*</code> 或 <code>_</code> ，它将被视为文字星号或下划线。</p>
<p>要在原本用作强调分隔符的位置生成文字星号或下划线，可以使用反斜杠进行转义：</p>
<pre><code>\*this text is surrounded by literal asterisks\*
</code></pre>
<h3 id="code">代码</h3>

<p>为了表示一段代码，用反引号引起来（<code>`</code>）。 与预格式化代码块不同，代码范围指示正常段落内的代码。 例如：</p>
<pre><code>Use the `printf()` function.
</code></pre>
<p>会产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Use the <span class="tag">&lt;<span class="name">code</span>&gt;</span>printf()<span class="tag">&lt;/<span class="name">code</span>&gt;</span> function.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>要在代码范围内包含文字反引号字符，可以使用多个反引号作为开始和结束分隔符：</p>
<pre><code>``There is a literal backtick (`) here.``
</code></pre>
<p>这将产生这样的结果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>There is a literal backtick (`) here.<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>代码跨度周围的反引号分隔符可能包含空格 - 开放后一个，关闭之前一个。 这使您可以在代码范围的开头或结尾放置文字反引号字符：</p>
<pre><code>A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre>
<p>会产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A single backtick in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A backtick-delimited string in a code span: <span class="tag">&lt;<span class="name">code</span>&gt;</span>`foo`<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过代码跨度，＆符号和尖括号会自动编码为HTML实体，这样可以轻松包含示例HTML标记。 Markdown会变成这样：</p>
<pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.
</code></pre>
<p>成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Please don&#x27;t use any <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>blink<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> tags.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>你可以写这个：</p>
<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
</code></pre>
<p>产生：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>#8212;<span class="tag">&lt;/<span class="name">code</span>&gt;</span> is the decimal-encoded</span><br><span class="line">equivalent of <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;amp;</span>mdash;<span class="tag">&lt;/<span class="name">code</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="img">图片</h3>

<p>无可否认，设计用于将图像置于纯文本文档格式的“自然”语法相当困难。</p>
<p>Markdown使用图像语法，旨在类似链接的语法，允许两种样式：<em>内联</em> 和 <em>引用</em>。</p>
<p>内联图像语法如下所示：</p>
<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre>
<p>那是：</p>
<ul>
<li>感叹号： <code>!</code>;</li>
<li>然后是一组方括号，其中包含图像的 <code>alt</code> 属性文本;</li>
<li>接着是一组括号，其中包含图像的URL或路径，以及用双引号或单引号括起来的可选 <code>title</code> 属性。</li>
</ul>
<p>参考风格的图像语法如下所示：</p>
<pre><code>![Alt text][id]
</code></pre>
<p>其中“id”是定义的图像引用的名称。 图像引用是使用与链接引用相同的语法定义的：</p>
<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre>
<p>在撰写本文时，Markdown没有指定图像尺寸的语法; 如果这对你来说很重要，你可以简单地使用普通的HTML标签 <code>&lt;img&gt;</code> 标签。</p>
<hr>
<h2 id="misc">杂项</h2>

<h3 id="autolink">自动链接</h3>

<p>Markdown支持创建URL和电子邮件地址的“自动”链接的快捷方式：只需使用尖括号围绕URL或电子邮件地址即可。 这意味着如果你想显示一个URL或电子邮件地址的实际文本，并且它也是一个可点击的链接，你可以这样做：</p>
<pre><code>&lt;http://example.com/&gt;
</code></pre>
<p>Markdown将把它变成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://example.com/&quot;</span>&gt;</span>http://example.com/<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>电子邮件地址的自动链接的工作方式与此类似，但Markdown还会执行一些随机化的十进制和十六进制实体编码，以帮助屏蔽地址收集spambots的地址。 例如，Markdown会变成这样：</p>
<pre><code>&lt;address@example.com&gt;
</code></pre>
<p>变成这样的东西：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;<span class="symbol">&amp;#x6D;</span><span class="symbol">&amp;#x61;</span>i<span class="symbol">&amp;#x6C;</span><span class="symbol">&amp;#x74;</span><span class="symbol">&amp;#x6F;</span>:<span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="symbol">&amp;#109;</span>&quot;</span>&gt;</span><span class="symbol">&amp;#x61;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x64;</span><span class="symbol">&amp;#x72;</span><span class="symbol">&amp;#x65;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#115;</span><span class="symbol">&amp;#64;</span><span class="symbol">&amp;#101;</span><span class="symbol">&amp;#120;</span><span class="symbol">&amp;#x61;</span></span><br><span class="line"><span class="symbol">&amp;#109;</span><span class="symbol">&amp;#x70;</span><span class="symbol">&amp;#x6C;</span>e<span class="symbol">&amp;#x2E;</span><span class="symbol">&amp;#99;</span><span class="symbol">&amp;#111;</span><span class="symbol">&amp;#109;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这将在浏览器中呈现为“<a href="mailto:&#97;&#100;&#x64;&#114;&#x65;&#x73;&#115;&#x40;&#101;&#120;&#x61;&#109;&#112;&#108;&#x65;&#46;&#x63;&#111;&#x6d;">&#97;&#100;&#x64;&#114;&#x65;&#x73;&#115;&#x40;&#101;&#120;&#x61;&#109;&#112;&#108;&#x65;&#46;&#x63;&#111;&#x6d;</a>”的可点击链接。</p>
<p>（这种实体编码的技巧确实会欺骗很多（如果不是绝大多数）地址获取机器人，但它绝对不会欺骗所有这些机器人。总比没有好，但以这种方式发布的地址可能最终会开始接收 垃圾邮件。）</p>
<h3 id="backslash">反斜线转义</h3>

<p>Markdown允许您使用反斜线转义来生成文字字符，否则这些字符在Markdown的格式化语法中会有特殊含义。 例如，如果您想用文字星号（而不是HTML <code>&lt;em&gt;</code> 标签）标记单词，则可以在星号之前使用反斜杠，如下所示：</p>
<pre><code>\*literal asterisks\*
</code></pre>
<p>Markdown为以下字符提供反斜杠转义符：</p>
<pre><code>\   backslash
`   backtick
*   asterisk
_   underscore
&#123;&#125;  curly braces
[]  square brackets
()  parentheses
#   hash mark
+	plus sign
-	minus sign (hyphen)
.   dot
!   exclamation mark
</code></pre>
]]></content>
      <categories>
        <category>api</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>api</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis 映射配置解析以及动态SQL配置案例</title>
    <url>/2018/04/05/MyBatis-%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90%E4%BB%A5%E5%8F%8A%E5%8A%A8%E6%80%81SQL%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="什么是-MyBatis-？"><a href="#什么是-MyBatis-？" class="headerlink" title="什么是 MyBatis ？"></a>什么是 MyBatis ？</h2><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p>
<h2 id="MyBatis的-Git-代码库"><a href="#MyBatis的-Git-代码库" class="headerlink" title="MyBatis的 Git 代码库"></a><a href="https://github.com/mybatis/mybatis-3/tree/master/src/site">MyBatis的 Git 代码库</a></h2><span id="more"></span>

<h2 id="corp数据库全部表结构与数据"><a href="#corp数据库全部表结构与数据" class="headerlink" title="corp数据库全部表结构与数据"></a>corp数据库全部表结构与数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> `corp`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `corp`;</span><br><span class="line"></span><br><span class="line">USE `corp`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `depa` (</span><br><span class="line">  `id` <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  `depa_name` NVARCHAR (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职员</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `emp` (</span><br><span class="line">  `id` <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  `emp_name` NVARCHAR (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `depa_id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职位</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `post` (</span><br><span class="line">  `id` <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  `post_name` NVARCHAR (<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 职员职位</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `emp_post` (</span><br><span class="line">  `emp_id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `post_id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">) ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `depa`(`depa_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;销售部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `depa`(`depa_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;美工部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp`(`emp_name`,`depa_id`) <span class="keyword">VALUES</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp`(`emp_name`,`depa_id`) <span class="keyword">VALUES</span>(<span class="string">&#x27;李四&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp`(`emp_name`,`depa_id`) <span class="keyword">VALUES</span>(<span class="string">&#x27;王五&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp`(`emp_name`,`depa_id`) <span class="keyword">VALUES</span>(<span class="string">&#x27;赵六&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `post`(`post_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;职员&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `post`(`post_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;主管&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `post`(`post_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;经理&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `post`(`post_name`) <span class="keyword">VALUES</span>(<span class="string">&#x27;部门经理&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp_post`(`emp_id`,`post_id`) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp_post`(`emp_id`,`post_id`) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp_post`(`emp_id`,`post_id`) <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp_post`(`emp_id`,`post_id`) <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `emp_post`(`emp_id`,`post_id`) <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `depa`;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `emp`;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `post`;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `emp_post`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `depa`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `emp`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `post`;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `emp_post`;</span><br></pre></td></tr></table></figure>

<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Corp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="MybatisUtil-Mybatis工具类"><a href="#MybatisUtil-Mybatis工具类" class="headerlink" title="MybatisUtil Mybatis工具类"></a>MybatisUtil Mybatis工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            sessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sessionFactory.openSession(<span class="literal">false</span>);<span class="comment">//true为自动提交事务</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Depa-部门实体类"><a href="#Depa-部门实体类" class="headerlink" title="Depa 部门实体类"></a>Depa 部门实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Depa</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String depa_name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Emp&gt; emps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Depa&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, depa_name=&#x27;&quot;</span> + depa_name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, emps=&quot;</span> + emps +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDepa_name</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> depa_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDepa_name</span><span class="params">(String depa_name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.depa_name = depa_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">getEmps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmps</span><span class="params">(List&lt;Emp&gt; emps)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Depa-部门实体类-的实现接口-DepaDao-接口类"><a href="#对应-Depa-部门实体类-的实现接口-DepaDao-接口类" class="headerlink" title="对应 Depa 部门实体类 的实现接口 DepaDao 接口类"></a>对应 Depa 部门实体类 的实现接口 DepaDao 接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DepaDao</span> &#123;</span><br><span class="line">    List&lt;Depa&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Depa-部门实体类-的映射配置文件-DepaMapper-xml"><a href="#对应-Depa-部门实体类-的映射配置文件-DepaMapper-xml" class="headerlink" title="对应 Depa 部门实体类 的映射配置文件 DepaMapper.xml"></a>对应 Depa 部门实体类 的映射配置文件 DepaMapper.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.DepaDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;insert id=&quot;&quot;&gt;&lt;/insert&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;delete id=&quot;&quot;&gt;&lt;/delete&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;update id=&quot;&quot;&gt;&lt;/update&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;DepaMapper&quot;</span>&gt;</span></span><br><span class="line">        SELECT *,e.`id` eId,d.`id` dId FROM depa d</span><br><span class="line">        INNER JOIN emp e ON d.`id`=e.`depa_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;DepaMapper&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Depa&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;dId&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--收集 一对多--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;&quot;</span> <span class="attr">property</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;eId&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Emp-职员实体类"><a href="#Emp-职员实体类" class="headerlink" title="Emp 职员实体类"></a>Emp 职员实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String emp_name;</span><br><span class="line">    <span class="keyword">private</span> Depa depa_id;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Post&gt; posts = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Post&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Emp&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, emp_name=&#x27;&quot;</span> + emp_name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, depa_id=&quot;</span> + depa_id +</span><br><span class="line">                <span class="string">&quot;, posts=&quot;</span> + posts +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getEmp_name</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emp_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmp_name</span><span class="params">(String emp_name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emp_name = emp_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Depa <span class="title function_">getDepa_id</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> depa_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDepa_id</span><span class="params">(Depa depa_id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.depa_id = depa_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Post&gt; <span class="title function_">getPosts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> posts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPosts</span><span class="params">(List&lt;Post&gt; posts)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.posts = posts;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Emp-职员实体类-的实现接口-EmpDao-接口类"><a href="#对应-Emp-职员实体类-的实现接口-EmpDao-接口类" class="headerlink" title="对应 Emp 职员实体类 的实现接口 EmpDao 接口类"></a>对应 Emp 职员实体类 的实现接口 EmpDao 接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    List&lt;Emp&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    Integer <span class="title function_">saveOrUpdate</span><span class="params">(Emp emp)</span>;</span><br><span class="line"></span><br><span class="line">    Integer <span class="title function_">del</span><span class="params">(Integer[] idArray)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Emp&gt; <span class="title function_">getByNames</span><span class="params">(List names)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Emp&gt; <span class="title function_">getByIdAndNames</span><span class="params">(Map map)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Emp-职员实体类-的映射配置文件-EmpMapper-xml"><a href="#对应-Emp-职员实体类-的映射配置文件-EmpMapper-xml" class="headerlink" title="对应 Emp 职员实体类 的映射配置文件 EmpMapper.xml"></a>对应 Emp 职员实体类 的映射配置文件 EmpMapper.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.EmpDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        &lt;where&gt; 自动删除第一个 and 或者 or</span></span><br><span class="line"><span class="comment">        item 表示集合中每一个元素进行迭代时的别名</span></span><br><span class="line"><span class="comment">        open 表示该语句以什么开始</span></span><br><span class="line"><span class="comment">        separator 表示在每次进行迭代之间以什么符号作为分隔符</span></span><br><span class="line"><span class="comment">        close表示以什么结束</span></span><br><span class="line"><span class="comment">        如果传入的是单参数且参数类型是一个List的时候，collection属性值为list</span></span><br><span class="line"><span class="comment">        如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array</span></span><br><span class="line"><span class="comment">        如果传入的参数是多个的时候，就需要把它们封装成一个Map map的key就是参数名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;del&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;array&quot;</span> <span class="attr">item</span>=<span class="string">&quot;eId&quot;</span>&gt;</span></span><br><span class="line">                OR id = #&#123;eId&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;set&gt; 自动去除最后的逗号 , --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;saveOrUpdate&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;null != id&quot;</span>&gt;</span></span><br><span class="line">            UPDATE emp</span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;null != emp_name&quot;</span>&gt;</span></span><br><span class="line">                    emp_name = #&#123;emp_name&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;null != depa_id and null != depa_id.id&quot;</span>&gt;</span></span><br><span class="line">                    depa_id = #&#123;depa_id.id&#125;,</span><br><span class="line">                <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">            where id = #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;null == id&quot;</span>&gt;</span></span><br><span class="line">            INSERT INTO `emp`(`emp_name`,`depa_id`) VALUES(#&#123;emp_name&#125;,#&#123;depa_id.id&#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;EmpMapper&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        prefix 前缀添加什么</span></span><br><span class="line"><span class="comment">        prefixOverrides 前缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">        suffix 后缀添加什么</span></span><br><span class="line"><span class="comment">        suffixOverrides 后缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">        &lt;trim prefix=&quot;WHERE&quot; prefixOverrides=&quot;OR || AND&quot;&gt; 等价 &lt;where&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByNames&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;EmpMapper&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;OR || AND&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">item</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">                OR e.`emp_name` LIKE CONCAT(&#x27;%&#x27;,#&#123;name&#125;,&#x27;%&#x27;)</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    prefix 前缀添加什么</span></span><br><span class="line"><span class="comment">    prefixOverrides 前缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">    suffix 后缀添加什么</span></span><br><span class="line"><span class="comment">    suffixOverrides 后缀移除什么 || 为或者</span></span><br><span class="line"><span class="comment">    &lt;trim prefix=&quot;WHERE&quot; prefixOverrides=&quot;OR || AND&quot;&gt; 等价 &lt;where&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getByIdAndNames&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;EmpMapper&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM emp e</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`emp_id`=e.`id`</span><br><span class="line">        INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;OR|AND&quot;</span>&gt;</span></span><br><span class="line">            AND e.`id` = #&#123;mapIdName&#125; AND</span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;OR|AND&quot;</span>&gt;</span></span><br><span class="line">            e.`emp_name` IN</span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;mapNameList&quot;</span> <span class="attr">item</span>=<span class="string">&quot;name&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">                #&#123;name&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;EmpMapper&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--联合查询 一对一--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;depa_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Depa&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;depa_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--收集 一对多--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;posts&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Post&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;post_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Post-职位实体类"><a href="#Post-职位实体类" class="headerlink" title="Post 职位实体类"></a>Post 职位实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Post</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String post_name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Emp&gt; emps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Emp&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Post&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, post_name=&#x27;&quot;</span> + post_name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, emps=&quot;</span> + emps +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPost_name</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> post_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPost_name</span><span class="params">(String post_name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.post_name = post_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">getEmps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> emps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmps</span><span class="params">(List&lt;Emp&gt; emps)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.emps = emps;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Post-职位实体类-的实现接口-PostDao-接口类"><a href="#对应-Post-职位实体类-的实现接口-PostDao-接口类" class="headerlink" title="对应 Post 职位实体类 的实现接口 PostDao 接口类"></a>对应 Post 职位实体类 的实现接口 PostDao 接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PostDao</span> &#123;</span><br><span class="line">    List&lt;Post&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="对应-Post-职位实体类-的映射配置文件-PostMapper-xml"><a href="#对应-Post-职位实体类-的映射配置文件-PostMapper-xml" class="headerlink" title="对应 Post 职位实体类 的映射配置文件 PostMapper.xml"></a>对应 Post 职位实体类 的映射配置文件 PostMapper.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace mapper接口 必填 随便填值 防止SQL语句ID重名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.PostDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType 返回类型 实体类全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;PostMapper&quot;</span>&gt;</span></span><br><span class="line">        SELECT * FROM post p</span><br><span class="line">        INNER JOIN emp_post ep ON ep.`post_id`=p.`id`</span><br><span class="line">        INNER JOIN emp e ON e.`id`=ep.`emp_id`</span><br><span class="line">        INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--type 为resultMap返回类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;PostMapper&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Post&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为type对象对应属性名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;post_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 局部的PARTIAL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--联合查询 一对一--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property 为type对象对应属性名 javaType 为所属类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;depa_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Depa&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--column 为数据库查到后取的别名 property 为javaType对象对应属性名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;depa_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--因为数据库的字段与实体类属性名一致--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--所以在 mybatis-config.xml 配置 &lt;setting name=&quot;autoMappingBehavior&quot; value=&quot;FULL&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 重复的 &lt;result/&gt; 可以省略--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;result column=&quot;&quot; property=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="mybatis-config-xml-MyBatis配置文件"><a href="#mybatis-config-xml-MyBatis配置文件" class="headerlink" title="mybatis-config.xml MyBatis配置文件"></a>mybatis-config.xml MyBatis配置文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可以配置在Java属性配置文件 *.properties 中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可以配置键值对属性在这里而不用配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打印查询语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 局部的PARTIAL 禁止自动匹配NONE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;FULL&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为Java类型命名一个别名 alias 用于 mappers.xml 的 resultType 直接调用 不用写全限定类名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为一个Java类型命名一个别名--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;typeAlias type=&quot;&quot; alias=&quot;&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--为 com.entity 包 全部Java类型命名一个别名 别名为Java类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.entity&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--环境变量--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--事务管理器--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;simon&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--MySQL数据库--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/corp&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--映射器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--实体类映射--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/DepaMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/EmpMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/entity/PostMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Test-测试类"><a href="#Test-测试类" class="headerlink" title="Test 测试类"></a>Test 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.DepaDao;</span><br><span class="line"><span class="keyword">import</span> com.dao.EmpDao;</span><br><span class="line"><span class="keyword">import</span> com.dao.PostDao;</span><br><span class="line"><span class="keyword">import</span> com.entity.Depa;</span><br><span class="line"><span class="keyword">import</span> com.entity.Emp;</span><br><span class="line"><span class="keyword">import</span> com.entity.Post;</span><br><span class="line"><span class="keyword">import</span> com.util.MybatisUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisUtil.getSession();</span><br><span class="line">        <span class="type">DepaDao</span> <span class="variable">depaDao</span> <span class="operator">=</span> session.getMapper(DepaDao.class);</span><br><span class="line">        <span class="type">EmpDao</span> <span class="variable">empDao</span> <span class="operator">=</span> session.getMapper(EmpDao.class);</span><br><span class="line">        <span class="type">PostDao</span> <span class="variable">postDao</span> <span class="operator">=</span> session.getMapper(PostDao.class);</span><br><span class="line"></span><br><span class="line">        List&lt;Depa&gt; depaDaoAll = depaDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Depa depa : depaDaoAll) &#123;</span><br><span class="line">            System.out.println(depa);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;getByNames------三 || 四&quot;</span>);</span><br><span class="line">        List&lt;Emp&gt; byNames = empDao.getByNames(Arrays.asList(<span class="string">&quot;三&quot;</span>, <span class="string">&quot;四&quot;</span>));</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : byNames) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;mapIdName&quot;</span>, <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">&quot;mapNameList&quot;</span>, Arrays.asList(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>));</span><br><span class="line">        List&lt;Emp&gt; byIdAndNames = empDao.getByIdAndNames(map);</span><br><span class="line">        System.out.println(<span class="string">&quot;byIdAndNames------&quot;</span> + map);</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : byIdAndNames) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Emp</span> <span class="variable">simon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>();</span><br><span class="line">        simon.setId(<span class="number">1</span>);</span><br><span class="line">        simon.setEmp_name(<span class="string">&quot;Simon&quot;</span>);</span><br><span class="line">        <span class="type">Depa</span> <span class="variable">depa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Depa</span>();</span><br><span class="line">        depa.setId(<span class="number">1</span>);</span><br><span class="line">        simon.setDepa_id(depa);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == empDao.saveOrUpdate(simon))</span><br><span class="line">            System.out.println(<span class="string">&quot;saveOrUpdate-----false&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(<span class="string">&quot;saveOrUpdate-----true&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">del</span> <span class="operator">=</span> empDao.del(<span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">2</span>, <span class="number">3</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == del)</span><br><span class="line">            System.out.println(<span class="string">&quot;del-----false&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(<span class="string">&quot;del-----true&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;del-----&quot;</span> + del);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Emp&gt; empDaoAll = empDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Emp emp : empDaoAll) &#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Post&gt; postDaoAll = postDao.getAll();</span><br><span class="line">        <span class="keyword">for</span> (Post post : postDaoAll) &#123;</span><br><span class="line">            System.out.println(post);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="控制台输出结果"><a href="#控制台输出结果" class="headerlink" title="控制台输出结果"></a>控制台输出结果</h2><p><code>mybatis-config.xml</code> 配置 <code>&lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot;/&gt;</code> 控制台会打印执行的SQL语句以及得到的参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT *,e.`id` eId,d.`id` dId FROM depa d INNER JOIN emp e ON d.`id`=e.`depa_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, depa_name, id, emp_name, depa_id, eId, dId</span><br><span class="line">&lt;==        Row: 1, 销售部, 2, 李四, 1, 2, 1</span><br><span class="line">&lt;==        Row: 1, 销售部, 3, 王五, 1, 3, 1</span><br><span class="line">&lt;==        Row: 1, 销售部, 4, 赵六, 1, 4, 1</span><br><span class="line">&lt;==        Row: 2, 美工部, 1, 张三, 2, 1, 2</span><br><span class="line">&lt;==      Total: 4</span><br><span class="line">Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[Emp&#123;id=2, emp_name=&#x27;李四&#x27;, depa_id=null, posts=[]&#125;, Emp&#123;id=3, emp_name=&#x27;王五&#x27;, depa_id=null, posts=[]&#125;, Emp&#123;id=4, emp_name=&#x27;赵六&#x27;, depa_id=null, posts=[]&#125;]&#125;</span><br><span class="line">Depa&#123;id=2, depa_name=&#x27;美工部&#x27;, emps=[Emp&#123;id=1, emp_name=&#x27;张三&#x27;, depa_id=null, posts=[]&#125;]&#125;</span><br><span class="line">getByNames------三 || 四</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id` WHERE e.`emp_name` LIKE CONCAT(&#x27;%&#x27;,?,&#x27;%&#x27;) OR e.`emp_name` LIKE CONCAT(&#x27;%&#x27;,?,&#x27;%&#x27;)</span><br><span class="line">==&gt; Parameters: 三(String), 四(String)</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 1, 张三, 2, 2, 美工部, 1, 1, 1, 职员</span><br><span class="line">&lt;==        Row: 2, 李四, 1, 1, 销售部, 2, 2, 2, 主管</span><br><span class="line">&lt;==        Row: 1, 张三, 2, 2, 美工部, 1, 4, 4, 部门经理</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Emp&#123;id=1, emp_name=&#x27;张三&#x27;, depa_id=Depa&#123;id=2, depa_name=&#x27;美工部&#x27;, emps=[]&#125;, posts=[Post&#123;id=1, post_name=&#x27;职员&#x27;, emps=[]&#125;, Post&#123;id=4, post_name=&#x27;部门经理&#x27;, emps=[]&#125;]&#125;</span><br><span class="line">Emp&#123;id=2, emp_name=&#x27;李四&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[Post&#123;id=2, post_name=&#x27;主管&#x27;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id` WHERE e.`id` = ? AND e.`emp_name` IN ( ? , ? , ? )</span><br><span class="line">==&gt; Parameters: 2(Integer), 张三(String), 李四(String), 王五(String)</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 2, 李四, 1, 1, 销售部, 2, 2, 2, 主管</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line">byIdAndNames------&#123;mapIdName=2, mapNameList=[张三, 李四, 王五]&#125;</span><br><span class="line">Emp&#123;id=2, emp_name=&#x27;李四&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[Post&#123;id=2, post_name=&#x27;主管&#x27;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: UPDATE emp SET emp_name = ?, depa_id = ? where id = ?</span><br><span class="line">==&gt; Parameters: Simon(String), 1(Integer), 1(Integer)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line">saveOrUpdate-----true</span><br><span class="line">==&gt;  Preparing: DELETE FROM emp WHERE id = ? OR id = ?</span><br><span class="line">==&gt; Parameters: 2(Integer), 3(Integer)</span><br><span class="line">&lt;==    Updates: 2</span><br><span class="line">del-----true</span><br><span class="line">del-----2</span><br><span class="line">==&gt;  Preparing: SELECT * FROM emp e INNER JOIN depa d ON d.`id`=e.`depa_id` INNER JOIN emp_post ep ON ep.`emp_id`=e.`id` INNER JOIN post p ON p.`id`=ep.`post_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, emp_name, depa_id, id, depa_name, emp_id, post_id, id, post_name</span><br><span class="line">&lt;==        Row: 1, Simon, 1, 1, 销售部, 1, 1, 1, 职员</span><br><span class="line">&lt;==        Row: 4, 赵六, 1, 1, 销售部, 4, 4, 4, 部门经理</span><br><span class="line">&lt;==        Row: 1, Simon, 1, 1, 销售部, 1, 4, 4, 部门经理</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Emp&#123;id=1, emp_name=&#x27;Simon&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[Post&#123;id=1, post_name=&#x27;职员&#x27;, emps=[]&#125;, Post&#123;id=4, post_name=&#x27;部门经理&#x27;, emps=[]&#125;]&#125;</span><br><span class="line">Emp&#123;id=4, emp_name=&#x27;赵六&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[Post&#123;id=4, post_name=&#x27;部门经理&#x27;, emps=[]&#125;]&#125;</span><br><span class="line">==&gt;  Preparing: SELECT * FROM post p INNER JOIN emp_post ep ON ep.`post_id`=p.`id` INNER JOIN emp e ON e.`id`=ep.`emp_id` INNER JOIN depa d ON d.`id`=e.`depa_id`</span><br><span class="line">==&gt; Parameters:</span><br><span class="line">&lt;==    Columns: id, post_name, emp_id, post_id, id, emp_name, depa_id, id, depa_name</span><br><span class="line">&lt;==        Row: 1, 职员, 1, 1, 1, Simon, 1, 1, 销售部</span><br><span class="line">&lt;==        Row: 4, 部门经理, 4, 4, 4, 赵六, 1, 1, 销售部</span><br><span class="line">&lt;==        Row: 4, 部门经理, 1, 4, 1, Simon, 1, 1, 销售部</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Post&#123;id=1, post_name=&#x27;职员&#x27;, emps=[Emp&#123;id=1, emp_name=&#x27;Simon&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[]&#125;]&#125;</span><br><span class="line">Post&#123;id=4, post_name=&#x27;部门经理&#x27;, emps=[Emp&#123;id=4, emp_name=&#x27;赵六&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[]&#125;, Emp&#123;id=1, emp_name=&#x27;Simon&#x27;, depa_id=Depa&#123;id=1, depa_name=&#x27;销售部&#x27;, emps=[]&#125;, posts=[]&#125;]&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mybatis</category>
        <category>xml</category>
        <category>映射配置</category>
        <category>动态SQL</category>
      </categories>
      <tags>
        <tag>idea</tag>
        <tag>mysql</tag>
        <tag>多对多</tag>
        <tag>一对多</tag>
        <tag>多对一</tag>
        <tag>mybatis</tag>
        <tag>一对一</tag>
        <tag>动态SQL</tag>
        <tag>映射配置</tag>
      </tags>
  </entry>
  <entry>
    <title>spring 控制反转（IOC）与 面向切面编程 （AOP）示例</title>
    <url>/2018/05/16/spring-%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC%EF%BC%88IOC%EF%BC%89%E4%B8%8E-%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B-%EF%BC%88AOP%EF%BC%89%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="spring-（由Rod-Johnson创建的一个开源框架）"><a href="#spring-（由Rod-Johnson创建的一个开源框架）" class="headerlink" title="spring （由Rod Johnson创建的一个开源框架）"></a><a href="https://baike.baidu.com/item/spring">spring</a> （由Rod Johnson创建的一个开源框架）</h2><p>Spring是一个开放源代码的设计层面框架，他解决的是业务逻辑层和其他各层的松耦合问题，因此它将面向接口的编程思想贯穿整个系统应用。Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson创建。简单来说，Spring是一个分层的JavaSE&#x2F;EE full-stack(一站式) 轻量级开源框架。</p>
<span id="more"></span>

<h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.14.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="UserDao-接口类"><a href="#UserDao-接口类" class="headerlink" title="UserDao 接口类"></a>UserDao 接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    User <span class="title function_">queryUser</span><span class="params">(String userName)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="UserService-接口类"><a href="#UserService-接口类" class="headerlink" title="UserService 接口类"></a>UserService 接口类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    User <span class="title function_">queryUser</span><span class="params">(String userName)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="ApplicationContextUtil-工具类"><a href="#ApplicationContextUtil-工具类" class="headerlink" title="ApplicationContextUtil 工具类"></a>ApplicationContextUtil 工具类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationContextUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ClassPathXmlApplicationContext context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        context = <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContextAop.xml&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="XML方式配置"><a href="#XML方式配置" class="headerlink" title="XML方式配置"></a>XML方式配置</h2><h3 id="applicationContextAop-xml"><a href="#applicationContextAop-xml" class="headerlink" title="applicationContextAop.xml"></a>applicationContextAop.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--setter 设值注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;peter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Peter&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Peter-info&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--构造方法 构造注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;simon&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Simon&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Simon-info&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--setter p命名空间注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">p:info</span>=<span class="string">&quot;admin-info&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userLog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.log.UserLog&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义切入点 expression 值 必须写到 execution() 里面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;point&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.pojo..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointAll&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* *.*(..))&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;userLog&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--method 指定 com.log.UserLog 里面的方法  pointcut-ref 为上面的定义切入点--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--前置增强--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--后置增强--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;returning&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span> <span class="attr">returning</span>=<span class="string">&quot;result&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--环绕增强--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;around&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--最终增强--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;point&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--异常抛出增强--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;throwing&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointAll&quot;</span> <span class="attr">throwing</span>=<span class="string">&quot;e&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.service.impl.UserServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;userServlet&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.servlet.UserServlet&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userService&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="UserLog-面向切面编程-（AOP）类"><a href="#UserLog-面向切面编程-（AOP）类" class="headerlink" title="UserLog 面向切面编程 （AOP）类"></a>UserLog 面向切面编程 （AOP）类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLog</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用前置增强 &quot;</span> + joinPoint.getTarget() + <span class="string">&quot; 的 &quot;</span> + joinPoint.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法入参: &quot;</span> + Arrays.toString(joinPoint.getArgs()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returning</span><span class="params">(JoinPoint joinPoint, Object result)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用后置增强 &quot;</span> + joinPoint.getTarget() + <span class="string">&quot; 的 &quot;</span> + joinPoint.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法返回值: &quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用环绕增强 &quot;</span> + pjp.getTarget() + <span class="string">&quot; 的 &quot;</span> + pjp.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法入参: &quot;</span> + Arrays.toString(pjp.getArgs()));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        异常必须抛出,不然异常抛出增强进不去</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> pjp.proceed();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;调用环绕增强 &quot;</span> + pjp.getTarget() + <span class="string">&quot; 的 &quot;</span> + pjp.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法返回值: &quot;</span> + proceed);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> proceed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用最终增强 &quot;</span> + joinPoint.getSignature().getName() + <span class="string">&quot; 方法结束执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常抛出增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">throwing</span><span class="params">(JoinPoint joinPoint, Exception e)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用异常抛出增强 &quot;</span> + joinPoint.getSignature().getName() + <span class="string">&quot; 方法发生异常: &quot;</span> + e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserDaoImpl-实现类"><a href="#UserDaoImpl-实现类" class="headerlink" title="UserDaoImpl 实现类"></a>UserDaoImpl 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.util.ApplicationContextUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">queryUser</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ApplicationContextUtil.context.getBean(userName, User.class);</span><br><span class="line">        user.print();</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserServiceImpl-实现类"><a href="#UserServiceImpl-实现类" class="headerlink" title="UserServiceImpl 实现类"></a>UserServiceImpl 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">queryUser</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (userName == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;自定义异常触发&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> userDao.queryUser(userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供设置UserDao的setter方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserServlet-实现类"><a href="#UserServlet-实现类" class="headerlink" title="UserServlet 实现类"></a>UserServlet 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        userService.queryUser(userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供设置UserService的setter方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserService userService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="注解方式配置"><a href="#注解方式配置" class="headerlink" title="注解方式配置"></a>注解方式配置</h2><h3 id="applicationContextAop-xml-1"><a href="#applicationContextAop-xml-1" class="headerlink" title="applicationContextAop.xml"></a>applicationContextAop.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--setter 设值注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;peter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Peter&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Peter-info&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--构造方法 构造注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;simon&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Simon&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Simon-info&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--setter p命名空间注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">p:info</span>=<span class="string">&quot;admin-info&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描哪个包的注解--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--面向切面编程 （AOP）使用注解增强处理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="UserLog-面向切面编程-（AOP）类-1"><a href="#UserLog-面向切面编程-（AOP）类-1" class="headerlink" title="UserLog 面向切面编程 （AOP）类"></a>UserLog 面向切面编程 （AOP）类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLog</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;execution(* com.pojo..*.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用前置增强 &quot;</span> + joinPoint.getTarget() + <span class="string">&quot; 的 &quot;</span> + joinPoint.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法入参: &quot;</span> + Arrays.toString(joinPoint.getArgs()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 后置增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;execution(* com.pojo..*.*(..))&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returning</span><span class="params">(JoinPoint joinPoint, Object result)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用后置增强 &quot;</span> + joinPoint.getTarget() + <span class="string">&quot; 的 &quot;</span> + joinPoint.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法返回值: &quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(value = &quot;execution(* com.pojo..*.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint pjp)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用环绕增强 &quot;</span> + pjp.getTarget() + <span class="string">&quot; 的 &quot;</span> + pjp.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法入参: &quot;</span> + Arrays.toString(pjp.getArgs()));</span><br><span class="line"></span><br><span class="line"><span class="comment">//        异常必须抛出,不然异常抛出增强进不去</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> pjp.proceed();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;调用环绕增强 &quot;</span> + pjp.getTarget() + <span class="string">&quot; 的 &quot;</span> + pjp.getSignature().</span><br><span class="line">                getName() + <span class="string">&quot; 方法。方法返回值: &quot;</span> + proceed);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> proceed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最终增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@After(value = &quot;execution(* com.pojo..*.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用最终增强 &quot;</span> + joinPoint.getSignature().getName() + <span class="string">&quot; 方法结束执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常抛出增强</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;execution(* *.*(..))&quot;, throwing = &quot;e&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">throwing</span><span class="params">(JoinPoint joinPoint, Exception e)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用异常抛出增强 &quot;</span> + joinPoint.getSignature().getName() + <span class="string">&quot; 方法发生异常: &quot;</span> + e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserDaoImpl-实现类-1"><a href="#UserDaoImpl-实现类-1" class="headerlink" title="UserDaoImpl 实现类"></a>UserDaoImpl 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.util.ApplicationContextUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component(&quot;userDao&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Repository 等同 Component</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository(&quot;userDao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">queryUser</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ApplicationContextUtil.context.getBean(userName, User.class);</span><br><span class="line">        user.print();</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserServiceImpl-实现类-1"><a href="#UserServiceImpl-实现类-1" class="headerlink" title="UserServiceImpl 实现类"></a>UserServiceImpl 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component(&quot;userService&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Service 等同 Component</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    @Qualifier(&quot;userDao&quot;)</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Resource 等同 Autowired 与 Qualifier 的结合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Resource(name = &quot;userDao&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">queryUser</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (userName == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;自定义异常触发&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> userDao.queryUser(userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供设置UserDao的setter方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserServlet-实现类-1"><a href="#UserServlet-实现类-1" class="headerlink" title="UserServlet 实现类"></a>UserServlet 实现类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Component(&quot;userServlet&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Controller 控制层等同Component</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller(&quot;userServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServlet</span> &#123;</span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    @Qualifier(&quot;userService&quot;)</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Resource 不给值会自动匹配去找类型一致的UserService 等同 Autowired 与 Qualifier 的结合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        userService.queryUser(userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供设置UserService的setter方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserService userService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="User-实体类"><a href="#User-实体类" class="headerlink" title="User 实体类"></a>User 实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String info;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String name, String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, info=&#x27;&quot;</span> + info + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Runtime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;禁止输出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setInfo</span><span class="params">(String info)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="main-测试类"><a href="#main-测试类" class="headerlink" title="main 测试类"></a>main 测试类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.servlet.UserServlet;</span><br><span class="line"><span class="keyword">import</span> com.util.ApplicationContextUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">UserServlet</span> <span class="variable">userServlet</span> <span class="operator">=</span> ApplicationContextUtil.context.getBean(<span class="string">&quot;userServlet&quot;</span>, UserServlet.class);</span><br><span class="line">        System.out.println(<span class="string">&quot;控制反转（IOC）输出测试--------------------------------------------&quot;</span>);</span><br><span class="line">        userServlet.doGet(<span class="string">&quot;simon&quot;</span>);</span><br><span class="line">        userServlet.doGet(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        userServlet.doGet(<span class="string">&quot;peter&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;面向切面编程（AOP）测试--------------------------------------------&quot;</span>);</span><br><span class="line">        userServlet.doGet(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;面向切面编程（AOP）异常抛出增强测试----------------------------------&quot;</span>);</span><br><span class="line">        userServlet.doGet(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="XML方式配置-控制台输出"><a href="#XML方式配置-控制台输出" class="headerlink" title="XML方式配置 控制台输出"></a>XML方式配置 控制台输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">控制反转（IOC）输出测试--------------------------------------------</span><br><span class="line">调用前置增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125;</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用后置增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用前置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125;</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用后置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用前置增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125;</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用后置增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">面向切面编程（AOP）测试--------------------------------------------</span><br><span class="line">调用前置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125;</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用后置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">面向切面编程（AOP）异常抛出增强测试----------------------------------</span><br><span class="line">调用异常抛出增强 queryUser 方法发生异常: java.lang.RuntimeException: 自定义异常触发</span><br><span class="line">调用异常抛出增强 doGet 方法发生异常: java.lang.RuntimeException: 自定义异常触发</span><br></pre></td></tr></table></figure>

<h2 id="注解方式配置-控制台输出"><a href="#注解方式配置-控制台输出" class="headerlink" title="注解方式配置 控制台输出"></a>注解方式配置 控制台输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">控制反转（IOC）输出测试--------------------------------------------</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用前置增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125;</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用后置增强 User&#123;name=&#x27;Simon&#x27;, info=&#x27;Simon-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用前置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125;</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用后置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用前置增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125;</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用后置增强 User&#123;name=&#x27;Peter&#x27;, info=&#x27;Peter-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">面向切面编程（AOP）测试--------------------------------------------</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">调用前置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法入参: []</span><br><span class="line">User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125;</span><br><span class="line">调用环绕增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">调用最终增强 print 方法结束执行</span><br><span class="line">调用后置增强 User&#123;name=&#x27;admin&#x27;, info=&#x27;admin-info&#x27;&#125; 的 print 方法。方法返回值: null</span><br><span class="line">面向切面编程（AOP）异常抛出增强测试----------------------------------</span><br><span class="line">调用异常抛出增强 queryUser 方法发生异常: java.lang.RuntimeException: 自定义异常触发</span><br><span class="line">调用异常抛出增强 doGet 方法发生异常: java.lang.RuntimeException: 自定义异常触发</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>spring</category>
        <category>配置</category>
      </categories>
      <tags>
        <tag>xml</tag>
        <tag>spring</tag>
        <tag>控制反转</tag>
        <tag>面向切面编程</tag>
        <tag>IOC</tag>
        <tag>AOP</tag>
        <tag>注解</tag>
      </tags>
  </entry>
  <entry>
    <title>springMVC REST风格 以及 利用ajax返回JSON数据 中文乱码 返回方式 SSM框架示例</title>
    <url>/2018/07/26/springMVC-REST%E9%A3%8E%E6%A0%BC-%E4%BB%A5%E5%8F%8A-%E5%88%A9%E7%94%A8ajax%E8%BF%94%E5%9B%9EJSON%E6%95%B0%E6%8D%AE-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81-%E8%BF%94%E5%9B%9E%E6%96%B9%E5%BC%8F-SSM%E6%A1%86%E6%9E%B6%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="springMVC"><a href="#springMVC" class="headerlink" title="springMVC"></a>springMVC</h2><p>属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的SpringMVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts2(一般老项目使用)等。</p>
<span id="more"></span>

<h3 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SSM-school<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SSM-school<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring AOP就是用aspectj来实现的，是依赖关系--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- spring-webmvc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--事务--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--初始化会话工厂--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis框架--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis与spring对接的jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql 数据库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.44<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JSP 标准标签库 (JSTL)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--json转换工具包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> `school`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE `school`;</span><br><span class="line"></span><br><span class="line">USE `school`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `classes`(</span><br><span class="line">	`id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">	`name` <span class="type">VARCHAR</span>(<span class="number">50</span>)</span><br><span class="line">)CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">	`name` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`age` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`gender` <span class="type">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`telephone` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`email` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">	`classId` <span class="type">INT</span></span><br><span class="line">)CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> classes <span class="keyword">VALUES</span>(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;one&#x27;</span>),(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;two&#x27;</span>),(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;three&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">14</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;10086&#x27;</span>,<span class="string">&#x27;admin@icloud.com&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">15</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;10086&#x27;</span>,<span class="string">&#x27;admin@icloud.com&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student <span class="keyword">VALUES</span>(<span class="keyword">DEFAULT</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">16</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;10086&#x27;</span>,<span class="string">&#x27;admin@icloud.com&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `classes`;</span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="operator">*</span>,c.`id` <span class="string">&#x27;classes.id&#x27;</span>,c.`name` <span class="string">&#x27;classes.name&#x27;</span> <span class="keyword">FROM</span> `student` s,`classes` c <span class="keyword">WHERE</span> s.`classId`<span class="operator">=</span>c.`id`;</span><br></pre></td></tr></table></figure>

<h3 id="database-properties-数据库配置文件"><a href="#database-properties-数据库配置文件" class="headerlink" title="database.properties 数据库配置文件"></a>database.properties 数据库配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db_url=jdbc:mysql://localhost:3306/school</span><br><span class="line">db_driver=com.mysql.jdbc.Driver</span><br><span class="line">db_username=root</span><br><span class="line">db_password=simon</span><br></pre></td></tr></table></figure>

<h3 id="实体类-pojo"><a href="#实体类-pojo" class="headerlink" title="实体类 pojo"></a>实体类 pojo</h3><h4 id="Student-学生类"><a href="#Student-学生类" class="headerlink" title="Student 学生类"></a>Student 学生类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> String telephone;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Classes classes;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter和setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Classes-年级类"><a href="#Classes-年级类" class="headerlink" title="Classes 年级类"></a>Classes 年级类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Classes</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//省略getter和setter</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="DAO层"><a href="#DAO层" class="headerlink" title="DAO层"></a>DAO层</h3><h4 id="StudentDao-DAO层"><a href="#StudentDao-DAO层" class="headerlink" title="StudentDao DAO层"></a>StudentDao DAO层</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StudentDao</span> &#123;</span><br><span class="line">    List&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    Student <span class="title function_">getStudent</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    Integer <span class="title function_">addStudent</span><span class="params">(Student student)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ClassesDao-DAO层"><a href="#ClassesDao-DAO层" class="headerlink" title="ClassesDao DAO层"></a>ClassesDao DAO层</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.Classes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ClassesDao</span> &#123;</span><br><span class="line">    List&lt;Classes&gt; <span class="title function_">getClasses</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h3><h4 id="ClassesBiz"><a href="#ClassesBiz" class="headerlink" title="ClassesBiz"></a>ClassesBiz</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.biz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.Classes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ClassesBiz</span> &#123;</span><br><span class="line">    List&lt;Classes&gt; <span class="title function_">getClasses</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="StudentBiz"><a href="#StudentBiz" class="headerlink" title="StudentBiz"></a>StudentBiz</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.biz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StudentBiz</span> &#123;</span><br><span class="line">    List&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    Student <span class="title function_">getStudent</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    Integer <span class="title function_">addStudent</span><span class="params">(Student student)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="serviceImpl实现层"><a href="#serviceImpl实现层" class="headerlink" title="serviceImpl实现层"></a>serviceImpl实现层</h3><h4 id="ClassesBizImpl"><a href="#ClassesBizImpl" class="headerlink" title="ClassesBizImpl"></a>ClassesBizImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.biz.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.biz.ClassesBiz;</span><br><span class="line"><span class="keyword">import</span> com.dao.ClassesDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.Classes;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClassesBizImpl</span> <span class="keyword">implements</span> <span class="title class_">ClassesBiz</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ClassesDao classesDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Classes&gt; <span class="title function_">getClasses</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> classesDao.getClasses();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="StudentBizImpl"><a href="#StudentBizImpl" class="headerlink" title="StudentBizImpl"></a>StudentBizImpl</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.biz.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.biz.StudentBiz;</span><br><span class="line"><span class="keyword">import</span> com.dao.StudentDao;</span><br><span class="line"><span class="keyword">import</span> com.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentBizImpl</span> <span class="keyword">implements</span> <span class="title class_">StudentBiz</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StudentDao studentDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentDao.getStudents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Student <span class="title function_">getStudent</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentDao.getStudent(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">addStudent</span><span class="params">(Student student)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> studentDao.addStudent(student);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="servlet层"><a href="#servlet层" class="headerlink" title="servlet层"></a>servlet层</h3><h4 id="StudentController"><a href="#StudentController" class="headerlink" title="StudentController"></a>StudentController</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.biz.ClassesBiz;</span><br><span class="line"><span class="keyword">import</span> com.biz.StudentBiz;</span><br><span class="line"><span class="keyword">import</span> com.pojo.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StudentBiz studentBiz;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ClassesBiz classesBiz;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/showStudents&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">showStudents</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;students&quot;</span>, studentBiz.getStudents());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/toAdd&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">toAdd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;classes&quot;</span>, classesBiz.getClasses());</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/addStudent&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addStudent</span><span class="params">(Student student, Model model)</span> &#123;</span><br><span class="line">        studentBiz.addStudent(student);</span><br><span class="line">        <span class="keyword">return</span> showStudents(model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * rest风格</span></span><br><span class="line"><span class="comment">     * 原地址栏 /view?id=7</span></span><br><span class="line"><span class="comment">     * rest风格 /view/7</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/view/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">view</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">        modelAndView.addObject(<span class="string">&quot;student&quot;</span>, student);</span><br><span class="line">        modelAndView.setViewName(<span class="string">&quot;view&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//局部编码格式配置 produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;</span></span><br><span class="line">    <span class="comment">//springMVC.xml JSON全局编码格式已设置</span></span><br><span class="line">    <span class="comment">//@ResponseBody 返回JSON注解</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/stringJson/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">stringJson</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">        <span class="keyword">return</span> JSON.toJSONString(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//局部编码格式配置 produces = &#123;&quot;application/json;charset=UTF-8&quot;&#125;</span></span><br><span class="line">    <span class="comment">//springMVC.xml JSON全局编码格式已设置</span></span><br><span class="line">    <span class="comment">//@ResponseBody 返回JSON注解</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/objectJson/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">objectJson</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentBiz.getStudent(id);</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="mybatis-config-xml-mybatis配置文件"><a href="#mybatis-config-xml-mybatis配置文件" class="headerlink" title="mybatis-config.xml mybatis配置文件"></a>mybatis-config.xml mybatis配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打印查询语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--达到 自动映射行为 : 全部FULL 局部的PARTIAL 禁止自动匹配NONE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;autoMappingBehavior&quot;</span> <span class="attr">value</span>=<span class="string">&quot;FULL&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="XXXMapper配置文件"><a href="#XXXMapper配置文件" class="headerlink" title="XXXMapper配置文件"></a>XXXMapper配置文件</h3><h4 id="ClassesMapper-xml"><a href="#ClassesMapper-xml" class="headerlink" title="ClassesMapper.xml"></a>ClassesMapper.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.ClassesDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getClasses&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Classes&quot;</span>&gt;</span></span><br><span class="line">        select * from classes</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="StudentMapper-xml"><a href="#StudentMapper-xml" class="headerlink" title="StudentMapper.xml"></a>StudentMapper.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.dao.StudentDao&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudents&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        SELECT s.*,c.`id` &#x27;classes.id&#x27;,c.`name` &#x27;classes.name&#x27;</span><br><span class="line">        FROM `student` s,`classes` c</span><br><span class="line">        WHERE s.`classId`=c.`id`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addStudent&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO student</span><br><span class="line">        VALUES(DEFAULT,#&#123;name&#125;,#&#123;age&#125;,#&#123;gender&#125;,#&#123;telephone&#125;,#&#123;email&#125;,#&#123;classes.id&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        SELECT s.*,c.`id` &#x27;classes.id&#x27;,c.`name` &#x27;classes.name&#x27;</span><br><span class="line">        FROM `student` s,`classes` c</span><br><span class="line">        WHERE s.`classId`=c.`id` and s.id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="springMVC-xml-springMVC配置文件"><a href="#springMVC-xml-springMVC配置文件" class="headerlink" title="springMVC.xml springMVC配置文件"></a>springMVC.xml springMVC配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">default-autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--扫描注解的Bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.controller,com.biz&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--begin  该事务声明在 application-context.xml 没有任何效果--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明式事务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span> <span class="attr">name</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明式事务管理--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--已配置 default-autowire=&quot;byName&quot; 根据名字自动注入 可不配置属性 transaction-manager=&quot;transactionManager&quot;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置拦截属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务，如果当前没有事务，就新建一个事务。--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add*&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;del*&quot;</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--配置 get前缀的方法 只读并不支持--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;NOT_SUPPORTED&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置面向切面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--声明一个切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.biz..*.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--定义切面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;interceptor&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--end  该事务声明在 application-context.xml 没有任何效果--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--内部资源视图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使 @Controller 注解生效--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使 @ResponseBody 返回 object 时 利用 alibaba.fastjson 工具 转换--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--解决springmvc返回的json中文问题  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--解决springMVC返回的json为object 时进行转换--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;supportedMediaTypes&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置静态文件资源的访问--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--否则 WEB-INF 下的 css 等资源文件访问不到--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/css/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/WEB-INF/css/&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="application-context-xml-spring-配置文件"><a href="#application-context-xml-spring-配置文件" class="headerlink" title="application-context.xml spring 配置文件"></a>application-context.xml spring 配置文件</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">default-autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--default-autowire 配置默认自动注入--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载数据库配置文件 database.properties--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;location&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:database.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数据源配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--scope 作用域、生存空间 singleton 单例--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;db_url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;db_driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;db_username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;db_password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置最大连接池数量--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;maxActive&quot; value=&quot;20&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置获取连接等待超时的时间 单位/毫秒--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;property name=&quot;maxWait&quot; value=&quot;60000&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置会话工厂--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sessionFactory&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--已配置 default-autowire=&quot;byName&quot; 通过名字自动匹配 可以忽略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定类型别名包 XXXMapper.xml 使用--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.pojo&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置映射器位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/mapping/xml/*.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定外部配置文件位置 (控制台显示SQL语句)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Mapper扫描器配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描所有的dao接口--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.dao&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--会话工厂Bean名 默认找键值 sqlSessionFactory 的map --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--所以不用 ref 用value 且会话工厂名字定义为 sessionFactory 因此要多此配置--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--会话工厂配置 name 为 sqlSessionFactory 则不需要配置 sqlSessionFactoryBeanName--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">&quot;2.4&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载spring配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:application-context.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置监听 (加载spring配置没效果)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--配置spring 作用域可以使用 request 和 session 值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.request.RequestContextListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--加载springMVC--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置加载的springMVC.xml 默认为 servlet-name 的值 XXX-servlet.xml--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--DispatcherServlet-servlet.xml--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置springMVC加载顺序--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--防止中文乱码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="jsp页面"><a href="#jsp页面" class="headerlink" title="jsp页面"></a>jsp页面</h3><h4 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0; url=showStudents&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="list-jsp-学生列表页面"><a href="#list-jsp-学生列表页面" class="headerlink" title="list.jsp 学生列表页面"></a>list.jsp 学生列表页面</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;toAdd&quot;</span>&gt;</span>添加学员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>JSON<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;students&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/view/$&#123;student.id&#125;&quot;</span>&gt;</span>$&#123;student.name&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.gender&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.telephone&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.email&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.classes.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/stringJson/$&#123;student.id&#125;&quot;</span>&gt;</span>stringJson<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/objectJson/$&#123;student.id&#125;&quot;</span>&gt;</span>objectJson<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="add-jsp-新增学生页面"><a href="#add-jsp-新增学生页面" class="headerlink" title="add.jsp 新增学生页面"></a>add.jsp 新增学生页面</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;addStudent&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;telephone&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;classes.id&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;classes&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;clazz.id&#125;&quot;</span>&gt;</span>$&#123;clazz.name&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;增加&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="view-jsp-学生详情页面"><a href="#view-jsp-学生详情页面" class="headerlink" title="view.jsp 学生详情页面"></a>view.jsp 学生详情页面</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>email<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.gender&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.age&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.telephone&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.email&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.classes.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="示例下载-密码-sfgt"><a href="#示例下载-密码-sfgt" class="headerlink" title="示例下载 密码: sfgt"></a><a href="https://pan.baidu.com/s/12cM8OFyyiGikDVpJ1SJgcQ">示例下载</a> 密码: sfgt</h3>]]></content>
      <categories>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>springMVC</tag>
        <tag>maven</tag>
        <tag>mybatis</tag>
        <tag>JSON</tag>
        <tag>ajax</tag>
        <tag>spring</tag>
        <tag>REST风格</tag>
        <tag>中文乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>微信提现-企业付款到零钱</title>
    <url>/2019/05/17/%E5%BE%AE%E4%BF%A1%E6%8F%90%E7%8E%B0-%E4%BC%81%E4%B8%9A%E4%BB%98%E6%AC%BE%E5%88%B0%E9%9B%B6%E9%92%B1/</url>
    <content><![CDATA[<h1 id="微信提现-企业付款到零钱"><a href="#微信提现-企业付款到零钱" class="headerlink" title="微信提现-企业付款到零钱"></a>微信提现-企业付款到零钱</h1><h2 id="p12证书下载"><a href="#p12证书下载" class="headerlink" title="p12证书下载"></a>p12证书下载</h2><ul>
<li><p><a href="https://pay.weixin.qq.com/wiki/doc/api/tools/mch_pay.php?chapter=14_1">企业付款到零钱API</a></p>
</li>
<li><p><a href="https://pay.weixin.qq.com/">apiclient_cert.p12证书:微信商户平台 – 账户设置 – API安全 – 证书中下载</a></p>
</li>
</ul>
<span id="more"></span>

<h2 id="开发环境-x2F-参数准备"><a href="#开发环境-x2F-参数准备" class="headerlink" title="开发环境&#x2F;参数准备"></a>开发环境&#x2F;参数准备</h2><ul>
<li><p>SpringBoot2.0框架 （仅限本例，其他框架自行解决，原理相同）</p>
</li>
<li><p>APP_ID （公众账号appid）</p>
</li>
<li><p>MCH_ID（商户号）</p>
</li>
<li><p>API_SECRET（API密钥）</p>
</li>
</ul>
<h2 id="pom-xml相关jar包-x2F-插件引入"><a href="#pom-xml相关jar包-x2F-插件引入" class="headerlink" title="pom.xml相关jar包&#x2F;插件引入"></a>pom.xml相关jar包&#x2F;插件引入</h2><ul>
<li><p>xml相关jar包引入（微信接口要求以xml格式传参）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- xml --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.kxml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kxml2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>xmlpull<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xmlpull<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>maven过滤证书转码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 过滤后缀为p12/crt/pem/pfx不需要转码的证书文件 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>p12<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>crt<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>pem<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>pfx<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>将下载好的证书放在 <code>src/main/resources</code></p>
</li>
</ul>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ul>
<li>HttpUtils（企业付款http请求工具）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero.aliatry.utils.withdrawal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.SSLContexts;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyStore;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 企业付款http请求工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">CONNECT_TIME_OUT</span> <span class="operator">=</span> <span class="number">5000</span>; <span class="comment">//链接超时时间3秒</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">RequestConfig</span> <span class="variable">REQUEST_CONFIG</span> <span class="operator">=</span> RequestConfig.custom().setConnectTimeout(CONNECT_TIME_OUT).build();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SSLContext</span> <span class="variable">wx_ssl_context</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">//微信支付ssl证书</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MCH_ID</span>  <span class="operator">=</span> <span class="string">&quot;1000000000&quot;</span>;<span class="comment">//证书密码默认是商户号</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="type">Resource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;apiclient_cert.p12&quot;</span>);<span class="comment">//该证书名字最好改为别人猜不到的</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">KeyStore</span> <span class="variable">keystore</span> <span class="operator">=</span> KeyStore.getInstance(<span class="string">&quot;PKCS12&quot;</span>);</span><br><span class="line">			<span class="type">char</span>[] keyPassword = MCH_ID.toCharArray(); <span class="comment">//证书密码</span></span><br><span class="line">			keystore.load(resource.getInputStream(), keyPassword);</span><br><span class="line">			wx_ssl_context = SSLContexts.custom().loadKeyMaterial(keystore, keyPassword).build();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: get 请求</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params 参数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> headers headers参数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String url, Map&lt;String, String&gt; params, Map&lt;String, String&gt; headers)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; !params.isEmpty()) &#123;</span><br><span class="line">			<span class="type">StringBuffer</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">			<span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">// 是否开始</span></span><br><span class="line">			<span class="keyword">for</span> (Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</span><br><span class="line">				<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">					param.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">					flag = <span class="literal">false</span>;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					param.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				param.append(entry.getKey()).append(<span class="string">&quot;=&quot;</span>);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					param.append(URLEncoder.encode(entry.getValue(), DEFAULT_CHARSET));</span><br><span class="line">				&#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">					<span class="comment">//编码失败</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			url += param.toString();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			httpClient = HttpClients.custom().setDefaultRequestConfig(REQUEST_CONFIG).build();</span><br><span class="line">			<span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">			response = httpClient.execute(httpGet);</span><br><span class="line">			body = EntityUtils.toString(response.getEntity(), DEFAULT_CHARSET);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					response.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (httpClient != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					httpClient.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> body;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: get 请求</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String url)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> get(url, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: get 请求</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params 参数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> get(url, params, <span class="literal">null</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: post 请求</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params 参数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">post</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> &#123;</span><br><span class="line">		<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">		List&lt;NameValuePair&gt; nameValuePairs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">		<span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; !params.isEmpty()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</span><br><span class="line">				nameValuePairs.add(<span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(entry.getKey(), entry.getValue()));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			httpClient = HttpClients.custom().setDefaultRequestConfig(REQUEST_CONFIG).build();</span><br><span class="line">			httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(nameValuePairs, DEFAULT_CHARSET));</span><br><span class="line">			response = httpClient.execute(httpPost);</span><br><span class="line">			body = EntityUtils.toString(response.getEntity(), DEFAULT_CHARSET);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					response.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (httpClient != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					httpClient.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> body;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: post 请求</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> s 参数xml</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">post</span><span class="params">(String url, String s)</span> &#123;</span><br><span class="line">		<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">		<span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			httpClient = HttpClients.custom().setDefaultRequestConfig(REQUEST_CONFIG).build();</span><br><span class="line">			httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(s, DEFAULT_CHARSET));</span><br><span class="line">			response = httpClient.execute(httpPost);</span><br><span class="line">			body = EntityUtils.toString(response.getEntity(), DEFAULT_CHARSET);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					response.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (httpClient != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					httpClient.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> body;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: post https请求，服务器双向证书验证</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params 参数</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	 <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">posts</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> &#123;</span><br><span class="line">		<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">		List&lt;NameValuePair&gt; nameValuePairs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">		<span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; !params.isEmpty()) &#123;</span><br><span class="line">			<span class="keyword">for</span> (Entry&lt;String, String&gt; entry : params.entrySet()) &#123;</span><br><span class="line">				nameValuePairs.add(<span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(entry.getKey(), entry.getValue()));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			httpClient = HttpClients.custom().setDefaultRequestConfig(REQUEST_CONFIG).setSSLSocketFactory(getSSLConnectionSocket()).build();</span><br><span class="line">			httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(nameValuePairs, DEFAULT_CHARSET));</span><br><span class="line">			response = httpClient.execute(httpPost);</span><br><span class="line">			body = EntityUtils.toString(response.getEntity(), DEFAULT_CHARSET);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					response.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (httpClient != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					httpClient.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> body;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@description</span> 功能描述: post https请求，服务器双向证书验证</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> s 参数xml</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 请求失败返回null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">posts</span><span class="params">(String url, String s)</span> &#123;</span><br><span class="line">		<span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">		<span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			httpClient = HttpClients.custom().setDefaultRequestConfig(REQUEST_CONFIG).setSSLSocketFactory(getSSLConnectionSocket()).build();</span><br><span class="line">			httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(s, DEFAULT_CHARSET));</span><br><span class="line">			response = httpClient.execute(httpPost);</span><br><span class="line">			body = EntityUtils.toString(response.getEntity(), DEFAULT_CHARSET);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					response.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (httpClient != <span class="literal">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					httpClient.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> body;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//获取ssl connection链接</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> SSLConnectionSocketFactory <span class="title function_">getSSLConnectionSocket</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SSLConnectionSocketFactory</span>(wx_ssl_context, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;<span class="string">&quot;TLSv1&quot;</span>, <span class="string">&quot;TLSv1.1&quot;</span>, <span class="string">&quot;TLSv1.2&quot;</span>&#125;, <span class="literal">null</span>, SSLConnectionSocketFactory.getDefaultHostnameVerifier());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>XmlUtil （xml、map转换工具）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero.aliatry.utils.withdrawal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserException;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xml、map转换工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XmlUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PREFIX_XML</span> <span class="operator">=</span> <span class="string">&quot;&lt;xml&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUFFIX_XML</span> <span class="operator">=</span> <span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PREFIX_CDATA</span> <span class="operator">=</span> <span class="string">&quot;&lt;![CDATA[&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SUFFIX_CDATA</span> <span class="operator">=</span> <span class="string">&quot;]]&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 转化成xml, 单层无嵌套</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> parm</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> isAddCDATA</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">xmlFormat</span><span class="params">(Map&lt;String, String&gt; parm, <span class="type">boolean</span> isAddCDATA)</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="type">StringBuffer</span> <span class="variable">strbuff</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(PREFIX_XML);</span><br><span class="line">		<span class="keyword">if</span> (CollectionUtil.isNotEmpty(parm)) &#123;</span><br><span class="line">			<span class="keyword">for</span> (Entry&lt;String, String&gt; entry : parm.entrySet()) &#123;</span><br><span class="line">				strbuff.append(<span class="string">&quot;&lt;&quot;</span>).append(entry.getKey()).append(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span> (isAddCDATA) &#123;</span><br><span class="line">					strbuff.append(PREFIX_CDATA);</span><br><span class="line">					<span class="keyword">if</span> (StringUtil.isNotEmpty(entry.getValue())) &#123;</span><br><span class="line">						strbuff.append(entry.getValue());</span><br><span class="line">					&#125;</span><br><span class="line">					strbuff.append(SUFFIX_CDATA);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">if</span> (StringUtil.isNotEmpty(entry.getValue())) &#123;</span><br><span class="line">						strbuff.append(entry.getValue());</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				strbuff.append(<span class="string">&quot;&lt;/&quot;</span>).append(entry.getKey()).append(<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> strbuff.append(SUFFIX_XML).toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 解析xml</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> xml</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> XmlPullParserException</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title function_">xmlParse</span><span class="params">(String xml)</span> <span class="keyword">throws</span> XmlPullParserException, IOException &#123;</span><br><span class="line">		Map&lt;String, String&gt; map = <span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">if</span> (StringUtil.isNotEmpty(xml)) &#123;</span><br><span class="line">			<span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(xml.getBytes());</span><br><span class="line">			<span class="type">XmlPullParser</span> <span class="variable">pullParser</span> <span class="operator">=</span> XmlPullParserFactory.newInstance().newPullParser();</span><br><span class="line">			pullParser.setInput(inputStream, <span class="string">&quot;UTF-8&quot;</span>); <span class="comment">// 为xml设置要解析的xml数据</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">eventType</span> <span class="operator">=</span> pullParser.getEventType();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">				<span class="keyword">switch</span> (eventType) &#123;</span><br><span class="line">				<span class="keyword">case</span> XmlPullParser.START_DOCUMENT:</span><br><span class="line">					map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> XmlPullParser.START_TAG:</span><br><span class="line">					<span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> pullParser.getName();</span><br><span class="line">					<span class="keyword">if</span> (key.equals(<span class="string">&quot;xml&quot;</span>))</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					<span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> pullParser.nextText().trim();</span><br><span class="line">					map.put(key, value);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> XmlPullParser.END_TAG:</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				eventType = pullParser.next();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> map;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>PayUtil</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero.aliatry.utils.withdrawal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.ChineseCharToEnUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.DateUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.Encrypt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 生成订单号</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getTradeNo</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 自增8位数 00000001</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;TNO&quot;</span> + DateUtil.formatDate(<span class="keyword">new</span> <span class="title class_">Date</span>(), DateUtil.TIME_STAMP_PATTERN) + <span class="string">&quot;00000001&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 退款单号</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRefundNo</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 自增8位数 00000001</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;RNO&quot;</span> + DateUtil.formatDate(<span class="keyword">new</span> <span class="title class_">Date</span>(), DateUtil.TIME_STAMP_PATTERN) + <span class="string">&quot;00000001&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 退款单号</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getTransferNo</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="comment">// 自增8位数 00000001</span></span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;TNO&quot;</span> + DateUtil.formatDate(<span class="keyword">new</span> <span class="title class_">Date</span>(), DateUtil.TIME_STAMP_PATTERN) + <span class="string">&quot;00000001&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 返回客户端ip</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRemoteAddrIp</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">		<span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;X-Forwarded-For&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span> (StringUtil.isNotEmpty(ip) &amp;&amp; !<span class="string">&quot;unKnown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">			<span class="comment">// 多次反向代理后会有多个ip值，第一个ip才是真实ip</span></span><br><span class="line">			<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> ip.indexOf(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">			<span class="keyword">if</span> (index != -<span class="number">1</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> ip.substring(<span class="number">0</span>, index);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> ip;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ip = request.getHeader(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span> (StringUtil.isNotEmpty(ip) &amp;&amp; !<span class="string">&quot;unKnown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">			<span class="keyword">return</span> ip;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> request.getRemoteAddr();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取服务器的ip地址</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLocalIp</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> request.getLocalAddr();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getSign</span><span class="params">(Map&lt;String, String&gt; params, String paternerKey)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">		<span class="keyword">return</span> Encrypt.getMD5(createSign(params, <span class="literal">false</span>) + <span class="string">&quot;&amp;key=&quot;</span> + paternerKey).toUpperCase();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 构造签名</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> encode</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createSign</span><span class="params">(Map&lt;String, String&gt; params, <span class="type">boolean</span> encode)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">		Set&lt;String&gt; keysSet = params.keySet();</span><br><span class="line">		Object[] keys = keysSet.toArray();</span><br><span class="line">		Arrays.sort(keys);</span><br><span class="line">		<span class="type">StringBuffer</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">first</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span> (Object key : keys) &#123;</span><br><span class="line">			<span class="keyword">if</span> (key == <span class="literal">null</span> || StringUtil.isEmpty(params.get(key))) <span class="comment">// 参数为空不参与签名</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span> (first) &#123;</span><br><span class="line">				first = <span class="literal">false</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				temp.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			temp.append(key).append(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">			<span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> params.get(key);</span><br><span class="line">			<span class="type">String</span> <span class="variable">valueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">			<span class="keyword">if</span> (<span class="literal">null</span> != value) &#123;</span><br><span class="line">				valueStr = value.toString();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (encode) &#123;</span><br><span class="line">				temp.append(URLEncoder.encode(valueStr, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				temp.append(valueStr);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> temp.toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 创建支付随机字符串</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getNonceStr</span><span class="params">()</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> ChineseCharToEnUtil.randomString(ChineseCharToEnUtil.LETTER_NUMBER_CHAR, <span class="number">32</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 支付时间戳</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">payTimestamp</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> Long.toString(System.currentTimeMillis() / <span class="number">1000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>CollectionUtil</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero.aliatry.utils.withdrawal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集合类工具</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CollectionUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="title function_">CollectionUtil</span><span class="params">()</span> &#123;</span><br><span class="line">		<span class="built_in">super</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断一个集合是否为空</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(Collection&lt;T&gt; col)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (col == <span class="literal">null</span> || col.isEmpty()) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断一个集合是否不为空</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="type">boolean</span> <span class="title function_">isNotEmpty</span><span class="params">(Collection&lt;T&gt; col)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> !isEmpty(col);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断Map是否为空</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;K, V&gt; <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">(Map&lt;K, V&gt; map)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (map == <span class="literal">null</span> || map.isEmpty()) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 判断Map是否不为空为空</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;K, V&gt; <span class="type">boolean</span> <span class="title function_">isNotEmpty</span><span class="params">(Map&lt;K, V&gt; map)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> !isEmpty(map);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 去除list中的重复数据</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">removeRepeat</span><span class="params">(List&lt;T&gt; list)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (isEmpty(list)) &#123;</span><br><span class="line">			<span class="keyword">return</span> list;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		List&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;T&gt;();</span><br><span class="line">		<span class="keyword">for</span> (T e : list) &#123;</span><br><span class="line">			<span class="keyword">if</span> (!result.contains(e)) &#123;</span><br><span class="line">				result.add(e);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 将集合转换为String数组</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; String[] toArray(List&lt;T&gt; list) &#123;</span><br><span class="line">		<span class="keyword">if</span> (isEmpty(list)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		String[] result = <span class="keyword">new</span> <span class="title class_">String</span>[list.size()];</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">			result[i] = String.valueOf(list.get(i));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>TransferController（提现相关接口）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zero.aliatry.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.util.StringUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.entity.WithdrawalRecord;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.service.WithdrawalRecord.WithdrawalRecordService;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.service.appUser.AppUserService;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.service.sysUser.SysUserService;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.CheckParamsUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.DateUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.IpAddrUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.exception.ErrorEnum;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.exception.Result;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.exception.ResultUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.withdrawal.CollectionUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.withdrawal.HttpUtils;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.withdrawal.PayUtil;</span><br><span class="line"><span class="keyword">import</span> com.zero.aliatry.utils.withdrawal.XmlUtil;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提现相关接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/transfer&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TransferController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SysUserService sysUserService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    AppUserService appUserService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    WithdrawalRecordService withdrawalRecordService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(TransferController.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TRANSFERS_PAY</span> <span class="operator">=</span> <span class="string">&quot;https://api.mch.weixin.qq.com/mmpaymkttransfers/promotion/transfers&quot;</span>; <span class="comment">// 企业付款API</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TRANSFERS_PAY_QUERY</span> <span class="operator">=</span> <span class="string">&quot;https://api.mch.weixin.qq.com/mmpaymkttransfers/gettransferinfo&quot;</span>; <span class="comment">// 企业付款查询API</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">APP_ID</span> <span class="operator">=</span> <span class="string">&quot;APP_ID&quot;</span>  ;<span class="comment">//公众账号appid</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MCH_ID</span> <span class="operator">=</span> <span class="string">&quot;MCH_ID&quot;</span>;<span class="comment">//商户号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">API_SECRET</span> <span class="operator">=</span> <span class="string">&quot;API_SECRET&quot;</span>;<span class="comment">//API密钥</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 企业向个人支付转账</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/pay&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">transferPay</span><span class="params">(<span class="meta">@RequestBody</span> String params,HttpServletRequest request)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** =============================================接口参数校验================================================*/</span></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(params);<span class="comment">//解析json</span></span><br><span class="line">        <span class="comment">//校验参数是否为空</span></span><br><span class="line">        <span class="keyword">if</span>(CheckParamsUtil.isBlank(jsonObject,<span class="string">&quot;userId&quot;</span>,<span class="string">&quot;amount&quot;</span>,<span class="string">&quot;userType&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(ErrorEnum.ERROR_PARAM_ISBLANK);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**==============================================设置局部变量=================================================*/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userId</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;userId&quot;</span>);<span class="comment">//用户id</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//用户openid</span></span><br><span class="line">        <span class="type">Float</span> <span class="variable">applyMoney</span> <span class="operator">=</span> jsonObject.getFloat(<span class="string">&quot;amount&quot;</span>);<span class="comment">//用户申请提现金额 0.3-5000</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">userType</span> <span class="operator">=</span> jsonObject.getInteger(<span class="string">&quot;userType&quot;</span>);<span class="comment">//用户类型</span></span><br><span class="line">        String amount;<span class="comment">//企业付款金额</span></span><br><span class="line">        <span class="type">Float</span> <span class="variable">poundage</span> <span class="operator">=</span> <span class="number">0f</span>;<span class="comment">//手续费</span></span><br><span class="line">        String desc;<span class="comment">//企业付款描述信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//提现记录表id</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(applyMoney&lt;<span class="number">0.3</span>||applyMoney&gt;<span class="number">5000</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;申请提现金额不符:低于最小金额0.30元或高于5000.00元&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** ======================================业务判断 1.userId是否有收款资格=====================================*/</span></span><br><span class="line">        <span class="keyword">if</span>(userType == <span class="number">1</span>)&#123;</span><br><span class="line">            openid = sysUserService.getOpenidBySysUserId(userId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(userType == <span class="number">2</span>)&#123;</span><br><span class="line">            openid = appUserService.getOpenidByAppUserId(userId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(openid==<span class="literal">null</span>||openid.equals(<span class="string">&quot;&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;该用户不可提现&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** ======================================业务判断 2.openid可提现金额校验=====================================*/</span></span><br><span class="line">        <span class="comment">/** userType==1 商家身份*/</span></span><br><span class="line">        <span class="keyword">if</span>(userType == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//校验用户提现金额</span></span><br><span class="line">            <span class="comment">//1.提现金额&lt;=可提现金额 15%的抽成</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Float</span> <span class="variable">account</span> <span class="operator">=</span> <span class="number">0f</span>;</span><br><span class="line">        <span class="comment">/** userType==2 用户身份*/</span></span><br><span class="line">        <span class="keyword">if</span>(userType == <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">//校验用户提现金额</span></span><br><span class="line">            <span class="comment">//1.提现金额&lt;=可提现金额</span></span><br><span class="line">            account = appUserService.getAccount(userId);</span><br><span class="line">            <span class="keyword">if</span>(applyMoney&gt;account)&#123;</span><br><span class="line">                <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;非法操作：申请提现金额大于可提现金额&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/** =================================业务判断 3.userId当天提现次数及当天提现金额限制==================================*/</span></span><br><span class="line">        <span class="comment">//当日提现次数 首次免手续费</span></span><br><span class="line">        List&lt;WithdrawalRecord&gt; withdrawalRecords = withdrawalRecordService.selectWithdrawalRecordOfToday(userId,openid,userType);</span><br><span class="line">        <span class="comment">//当日非初次提现</span></span><br><span class="line">        <span class="keyword">if</span>(withdrawalRecords.size()&gt;<span class="number">0</span>&amp;&amp;withdrawalRecords.size()&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">            poundage = <span class="number">2f</span>;<span class="comment">//当日非初次提现，手续费为2元</span></span><br><span class="line">            desc = <span class="string">&quot;申请提现金额：&quot;</span>+applyMoney+<span class="string">&quot;元，当天已提现&quot;</span>+withdrawalRecords.size()+<span class="string">&quot;次，需扣除2元手续费&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//此处对用户当天累计提现金额可做限制</span></span><br><span class="line"><span class="comment">//            Float withdrawalAmountRequested = 0f;//用户今日累计已申请的提现额度</span></span><br><span class="line"><span class="comment">//            for(int i = 0;i &lt; withdrawalRecords.size();i++)&#123;</span></span><br><span class="line"><span class="comment">//                withdrawalAmountRequested = (withdrawalAmountRequested*1000+withdrawalRecords.get(i).getActualMoney()*1000)/1000;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(withdrawalRecords.size()&gt;<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;该用户当天提现次数上限：微信企业付款每天最多可向同一个用户付款10次&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            desc = <span class="string">&quot;申请提现金额：&quot;</span>+applyMoney+<span class="string">&quot;元，当天首次提现免手续费&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** =================================业务判断 4.一个商户同一日付款总额限额10万元==================================*/</span></span><br><span class="line">        <span class="type">Float</span> <span class="variable">amountWithdrawn</span> <span class="operator">=</span> withdrawalRecordService.selectAllWithdrawalRecordNumOfToday();<span class="comment">//商户同一日付款总额</span></span><br><span class="line">        <span class="keyword">if</span>(amountWithdrawn&gt;<span class="number">100000</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;今日商户付款总额限额，请明天再试&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** ========================校验实际提现金额是否在微信企业付款实际允许的提现（0.3-5000）范围内=========================*/</span></span><br><span class="line">        <span class="type">Float</span> <span class="variable">actualMoney</span> <span class="operator">=</span> (applyMoney*<span class="number">1000</span>-poundage*<span class="number">1000</span>)/<span class="number">1000</span>;<span class="comment">//实际提现金额</span></span><br><span class="line">        <span class="keyword">if</span>(actualMoney&lt;<span class="number">0.3</span>||actualMoney&gt;<span class="number">5000</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;扣除手续费后的实际提现金额不符:&quot;</span>+actualMoney+<span class="string">&quot;元:低于最小金额0.30元或高于5000.00元&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        amount = Integer.parseInt((<span class="type">int</span>)((actualMoney)*<span class="number">10</span>)+<span class="string">&quot;&quot;</span>)*<span class="number">10</span>+<span class="string">&quot;&quot;</span>;<span class="comment">//微信企业付款金额 30-500000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/** ==================================================================================================================*/</span></span><br><span class="line">        <span class="comment">/** ================================================== 封装提现所需参数 ================================================*/</span></span><br><span class="line">        <span class="comment">/** ==================================================================================================================*/</span></span><br><span class="line">        Map&lt;String, String&gt; restmap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String&gt; parm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            parm.put(<span class="string">&quot;mch_appid&quot;</span>, APP_ID); <span class="comment">//公众账号appid</span></span><br><span class="line">            parm.put(<span class="string">&quot;mchid&quot;</span>, MCH_ID); <span class="comment">//商户号</span></span><br><span class="line">            parm.put(<span class="string">&quot;nonce_str&quot;</span>, PayUtil.getNonceStr()); <span class="comment">//随机字符串</span></span><br><span class="line">            parm.put(<span class="string">&quot;partner_trade_no&quot;</span>, PayUtil.getTransferNo()); <span class="comment">//商户订单号</span></span><br><span class="line">            parm.put(<span class="string">&quot;openid&quot;</span>, openid); <span class="comment">//用户openid oCVr20N2YLH9VQztnkZTaCj2aYYY</span></span><br><span class="line">            parm.put(<span class="string">&quot;check_name&quot;</span>, <span class="string">&quot;NO_CHECK&quot;</span>); <span class="comment">//校验用户姓名选项 OPTION_CHECK</span></span><br><span class="line">            <span class="comment">//parm.put(&quot;re_user_name&quot;, &quot;安迪&quot;); //check_name设置为FORCE_CHECK或OPTION_CHECK，则必填</span></span><br><span class="line">            parm.put(<span class="string">&quot;amount&quot;</span>,amount); <span class="comment">//转账金额</span></span><br><span class="line">            parm.put(<span class="string">&quot;desc&quot;</span>, desc); <span class="comment">//企业付款描述信息</span></span><br><span class="line">            parm.put(<span class="string">&quot;spbill_create_ip&quot;</span>, IpAddrUtil.getIpAddr(request)); <span class="comment">//Ip地址</span></span><br><span class="line">            parm.put(<span class="string">&quot;sign&quot;</span>, PayUtil.getSign(parm, API_SECRET));</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">restxml</span> <span class="operator">=</span> HttpUtils.posts(TRANSFERS_PAY, XmlUtil.xmlFormat(parm, <span class="literal">false</span>));</span><br><span class="line">            restmap = XmlUtil.xmlParse(restxml);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(e.getMessage(), e);</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;转账发生异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** =================================================== 提现结果处理 ===================================================*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/** ============================================ 生成提现及流水记录/改变余额 ============================================*/</span></span><br><span class="line">        <span class="keyword">if</span> (CollectionUtil.isNotEmpty(restmap) &amp;&amp; <span class="string">&quot;SUCCESS&quot;</span>.equals(restmap.get(<span class="string">&quot;result_code&quot;</span>))) &#123;</span><br><span class="line">            logger.info(<span class="string">&quot;转账成功&quot;</span>);</span><br><span class="line">            Map&lt;String, String&gt; transferMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            transferMap.put(<span class="string">&quot;partnerTradeNo&quot;</span>, restmap.get(<span class="string">&quot;partner_trade_no&quot;</span>));<span class="comment">//商户转账订单号</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;paymentNo&quot;</span>, restmap.get(<span class="string">&quot;payment_no&quot;</span>)); <span class="comment">//微信订单号</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;paymentTime&quot;</span>, restmap.get(<span class="string">&quot;payment_time&quot;</span>)); <span class="comment">//微信支付成功时间</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成提现记录</span></span><br><span class="line">            withdrawalRecordService.insert(<span class="keyword">new</span> <span class="title class_">WithdrawalRecord</span>(id,userType,userId,applyMoney,poundage,actualMoney,<span class="number">1</span>,restmap.get(<span class="string">&quot;partner_trade_no&quot;</span>),restmap.get(<span class="string">&quot;payment_no&quot;</span>),</span><br><span class="line">                    restmap.get(<span class="string">&quot;payment_time&quot;</span>)==<span class="literal">null</span>?<span class="literal">null</span>:DateUtil.strToDate(restmap.get(<span class="string">&quot;payment_time&quot;</span>),<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>),openid,desc,restmap.get(<span class="string">&quot;spbill_create_ip&quot;</span>),<span class="string">&quot;0&quot;</span>));</span><br><span class="line">            <span class="comment">//生成流水表</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">waterId</span> <span class="operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            map.put(<span class="string">&quot;id&quot;</span>,waterId);<span class="comment">//编号</span></span><br><span class="line">            map.put(<span class="string">&quot;userId&quot;</span>,userId);<span class="comment">//用户id</span></span><br><span class="line">            map.put(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;提现&quot;</span>);<span class="comment">//该流水的标题</span></span><br><span class="line">            map.put(<span class="string">&quot;waterType&quot;</span>,<span class="number">2</span>);<span class="comment">//商家流水类型1.场地收入 2.提现    用户流水类型1.分销收入 2.提现 3.预订场地</span></span><br><span class="line">            map.put(<span class="string">&quot;incomeExpense&quot;</span>,<span class="number">1</span>);<span class="comment">//收入还是支出 0.收入 1.支出</span></span><br><span class="line">            map.put(<span class="string">&quot;applyMoney&quot;</span>,applyMoney);<span class="comment">//申请提现金额</span></span><br><span class="line">            map.put(<span class="string">&quot;poundage&quot;</span>,poundage);<span class="comment">//手续费</span></span><br><span class="line">            map.put(<span class="string">&quot;actualMoney&quot;</span>,actualMoney);<span class="comment">//实际金额</span></span><br><span class="line">            map.put(<span class="string">&quot;whetherToAccount&quot;</span>,<span class="number">1</span>);<span class="comment">//是否到账0.未到账1.已到账</span></span><br><span class="line">            <span class="keyword">if</span>(userType==<span class="number">1</span>)&#123;</span><br><span class="line">                sysUserService.insertUserWater(map);</span><br><span class="line">                <span class="comment">//改变用户可提现余额</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(userType==<span class="number">2</span>)&#123;</span><br><span class="line">                appUserService.insertUserWater1(map);</span><br><span class="line">                <span class="comment">//改变用户可提现余额</span></span><br><span class="line">                appUserService.updateUserAccount(userId,(account*<span class="number">1000</span>-applyMoney*<span class="number">1000</span>)/<span class="number">1000</span>);<span class="comment">//float精度问题</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.success(transferMap);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** =================================================3.转账失败========================================================*/</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (CollectionUtil.isNotEmpty(restmap)) &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;转账失败：&quot;</span> + restmap.get(<span class="string">&quot;err_code&quot;</span>) + <span class="string">&quot;:&quot;</span> + restmap.get(<span class="string">&quot;err_code_des&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;转账失败&quot;</span>+restmap.get(<span class="string">&quot;err_code_des&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 企业向个人转账查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tradeno 商户转账订单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callback</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/pay/query&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">orderPayQuery</span><span class="params">(HttpServletRequest request, HttpServletResponse response, String tradeno,</span></span><br><span class="line"><span class="params">                              String callback)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isEmpty(tradeno)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;转账订单号不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; restmap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, String&gt; parm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            parm.put(<span class="string">&quot;appid&quot;</span>, APP_ID);</span><br><span class="line">            parm.put(<span class="string">&quot;mch_id&quot;</span>, MCH_ID);</span><br><span class="line">            parm.put(<span class="string">&quot;partner_trade_no&quot;</span>, tradeno);</span><br><span class="line">            parm.put(<span class="string">&quot;nonce_str&quot;</span>, PayUtil.getNonceStr());</span><br><span class="line">            parm.put(<span class="string">&quot;sign&quot;</span>, PayUtil.getSign(parm, API_SECRET));</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">restxml</span> <span class="operator">=</span> HttpUtils.posts(TRANSFERS_PAY_QUERY, XmlUtil.xmlFormat(parm, <span class="literal">true</span>));</span><br><span class="line">            restmap = XmlUtil.xmlParse(restxml);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (CollectionUtil.isNotEmpty(restmap) &amp;&amp; <span class="string">&quot;SUCCESS&quot;</span>.equals(restmap.get(<span class="string">&quot;result_code&quot;</span>))) &#123;</span><br><span class="line">            <span class="comment">// 订单查询成功 处理业务逻辑</span></span><br><span class="line">            logger.info(<span class="string">&quot;订单查询：订单&quot;</span> + restmap.get(<span class="string">&quot;partner_trade_no&quot;</span>) + <span class="string">&quot;支付成功&quot;</span>);</span><br><span class="line">            Map&lt;String, String&gt; transferMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            transferMap.put(<span class="string">&quot;partnerTradeNo&quot;</span>, restmap.get(<span class="string">&quot;partner_trade_no&quot;</span>));<span class="comment">//商户转账订单号</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;openid&quot;</span>, restmap.get(<span class="string">&quot;openid&quot;</span>)); <span class="comment">//收款微信号</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;paymentAmount&quot;</span>, restmap.get(<span class="string">&quot;payment_amount&quot;</span>)); <span class="comment">//转账金额</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;transferTime&quot;</span>, restmap.get(<span class="string">&quot;transfer_time&quot;</span>)); <span class="comment">//转账时间</span></span><br><span class="line">            transferMap.put(<span class="string">&quot;desc&quot;</span>, restmap.get(<span class="string">&quot;desc&quot;</span>)); <span class="comment">//转账描述</span></span><br><span class="line">            <span class="keyword">return</span> ResultUtil.success(transferMap);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (CollectionUtil.isNotEmpty(restmap)) &#123;</span><br><span class="line">                logger.info(<span class="string">&quot;订单转账失败：&quot;</span> + restmap.get(<span class="string">&quot;err_code&quot;</span>) + <span class="string">&quot;:&quot;</span> + restmap.get(<span class="string">&quot;err_code_des&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ResultUtil.fail(<span class="string">&quot;00000001&quot;</span>,<span class="string">&quot;订单转账失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>WeChat</category>
      </categories>
      <tags>
        <tag>WeChat</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础学习Mahout</title>
    <url>/2019/05/13/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0Mahout/</url>
    <content><![CDATA[<h2 id="Mahout"><a href="#Mahout" class="headerlink" title="Mahout"></a>Mahout</h2><p><img src="https://mahout.apache.org/assets/mahout-logo-blue.svg" alt="Alt text"></p>
<p>Mahout 是 Apache Software Foundation（ASF） 旗下的一个开源项目，提供一些可扩展的机器学习领域经典算法的实现，旨在帮助开发人员更加方便快捷地创建智能应用程序。Mahout包含许多实现，包括聚类、分类、推荐过滤、频繁子项挖掘。此外，通过使用 Apache Hadoop 库，Mahout 可以有效地扩展到云中。</p>
<span id="more"></span>

<h2 id="安装Maven"><a href="#安装Maven" class="headerlink" title="安装Maven"></a><a href="http://maven.apache.org/">安装Maven</a></h2><p>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的项目管理工具软件。<br>Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目。由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目发文时使用 Maven，而且公司项目采用 Maven 的比例在持续增长。<br>Maven这个单词来自于意第绪语（犹太语），意为知识的积累，最初在Jakata Turbine项目中用来简化构建过程。当时有一些项目（有各自Ant build文件），仅有细微的差别，而JAR文件都由CVS来维护。于是希望有一种标准化的方式构建项目，一个清晰的方式定义项目的组成，一个容易的方式发布项目的信息，以及一种简单的方式在多个项目中共享JARs。</p>
<h2 id="使用Maven构建Mahout项目"><a href="#使用Maven构建Mahout项目" class="headerlink" title="使用Maven构建Mahout项目"></a>使用Maven构建Mahout项目</h2><p>运行 <code>IntelliJ IDEA</code>，通过菜单 <code>File</code> &gt; <code>New</code> &gt; <code>Project</code> 新建项目，选择 <code>Maven</code> 勾上 <code>Create from archetype</code> 选择 <code>maven-archetype-quickstart</code> 再选择 <code>Next</code>  输入 <code>GroupId</code> 和 <code>ArtifactId</code>，可以根据自己喜好随便命名</p>
<p><img src="https://aliatry.oss-cn-shenzhen.aliyuncs.com/blog/20190513155946.png" alt="Alt text"></p>
<p><img src="https://aliatry.oss-cn-shenzhen.aliyuncs.com/blog/20190513160203.png" alt="Alt text"></p>
<p>剩下的全部按键盘 <code>Enter</code></p>
<p>工程创建完毕后，点击右下角的 <code>Enable Auto-Import</code> 开启自动导入</p>
<p><img src="https://aliatry.oss-cn-shenzhen.aliyuncs.com/blog/20190513164845.png" alt="Alt text"></p>
<p>下载完毕后，打开 <code>pom.xml</code> 替换 <code>&lt;properties&gt;</code> 和 <code>&lt;dependencies&gt;</code> 内容</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliatry.mahout<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>practice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>practice<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mahout.version</span>&gt;</span>0.9<span class="tag">&lt;/<span class="name">mahout.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j-log4j12.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j-log4j12.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.mahout<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mahout-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mahout.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.mahout<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mahout-integration<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mahout.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.mahout<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mahout-math<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mahout.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.mahout<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mahout-examples<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mahout.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j-log4j12.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j-log4j12.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="修改-App-java"><a href="#修改-App-java" class="headerlink" title="修改 App.java"></a>修改 <code>App.java</code></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aliatry.mahout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.common.TasteException;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.model.file.FileDataModel;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.recommender.GenericItemBasedRecommender;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.similarity.EuclideanDistanceSimilarity;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.model.DataModel;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.recommender.RecommendedItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.recommender.Recommender;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.similarity.ItemSimilarity;</span><br><span class="line"><span class="keyword">import</span> org.apache.mahout.cf.taste.similarity.UserSimilarity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello world!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line"><span class="comment">//        initial();</span></span><br><span class="line"></span><br><span class="line">        baseUser(); <span class="comment">// 基于用户的协同过滤算法</span></span><br><span class="line">        baseItem(); <span class="comment">// 基于物品的协同过滤算法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// TODO 基于用户的协同过滤算法</span></span><br><span class="line">        <span class="comment">// 从文件加载数据</span></span><br><span class="line">        <span class="type">DataModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileDataModel</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\data.csv&quot;</span>));</span><br><span class="line">        <span class="comment">// 指定用户相似度计算方法，这里采用皮尔森相关度</span></span><br><span class="line">        <span class="type">UserSimilarity</span> <span class="variable">similarity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PearsonCorrelationSimilarity</span>(model);</span><br><span class="line">        <span class="comment">// 指定用户邻居数量，这里为2</span></span><br><span class="line">        <span class="type">UserNeighborhood</span> <span class="variable">neighborhood</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NearestNUserNeighborhood</span>(<span class="number">2</span>, similarity, model);</span><br><span class="line">        <span class="comment">// 构建基于用户的推荐系统</span></span><br><span class="line">        <span class="type">Recommender</span> <span class="variable">recommender</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericUserBasedRecommender</span>(model, neighborhood, similarity);</span><br><span class="line">        <span class="comment">// 得到指定用户的推荐结果，这里是得到用户1的两个推荐</span></span><br><span class="line">        List&lt;RecommendedItem&gt; recommendations = recommender.recommend(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="comment">// 打印推荐结果</span></span><br><span class="line">        <span class="keyword">for</span> (RecommendedItem recommendation : recommendations) &#123;</span><br><span class="line">            System.out.println(recommendation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">initial</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">int</span>[][] arg = &#123;</span><br><span class="line">                    &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">0</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">5</span>&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            out = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\data.csv&quot;</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">7</span>; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (arg[i][j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> i + <span class="string">&quot;,&quot;</span> + j + <span class="string">&quot;,&quot;</span> + arg[i][j] + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                        out.write(a.getBytes());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于用户的协同过滤算法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TasteException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">baseUser</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TasteException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">NEIGHBORHOOD_NUM</span> <span class="operator">=</span> <span class="number">2</span>;   <span class="comment">//用户邻居数量</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">RECOMMENDER_NUM</span> <span class="operator">=</span> <span class="number">3</span>;    <span class="comment">//推荐结果个数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        准备数据 这里是电影评分数据</span></span><br><span class="line"><span class="comment">        数据集，其中第一列表示用户id；第二列表示商品id；第三列表示评分，评分是5分制</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        将数据加载到内存中</span></span><br><span class="line"><span class="comment">        基于文件的model，通过文件形式来读入,且此类型所需要读入的数据的格式要求很低，只需要满足每一行是用户id，物品id，用户偏好，且之间用tab或者是逗号隔开即可</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">DataModel</span> <span class="variable">dataModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileDataModel</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\data.csv&quot;</span>));</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        计算相似度，相似度算法有很多种，欧几里得、皮尔逊等等。</span></span><br><span class="line"><span class="comment">        基于用户的协同过滤算法，基于物品的协同过滤算法，这里使用了EuclideanDistanceSimilarity</span></span><br><span class="line"><span class="comment">        计算欧式距离，欧式距离来定义相似性，用s=1/(1+d)来表示，范围在[0,1]之间，值越大，表明d越小，距离越近，则表示相似性越大</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">UserSimilarity</span> <span class="variable">similarity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EuclideanDistanceSimilarity</span>(dataModel);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        计算最近邻域，邻居有两种算法，基于固定数量的邻居和基于相似度的邻居，这里使用基于固定数量的邻居。</span></span><br><span class="line"><span class="comment">        NEIGHBORHOOD_NUM指定用户邻居数量</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">NearestNUserNeighborhood</span> <span class="variable">neighbor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NearestNUserNeighborhood</span>(NEIGHBORHOOD_NUM, similarity, dataModel);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        构建推荐器，协同过滤推荐有两种，分别是基于用户的和基于物品的，这里使用基于用户的协同过滤推荐</span></span><br><span class="line"><span class="comment">        构建基于用户的推荐系统</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">Recommender</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericUserBasedRecommender</span>(dataModel, neighbor, similarity);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到所有用户的id集合</span></span><br><span class="line">        <span class="type">LongPrimitiveIterator</span> <span class="variable">iter</span> <span class="operator">=</span> dataModel.getUserIDs();</span><br><span class="line">        <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">uid</span> <span class="operator">=</span> iter.nextLong();</span><br><span class="line">            <span class="comment">//获取推荐结果，获取指定用户指定数量的推荐结果</span></span><br><span class="line">            List&lt;RecommendedItem&gt; list = r.recommend(uid, RECOMMENDER_NUM);</span><br><span class="line">            System.out.printf(<span class="string">&quot;user : %s&quot;</span>, uid);</span><br><span class="line">            <span class="comment">//遍历推荐结果</span></span><br><span class="line">            <span class="keyword">for</span> (RecommendedItem item : list) &#123;</span><br><span class="line">                <span class="comment">//获取推荐结果和推荐度</span></span><br><span class="line">                System.out.print(item.getItemID() + <span class="string">&quot;[&quot;</span> + item.getValue() + <span class="string">&quot;] &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 基于物品的协同过滤算法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TasteException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">baseItem</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TasteException &#123;</span><br><span class="line">        <span class="type">DataModel</span> <span class="variable">dataModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileDataModel</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\data.csv&quot;</span>));</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        计算相似度，相似度算法有很多种，欧几里得、皮尔逊等等。</span></span><br><span class="line"><span class="comment">        这里使用的是皮尔逊PearsonCorrelationSimilarity</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">ItemSimilarity</span> <span class="variable">itemSimilarity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PearsonCorrelationSimilarity</span>(dataModel);</span><br><span class="line">        <span class="comment">//构建推荐器，协同过滤推荐有两种，分别是基于用户的和基于物品的，这里使用基于物品的协同过滤推荐</span></span><br><span class="line">        <span class="type">GenericItemBasedRecommender</span> <span class="variable">recommender</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GenericItemBasedRecommender</span>(dataModel, itemSimilarity);</span><br><span class="line">        <span class="comment">//给指定用户推荐若干个与指定商品相似的商品</span></span><br><span class="line">        List&lt;RecommendedItem&gt; recommendedItemList = recommender.recommendedBecause(<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="comment">//打印推荐的结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;根据用户1当前浏览的商品5，推荐2个相似的商品&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (RecommendedItem recommendedItem : recommendedItemList) &#123;</span><br><span class="line">            System.out.println(recommendedItem);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;C:\Program Files\Java\jdk1.8.0_144\bin\java.exe&quot; &quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2019.1\lib\idea_rt.jar=61415:C:\Program Files\JetBrains\IntelliJ IDEA 2019.1\bin&quot; -Dfile.encoding=UTF-8 -classpath &quot;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;D:\IdeaProjects\practice\target\classes;C:\Users\Simon\.m2\repository\org\apache\mahout\mahout-core\0.9\mahout-core-0.9.jar;C:\Users\Simon\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.12\jackson-core-asl-1.9.12.jar;C:\Users\Simon\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.12\jackson-mapper-asl-1.9.12.jar;C:\Users\Simon\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Simon\.m2\repository\com\thoughtworks\xstream\xstream\1.4.4\xstream-1.4.4.jar;C:\Users\Simon\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\Simon\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-core\4.6.1\lucene-core-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-analyzers-common\4.6.1\lucene-analyzers-common-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\mahout\commons\commons-cli\2.0-mahout\commons-cli-2.0-mahout.jar;C:\Users\Simon\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Simon\.m2\repository\org\apache\solr\solr-commons-csv\3.5.0\solr-commons-csv-3.5.0.jar;C:\Users\Simon\.m2\repository\org\apache\hadoop\hadoop-core\1.2.1\hadoop-core-1.2.1.jar;C:\Users\Simon\.m2\repository\commons-cli\commons-cli\1.2\commons-cli-1.2.jar;C:\Users\Simon\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\Simon\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\Simon\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\Simon\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Simon\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\Simon\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\Simon\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\Simon\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Simon\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\Simon\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\Simon\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\Simon\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\Simon\.m2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;C:\Users\Simon\.m2\repository\commons-logging\commons-logging\1.0.3\commons-logging-1.0.3.jar;C:\Users\Simon\.m2\repository\commons-codec\commons-codec\1.4\commons-codec-1.4.jar;C:\Users\Simon\.m2\repository\org\apache\commons\commons-math\2.1\commons-math-2.1.jar;C:\Users\Simon\.m2\repository\commons-configuration\commons-configuration\1.6\commons-configuration-1.6.jar;C:\Users\Simon\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Simon\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\Simon\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\Simon\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\Simon\.m2\repository\commons-beanutils\commons-beanutils-core\1.8.0\commons-beanutils-core-1.8.0.jar;C:\Users\Simon\.m2\repository\commons-net\commons-net\1.4.1\commons-net-1.4.1.jar;C:\Users\Simon\.m2\repository\commons-el\commons-el\1.0\commons-el-1.0.jar;C:\Users\Simon\.m2\repository\org\apache\mahout\mahout-integration\0.9\mahout-integration-0.9.jar;C:\Users\Simon\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Simon\.m2\repository\org\apache\mahout\mahout-math\0.9\mahout-math-0.9.jar;C:\Users\Simon\.m2\repository\com\google\guava\guava\16.0\guava-16.0.jar;C:\Users\Simon\.m2\repository\org\apache\mahout\mahout-examples\0.9\mahout-examples-0.9.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-benchmark\4.6.1\lucene-benchmark-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-highlighter\4.6.1\lucene-highlighter-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-queries\4.6.1\lucene-queries-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-memory\4.6.1\lucene-memory-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-queryparser\4.6.1\lucene-queryparser-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-sandbox\4.6.1\lucene-sandbox-4.6.1.jar;C:\Users\Simon\.m2\repository\jakarta-regexp\jakarta-regexp\1.4\jakarta-regexp-1.4.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-facet\4.6.1\lucene-facet-4.6.1.jar;C:\Users\Simon\.m2\repository\org\apache\lucene\lucene-spatial\4.6.1\lucene-spatial-4.6.1.jar;C:\Users\Simon\.m2\repository\com\spatial4j\spatial4j\0.3\spatial4j-0.3.jar;C:\Users\Simon\.m2\repository\com\ibm\icu\icu4j\49.1\icu4j-49.1.jar;C:\Users\Simon\.m2\repository\net\sourceforge\nekohtml\nekohtml\1.9.17\nekohtml-1.9.17.jar;C:\Users\Simon\.m2\repository\org\apache\commons\commons-compress\1.4.1\commons-compress-1.4.1.jar;C:\Users\Simon\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\Simon\.m2\repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;C:\Users\Simon\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Simon\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar&quot; com.aliatry.mahout.App</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Creating FileDataModel for file D:\data.csv</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Reading file info...</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Read lines: 24</span><br><span class="line">19/05/13 17:36:19 INFO model.GenericDataModel: Processed 5 users</span><br><span class="line">user : 0</span><br><span class="line">user : 16[3.6425023] 0[3.1900032] 3[2.3574977]</span><br><span class="line">user : 21[1.0]</span><br><span class="line">user : 35[5.0] 6[3.457395]</span><br><span class="line">user : 42[4.0] 4[3.145341]</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Creating FileDataModel for file D:\data.csv</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Reading file info...</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Read lines: 24</span><br><span class="line">19/05/13 17:36:19 INFO model.GenericDataModel: Processed 5 users</span><br><span class="line">根据用户1当前浏览的商品5，推荐2个相似的商品</span><br><span class="line">RecommendedItem[item:2, value:2.0]</span><br><span class="line">RecommendedItem[item:1, value:0.0]</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Creating FileDataModel for file D:\data.csv</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Reading file info...</span><br><span class="line">19/05/13 17:36:19 INFO file.FileDataModel: Read lines: 24</span><br><span class="line">19/05/13 17:36:19 INFO model.GenericDataModel: Processed 5 users</span><br><span class="line">RecommendedItem[item:3, value:3.5]</span><br><span class="line">RecommendedItem[item:4, value:3.0]</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure>

<h2 id="项目gitee地址"><a href="#项目gitee地址" class="headerlink" title="项目gitee地址"></a><a href="https://gitee.com/admin-james/mahout">项目gitee地址</a></h2>]]></content>
      <categories>
        <category>Mahout</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>Mahout</tag>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>idea agent 激活原理</title>
    <url>/2024/04/07/idea-agent-%E6%BF%80%E6%B4%BB%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="破解原理"><a href="#破解原理" class="headerlink" title="破解原理"></a>破解原理</h1><p>jetbrains提供了一个付费插件如何校验 <strong>License</strong> 的示例代码, 点击 <a href="https://github.com/JetBrains/marketplace-makemecoffee-plugin/blob/master/src/main/java/com/company/license/CheckLicense.java">CheckLicense.java</a> 查看</p>
<span id="more"></span>

<p>现在对代码进行分析,校验<code>license</code>的入口是<code>isKeyValid</code>方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isKeyValid</span><span class="params">(String key)</span> &#123;</span><br><span class="line">    String[] licenseParts = key.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (licenseParts.length != <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">licenseId</span> <span class="operator">=</span> licenseParts[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">licensePartBase64</span> <span class="operator">=</span> licenseParts[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">signatureBase64</span> <span class="operator">=</span> licenseParts[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">certBase64</span> <span class="operator">=</span> licenseParts[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Signature</span> <span class="variable">sig</span> <span class="operator">=</span> Signature.getInstance(<span class="string">&quot;SHA1withRSA&quot;</span>);</span><br><span class="line">        sig.initVerify(createCertificate(Base64.getMimeDecoder().decode(certBase64.getBytes(StandardCharsets.UTF_8)), Collections.emptySet(), <span class="literal">false</span>));</span><br><span class="line">        <span class="keyword">final</span> <span class="type">byte</span>[] licenseBytes = Base64.getMimeDecoder().decode(licensePartBase64.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">        sig.update(licenseBytes);</span><br><span class="line">        <span class="keyword">if</span> (!sig.verify(Base64.getMimeDecoder().decode(signatureBase64.getBytes(StandardCharsets.UTF_8)))) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">licenseData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(licenseBytes, StandardCharsets.UTF_8);</span><br><span class="line">        <span class="keyword">return</span> licenseData.contains(<span class="string">&quot;\&quot;licenseId\&quot;:\&quot;&quot;</span> + licenseId + <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        e.printStackTrace()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面进行逐步分析:</p>
<h2 id="License的格式"><a href="#License的格式" class="headerlink" title="License的格式"></a>License的格式</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] licenseParts = key.split(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (licenseParts.length != <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// invalid format</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">String</span> <span class="variable">licenseId</span> <span class="operator">=</span> licenseParts[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">final</span> <span class="type">String</span> <span class="variable">licensePartBase64</span> <span class="operator">=</span> licenseParts[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">final</span> <span class="type">String</span> <span class="variable">signatureBase64</span> <span class="operator">=</span> licenseParts[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">final</span> <span class="type">String</span> <span class="variable">certBase64</span> <span class="operator">=</span> licenseParts[<span class="number">3</span>];</span><br></pre></td></tr></table></figure>

<p>透过这几行,我们可以发现License由4部分组成,这4部分用-拼接</p>
<p><strong>licenseId</strong></p>
<p>licenseId 没什么好解释的,大家写代码对一条数据会给他一个id标识,这里也是一样的</p>
<p><strong>licensePartBase64</strong></p>
<p>既然是base64我们使用base64解码试试,先从网上找个license</p>
<p>再写几行代码解码打印一下</p>
<p>打印结果,下面是json格式化后的</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;licenseId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;29VRVXKXEQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;licenseeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gurgles tumbles&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;assigneeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;assigneeEmail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;licenseRestriction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkConcurrentUse&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;products&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;II&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;extended&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PCWMP&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;extended&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PSI&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;extended&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PDB&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2026-09-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;extended&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0120230914PSAX000005&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TRIAL:1649058719&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gracePeriodDays&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;autoProlongated&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isAutoProlongated&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>可以看出,这个json存储了<strong>license</strong>的信息了,过期时间,产品编码,等等</p>
<p><strong>signatureBase64</strong></p>
<p>这个虽然也是bash64编码的,但是不可读,从后续的代码中可以看到这个是<strong>licensePartBase64</strong>的签名(防止你修改<strong>licensePartBase64</strong>的内容)</p>
<p><strong>certBase64</strong></p>
<p>这个从名字就可以知道,这是一个证书的base64,我们可以写几行代码试试将其转成<strong>X509Certificate</strong><br>打印结果</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">[</span><br><span class="line">  Version: V3</span><br><span class="line">  Subject: CN=prod2y-from-20201019</span><br><span class="line">  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11</span><br><span class="line"></span><br><span class="line">  Key:  Sun RSA public key, 2048 bits</span><br><span class="line">  params: null</span><br><span class="line">  modulus: 18757061644631641897871738039803297079222086307758970668007743391230210652175936091067273679967614176566958971386041386130847029810514259477478961428354871927476348879585595226079089482240396983201444402264034332735246934562349766525834026808529064015070873142427210769732272794189934622072446800676835238869578773294766180028559237543555831007850742231939840102022188112702553709667158412697383676208362494918482992433951964054476644792447772443724250800187136958875570841896406567118594736548490951814592975795053469752356231684777929851181510821765498304994721447237722500206967118619930964967974888609206437705281</span><br><span class="line">  public exponent: 65537</span><br><span class="line">  Validity: [From: Mon Oct 19 17:05:53 CST 2020,</span><br><span class="line">               To: Fri Oct 21 17:05:53 CST 2022]</span><br><span class="line">  Issuer: CN=JetProfile CA</span><br><span class="line">  SerialNumber: [    0d]</span><br><span class="line"></span><br><span class="line">Certificate Extensions: 5</span><br><span class="line">[1]: ObjectId: 2.5.29.35 Criticality=<span class="literal">false</span></span><br><span class="line">AuthorityKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line">0000: A3 9E B6 48 67 42 12 36   41 BD 6D E0 B9 B4 A0 52  ...HgB.6A.m....R</span><br><span class="line">0010: 8B 97 F1 B3                                        ....</span><br><span class="line">]</span><br><span class="line">[CN=JetProfile CA]</span><br><span class="line">SerialNumber: [    d26cb183 b28379e1]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">[2]: ObjectId: 2.5.29.19 Criticality=<span class="literal">false</span></span><br><span class="line">BasicConstraints:[</span><br><span class="line">  CA:<span class="literal">false</span></span><br><span class="line">  PathLen: undefined</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">[3]: ObjectId: 2.5.29.37 Criticality=<span class="literal">false</span></span><br><span class="line">ExtendedKeyUsages [</span><br><span class="line">  serverAuth</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">[4]: ObjectId: 2.5.29.15 Criticality=<span class="literal">false</span></span><br><span class="line">KeyUsage [</span><br><span class="line">  DigitalSignature</span><br><span class="line">  Key_Encipherment</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">[5]: ObjectId: 2.5.29.14 Criticality=<span class="literal">false</span></span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line">0000: 24 DA 11 22 96 F5 85 41   C0 93 47 E8 31 23 4C F4  $..<span class="string">&quot;...A..G.1#L.</span></span><br><span class="line"><span class="string">0010: C0 84 02 FF                                        ....</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">  Algorithm: [SHA256withRSA]</span></span><br><span class="line"><span class="string">  Signature:</span></span><br><span class="line"><span class="string">......</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">]</span></span><br></pre></td></tr></table></figure>

<p>可以看出这个一个由JetProfile CA签名的子证书</p>
<h2 id="验证证书"><a href="#验证证书" class="headerlink" title="验证证书"></a>验证证书</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">Signature</span> <span class="variable">sig</span> <span class="operator">=</span> Signature.getInstance(<span class="string">&quot;SHA1withRSA&quot;</span>);</span><br><span class="line"><span class="comment">// Here it is only important that the key was signed with an authentic JetBrains certificate.</span></span><br><span class="line">sig.initVerify(createCertificate(Base64.getMimeDecoder().decode(certBase64.getBytes(StandardCharsets.UTF_8)), Collections.emptySet(), <span class="literal">false</span>));</span><br></pre></td></tr></table></figure>

<p>Here it is only important that the key was signed with an authentic JetBrains certificate.翻译一下就是:这里唯一重要的是密钥是使用真实的 JetBrains 证书签名的</p>
<p>说明了这段代码唯一的目的就是校验证书是JetBrains签名的,createCertificate核心代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">X509CertSelector</span> <span class="variable">selector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">X509CertSelector</span>();</span><br><span class="line">selector.setCertificate(cert);</span><br><span class="line"><span class="keyword">final</span> Set&lt;TrustAnchor&gt; trustAchors = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (String rc : ROOT_CERTIFICATES) &#123;</span><br><span class="line">    trustAchors.add(<span class="keyword">new</span> <span class="title class_">TrustAnchor</span>((X509Certificate) x509factory.generateCertificate(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(rc.getBytes(StandardCharsets.UTF_8))), <span class="literal">null</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="type">PKIXBuilderParameters</span> <span class="variable">pkixParams</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PKIXBuilderParameters</span>(trustAchors, selector);</span><br><span class="line">pkixParams.setRevocationEnabled(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!checkValidityAtCurrentDate) &#123;</span><br><span class="line">    pkixParams.setDate(cert.getNotBefore());</span><br><span class="line">&#125;</span><br><span class="line">pkixParams.addCertStore(CertStore.getInstance(<span class="string">&quot;Collection&quot;</span>, <span class="keyword">new</span> <span class="title class_">CollectionCertStoreParameters</span>(allCerts)));</span><br><span class="line"><span class="keyword">final</span> <span class="type">CertPath</span> <span class="variable">path</span> <span class="operator">=</span> CertPathBuilder.getInstance(<span class="string">&quot;PKIX&quot;</span>).build(pkixParams).getCertPath();</span><br><span class="line"><span class="keyword">if</span> (path != <span class="literal">null</span>) &#123;</span><br><span class="line">    CertPathValidator.getInstance(<span class="string">&quot;PKIX&quot;</span>).validate(path, pkixParams);</span><br><span class="line">    <span class="keyword">return</span> cert;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ROOT_CERTIFICATES 是内置的根证书,使用根证书来验证传入的证书是不是根证书签发的,后面的代码都是使用java的库进行证书链验证</p>
<p>这里涉及到了证书链 证书签名</p>
<p>证书包含的内容可以概述为三部分，用户的信息、用户的公钥、还有CA中心对该证书里面的信息的签名。我们在验证证书的有效性的时候，会逐级去寻找签发者的证书，直至根证书为结束，然后通过公钥一级一级验证数字签名的正确性。</p>
<p>证书签名即使用上一级机构的私钥对证书里的信息进行hash再加密</p>
<p>用户使用上一级的公钥对签名进行解密得到一个值</p>
<p>用户使用证书里的信息进行hash的到一个值</p>
<p>如果这两者相同,则说明证书是正确的</p>
<h2 id="验证licensePart"><a href="#验证licensePart" class="headerlink" title="验证licensePart"></a>验证<strong>licensePart</strong></h2><p>验证完证书,还需要验证license中的信息是不是被修改过,</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">Signature</span> <span class="variable">sig</span> <span class="operator">=</span> Signature.getInstance(<span class="string">&quot;SHA1withRSA&quot;</span>);</span><br><span class="line">sig.initVerify(createCertificate(Base64.getMimeDecoder().decode(certBase64.getBytes(StandardCharsets.UTF_8)), Collections.emptySet(), <span class="literal">false</span>));</span><br><span class="line"><span class="keyword">final</span> <span class="type">byte</span>[] licenseBytes = Base64.getMimeDecoder().decode(licensePartBase64.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">sig.update(licenseBytes);</span><br><span class="line"><span class="keyword">if</span> (!sig.verify(Base64.getMimeDecoder().decode(signatureBase64.getBytes(StandardCharsets.UTF_8)))) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其实就使用证书里包含的公钥与<strong>SHA1withRSA</strong> 算法进行验证</p>
<h2 id="破解的思路"><a href="#破解的思路" class="headerlink" title="破解的思路"></a>破解的思路</h2><p>首先,我们需要一个证书, 还要有这个证书的私钥,网上找的<strong>license</strong>只能拿到证书,没有私钥,没有私钥就无法对<strong>licensePart</strong>进行签名</p>
<p>如果我们自己签一个证书,那么验证证书时是无法通过的, 我们需要一点魔法来搞定这一点, Java agent 技术修改jdk的字节码, 使得校验我们的证书时总是通过</p>
<p>有了证书后,使用证书的私钥对我们修改过的<strong>licensePart</strong>进行签名,最后拼接得到<strong>license</strong></p>
<p>为什么不直接改掉这个函数?</p>
<p>上面的代码只是一个demo,并不代表实际软件里是这么实现的,并且idea的代码经过混淆加密,根本无法查看,无法定位到是那个方法校验的<strong>license</strong></p>
<h1 id="破解的实现"><a href="#破解的实现" class="headerlink" title="破解的实现"></a>破解的实现</h1><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><p>使用下面的python脚本即可</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cryptography <span class="keyword">import</span> x509</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives <span class="keyword">import</span> hashes, serialization</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.asymmetric <span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">from</span> cryptography.x509.oid <span class="keyword">import</span> NameOID</span><br><span class="line"></span><br><span class="line">one_day = datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line">ten_day = datetime.timedelta(days=<span class="number">3650</span>)</span><br><span class="line">today = datetime.datetime.today()</span><br><span class="line">yesterday = today - one_day</span><br><span class="line">tomorrow = today + ten_day</span><br><span class="line"></span><br><span class="line">private_key = rsa.generate_private_key(</span><br><span class="line">    public_exponent=<span class="number">65537</span>,</span><br><span class="line">    key_size=<span class="number">4096</span>,</span><br><span class="line">    backend=default_backend()</span><br><span class="line">)</span><br><span class="line">public_key = private_key.public_key()</span><br><span class="line">builder = x509.CertificateBuilder()</span><br><span class="line"></span><br><span class="line">builder = builder.subject_name(x509.Name([</span><br><span class="line">    x509.NameAttribute(NameOID.COMMON_NAME, <span class="string">&#x27;Novice-from-2024-01-19&#x27;</span>),</span><br><span class="line">]))</span><br><span class="line">builder = builder.issuer_name(x509.Name([</span><br><span class="line">    x509.NameAttribute(NameOID.COMMON_NAME, <span class="string">&#x27;JetProfile CA&#x27;</span>),</span><br><span class="line">]))</span><br><span class="line">builder = builder.not_valid_before(yesterday)</span><br><span class="line">builder = builder.not_valid_after(tomorrow)</span><br><span class="line">builder = builder.serial_number(x509.random_serial_number())</span><br><span class="line">builder = builder.public_key(public_key)</span><br><span class="line"></span><br><span class="line">certificate = builder.sign(</span><br><span class="line">    private_key=private_key, algorithm=hashes.SHA256(),</span><br><span class="line">    backend=default_backend()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">private_bytes = private_key.private_bytes(</span><br><span class="line">    encoding=serialization.Encoding.PEM,</span><br><span class="line">    <span class="built_in">format</span>=serialization.PrivateFormat.TraditionalOpenSSL,</span><br><span class="line">    encryption_algorithm=serialization.NoEncryption()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">public_bytes = certificate.public_bytes(</span><br><span class="line">    encoding=serialization.Encoding.PEM</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;ca.key&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> fout:</span><br><span class="line">    fout.write(private_bytes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;ca.crt&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> fout:</span><br><span class="line">    fout.write(public_bytes)</span><br></pre></td></tr></table></figure>

<p>执行这个脚本会生成保存一个证书ca.crt, 以及一个私钥ca.key</p>
<h2 id="使用证书和私钥生成license"><a href="#使用证书和私钥生成license" class="headerlink" title="使用证书和私钥生成license"></a>使用证书和私钥生成<strong>license</strong></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.openssl.PEMKeyPair;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.openssl.PEMParser;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyPair;</span><br><span class="line"><span class="keyword">import</span> java.security.PrivateKey;</span><br><span class="line"><span class="keyword">import</span> java.security.Security;</span><br><span class="line"><span class="keyword">import</span> java.security.Signature;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateFactory;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">CertificateFactory</span> <span class="variable">certificateFactory</span> <span class="operator">=</span> CertificateFactory.getInstance(<span class="string">&quot;X.509&quot;</span>);</span><br><span class="line">        <span class="type">X509Certificate</span> <span class="variable">cert</span> <span class="operator">=</span> (X509Certificate) certificateFactory.generateCertificate(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;ca.crt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自己修改 license内容</span></span><br><span class="line">        <span class="comment">// 注意licenseId要一致</span></span><br><span class="line">        <span class="comment">// 里面的内容是激活webstorm</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">licensePart</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;licenseId\&quot;:\&quot;MOUGH5FKDV\&quot;,\&quot;licenseeName\&quot;:\&quot;haha\&quot;,\&quot;assigneeName\&quot;:\&quot;novice.li\&quot;,\&quot;assigneeEmail\&quot;:\&quot;\&quot;,\&quot;licenseRestriction\&quot;:\&quot;\&quot;,\&quot;checkConcurrentUse\&quot;:false,\&quot;products\&quot;:[&#123;\&quot;code\&quot;:\&quot;PCWMP\&quot;,\&quot;fallbackDate\&quot;:\&quot;2026-09-14\&quot;,\&quot;paidUpTo\&quot;:\&quot;2026-09-14\&quot;,\&quot;extended\&quot;:true&#125;,&#123;\&quot;code\&quot;:\&quot;PSI\&quot;,\&quot;fallbackDate\&quot;:\&quot;2026-09-14\&quot;,\&quot;paidUpTo\&quot;:\&quot;2026-09-14\&quot;,\&quot;extended\&quot;:true&#125;,&#123;\&quot;code\&quot;:\&quot;WS\&quot;,\&quot;fallbackDate\&quot;:\&quot;2026-09-14\&quot;,\&quot;paidUpTo\&quot;:\&quot;2026-09-14\&quot;,\&quot;extended\&quot;:false&#125;],\&quot;metadata\&quot;:\&quot;0120230914PSAX000005\&quot;,\&quot;hash\&quot;:\&quot;TRIAL:-1920204289\&quot;,\&quot;gracePeriodDays\&quot;:7,\&quot;autoProlongated\&quot;:false,\&quot;isAutoProlongated\&quot;:false&#125;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">licenseId</span> <span class="operator">=</span> <span class="string">&quot;MOUGH5FKDV&quot;</span>;</span><br><span class="line">        <span class="type">byte</span>[] licensePartBytes = licensePart.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">        <span class="type">String</span> <span class="variable">licensePartBase64</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(licensePartBytes);</span><br><span class="line"></span><br><span class="line">        <span class="type">PrivateKey</span> <span class="variable">privateKey</span> <span class="operator">=</span> getPrivateKey();</span><br><span class="line"></span><br><span class="line">        <span class="type">Signature</span> <span class="variable">signature</span> <span class="operator">=</span> Signature.getInstance(<span class="string">&quot;SHA1withRSA&quot;</span>);</span><br><span class="line">        signature.initSign(privateKey);</span><br><span class="line">        signature.update(licensePartBytes);</span><br><span class="line">        <span class="type">byte</span>[] signatureBytes = signature.sign();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">sigResultsBase64</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(signatureBytes);</span><br><span class="line"><span class="comment">//        verify</span></span><br><span class="line"><span class="comment">//        Signature verifySignature = Signature.getInstance(&quot;SHA1withRSA&quot;);</span></span><br><span class="line"><span class="comment">//        verifySignature.initVerify(cert.getPublicKey());</span></span><br><span class="line"><span class="comment">//        verifySignature.update(Base64.getDecoder().decode(licensePartBase64));</span></span><br><span class="line"><span class="comment">//        boolean verify = verifySignature.verify(Base64.getDecoder().decode(sigResultsBase64));</span></span><br><span class="line"><span class="comment">//        System.out.println(verify);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Combine results as needed</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> licenseId + <span class="string">&quot;-&quot;</span> + licensePartBase64 + <span class="string">&quot;-&quot;</span> + sigResultsBase64 + <span class="string">&quot;-&quot;</span> + Base64.getEncoder().encodeToString(cert.getEncoded());</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> PrivateKey <span class="title function_">getPrivateKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Security.addProvider(<span class="keyword">new</span> <span class="title class_">BouncyCastleProvider</span>());</span><br><span class="line">        <span class="type">PEMParser</span> <span class="variable">pemParser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PEMParser</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;ca.key&quot;</span>));</span><br><span class="line">        <span class="type">JcaPEMKeyConverter</span> <span class="variable">converter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JcaPEMKeyConverter</span>().setProvider(<span class="string">&quot;BC&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> pemParser.readObject();</span><br><span class="line">        <span class="type">KeyPair</span> <span class="variable">kp</span> <span class="operator">=</span> converter.getKeyPair((PEMKeyPair) object);</span><br><span class="line">        <span class="keyword">return</span> kp.getPrivate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里需要一个第三方的库</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcpkix-jdk18on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.72<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcprov-jdk18on<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.72<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>执行main方法,因该能得到类似以下内容, 证书不同, <strong>licensePart</strong>不同,所以内容每个人都不一样使用的jdk是OpenJdk17</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOUGH5FKDV-eyJsaWNlbnNlSWQiOiJNT1VHSDVGS0RWIiwibGljZW5zZWVOYW1lIjoiaGFoYSIsImFzc2lnbmVlTmFtZSI6Im5vdmljZS5saSIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyNi0wOS0xNCIsInBhaWRVcFRvIjoiMjAyNi0wOS0xNCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI2LTA5LTE0IiwicGFpZFVwVG8iOiIyMDI2LTA5LTE0IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjAyNi0wOS0xNCIsInBhaWRVcFRvIjoiMjAyNi0wOS0xNCIsImV4dGVuZGVkIjpmYWxzZX1dLCJtZXRhZGF0YSI6IjAxMjAyMzA5MTRQU0FYMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi0xOTIwMjA0Mjg5IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-EtkxIjIOL6nbRjpnwjn3xoS5ch3k/gMZMFZ8/oqxIqNhlwDsQajZw/UASlLpd3t6tWRqefL4kucMfpNyUEPbwe3jcA0cbE7bD7wj1O2UUCTBDpCTY3Hh57dgdkvYIizIaqdFFay7GtQf46ltXraYt3YUpiQfx0ferOR9tDdg1zgL2n0vxLtlChYAMvBo2yMnyMvAS490tQu4c5Oi87KNcTWmUihL6oiDIv1a2/DaMYpKY10PvAENwfq0wuQtWQqrb1azF1LIziratnBY0AfpMOb6HMIYf0iPGMCyYcwmyDfQ5nM5gKnip9V8gsyQFX+Ja4dzDbEoRt5AavvShbYJjYTB8RCXWuLW6uLhoaJJMKK5VWDNPwqd2iL4cRWmXLVOM6IDdtP0asLVjgfugbr7NYHZepfhQhgPCZrJR4MeLbYtdJakDwI+JBim7gSlYDJi8DNxXl5qvnzTL9oS66zwvx84E5KNCePC08MkUVallELohQpcs7pt8CfRPsqTJpSDMS/h3aTvhLOVLCY5zCXc2G1bmh6HdDYWPvbhU4uiGlWcqTiBVjUo324tO0085yU40VUk6S4QL+Q69HX1i13k43saaDg1OirnLY7pGq6bgW6fqALqVrrOgjy4Pkhwyzx/hJWTqxcY1kHFyqIFpWT/lWJ8shpU/Lp0NTQ6OIDe4Ag=-MIIExTCCAq2gAwIBAgIUONPn09E4/d2ARDMbTgtVdG78L5owDQYJKoZIhvcNAQELBQAwGDEWMBQGA1UEAwwNSmV0UHJvZmlsZSBDQTAeFw0yMzA5MjIxMjI3NTRaFw0zMzA5MjAxMjI3NTRaMCExHzAdBgNVBAMMFk1vWXVuby1mcm9tLTIwMjItMDctMjUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgoO4tub6olCRbJ38I0K4kWr+suajcuwTDbrAvWqkNTt3U1SWArWQa7s6QJfKAAFVKEQpFW2eu861YLC8GUVKKZS4ol9dihVy+Zp7ThUuSkz64d9kwQ4/5JwKEAW51fWORHbjs3dhdShAq9tmuOGohi0KjBhkTzeKpTMa2k/TlxHD0pwdVDEQygQ02+ddCkSuozF/9/mzafG2RB6iYiKld7vUs68n2FVotktpN2eGrXv72nenuQLKVT7ecXNT0m6KzY6+aelAFqeSUhnyqVe9Zm0oPIPL9QAJXmjUpzyw6vu2ZYkCoJcGjtogs9uilqlOaKGFQc1OGxuoQhOerBOZm6n93YIobjr5RwRb0img6AtkknFsXoUKNHxAGu8iCFlRGykWU5K+h+/NRd7JAO2AAMv2Qa5CwG+wcc1YXZQejL7YkBTw70zUI3107on2n4KTbtNYpdwccqAjWcdycG4eekBMxGDGKS43aH1adT54ICQsm8jsq5/zTg/8PR4PBG/jXyUGR0JRlwy14aWyJwaLIdscDGU3S6nfM8f2mtchKnDySzkn17FucNkW9nXbV979WsxX+TPX3y/vNAQzM04z+6Vjfp/1AIFu+LC0VaOhbI1yqYZOvUdQX5XyhZ6N/rCFj6Hsv4fuCVCTMuSs/qGS83js6LVxd9ZygRlhcc8YL7wIDAQABMA0GCSqGSIb3DQEBCwUAA4ICAQAI3XgTh8LKomEU8T0Zd2fYjT7I/XdNgY3KvW/DzsdG6A0wRlijwA74aWcD7N/Rrrz9vObI1PUMUbJzUwwcHu6ZvlL0f23QRu4oXASEVuU34QYDIY5/1nMaFyjLKGrXfctz9+qXnn/admaiUVj81jroLKbHFoAga9I2i987fwaVnG1CwDOIkG54xwvCT34M3d7sxEUZwSI/+yMS3JVG19kOqf16KBar5WlZcSYA+rd01RfuBKW4ciu5VplAoKBfU6QOeh5SfQdoG8cxUHI5KBUWzhDUZo8TK5donK8ZQs5Pka5mWLCAWW6gq+9JzCeEFxyscr8pTMWegQpEQG6B8ULtMuT69DTx6RRQzwDe9oQAzZqqAjnuiLr87y6IKKwRaZe3zqsMkdqnEslDOMFuYZce4vGyYZr5vx5774kjIv3AvCowx8O6UMOhJgi7aDnEbTdF3AswUg3fGGsMwujKY6VLMzzIJ8i6P+X3Abdb51hr0hEimWnbBIi4Vdg9Ga6sLR+gAr4PAy/LX2tfxTfIryehcC12C5s2uMDtoHPi5MtQZ7ZLDj7F1opGd4RjEtdAuA81e+usCPbpc2A9DLEFTzqJCxmbhd4obzlj75Bb2ih83MeJwvlhNl3oLb89Ur05VyF/XF5vWdtFA7EOx7Tb/s5Vv4N5PptsDX8jjFNdTrbByA==</span><br></pre></td></tr></table></figure>

<h2 id="实现agent"><a href="#实现agent" class="headerlink" title="实现agent"></a>实现agent</h2><p>不借助第三方库实现agent过于麻烦,这里使用了bytebuddy</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.bytebuddy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>byte-buddy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.14.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.bytebuddy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>byte-buddy-agent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.14.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="agent入口"><a href="#agent入口" class="headerlink" title="agent入口"></a>agent入口</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAgent</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">premain</span><span class="params">(String agentArgs, Instrumentation inst)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;premain&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">AgentBuilder</span> <span class="variable">agentBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AgentBuilder</span>.Default()</span><br><span class="line">                .with(AgentBuilder.RedefinitionStrategy.RETRANSFORMATION)</span><br><span class="line">                .with(AgentBuilder.InitializationStrategy.NoOp.INSTANCE)</span><br><span class="line">                .with(AgentBuilder.TypeStrategy.Default.REDEFINE)</span><br><span class="line">                .ignore(ElementMatchers.nameStartsWith(<span class="string">&quot;net.bytebuddy.&quot;</span>));</span><br><span class="line"><span class="comment">//                .with(new MyAgentListener());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使得证书验证通过</span></span><br><span class="line">        agentBuilder.type(ElementMatchers.named(<span class="string">&quot;java.math.BigInteger&quot;</span>))</span><br><span class="line">                .transform((builder, typeDescription, classLoader, <span class="keyword">module</span>, protectionDomain) -&gt; builder</span><br><span class="line">                        .visit(Advice.to(BigIntegerAdvice.class)</span><br><span class="line">                                .on(ElementMatchers.named(<span class="string">&quot;oddModPow&quot;</span>))))</span><br><span class="line">                .installOn(inst);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使得软件无法联查询license是否有效</span></span><br><span class="line">        agentBuilder.type(ElementMatchers.named(<span class="string">&quot;sun.net.www.http.HttpClient&quot;</span>))</span><br><span class="line">                .transform((builder, typeDescription, classLoader, <span class="keyword">module</span>, protectionDomain) -&gt; builder</span><br><span class="line">                        .visit(Advice.to(HttpClientAdvice.class)</span><br><span class="line">                                .on(ElementMatchers.named(<span class="string">&quot;openServer&quot;</span>))))</span><br><span class="line">                .installOn(inst);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="BigInteger字节码修改"><a href="#BigInteger字节码修改" class="headerlink" title="BigInteger字节码修改"></a>BigInteger字节码修改</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BigIntegerAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Advice</span>.OnMethodExit</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">intercept</span><span class="params">(</span></span><br><span class="line"><span class="params">            <span class="meta">@Advice</span>.This Object x,</span></span><br><span class="line"><span class="params">            <span class="meta">@Advice</span>.Argument(<span class="number">0</span>)</span> Object y,</span><br><span class="line">            <span class="meta">@Advice</span>.Argument(<span class="number">1</span>) Object z,</span><br><span class="line">            <span class="meta">@Advice</span>.Return(readOnly = <span class="literal">false</span>, typing = Assigner.Typing.DYNAMIC) Object result) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.equals(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;36166507575254258312547027941858871437580810141594337200634531192709271990549138017653139428637214469518776226512514369004499289847036817469920968543987282718805757210373621424125369064930654976403697173880331936585809803551274383021052688245707534952529753956318732372398693865515682072768749358719639235133806071855621596884699396908937096538670823305390763889445915414212661834406474645084286972757261296942320901075450730996142655451199555878429717483753245244508608163955616875622042555910407980521229778591975259177464788366985872288786334747203093703957973287632789434327641599787000549866966192526794523855683888490599956338743423054243358140301110599656608543763370035640069620948490016119875557306188027723775640833530499501378515276585419289699580465617070710428011530935063840014105253697311418321548680810054175037350220973183173395413388108134009666677350116213765976505112039029245857777643312281864634007579756549926726103948406693982258504228622481891671878799710903090844117319488904013303198514270837678342521608616094938912551751797776393327428080770304213598190322505916651401618610161692299082137461123669656196926798832696434348431060443898249477064062856464545081431225728688735741916845932153841685712257480&quot;</span>)))&#123;</span><br><span class="line">            <span class="keyword">if</span> (y.equals(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;65537&quot;</span>)))&#123;</span><br><span class="line">                <span class="keyword">if</span> (z.equals(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quotquot;</span>)))&#123;</span><br><span class="line">                    result = <span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;31872219281407242025505148642475109331663948030010491344733687844358944945421064967310388547820970408352359213697487269225694990179009814674781374751323403257628081559561462351695605167675284372388551941279783515209238245831229026662363729380633136520288327292047232179909791526492877475417113579821717193807584807644097527647305469671333646868883650312280989663788656507661713409911267085806708237966730821529702498972114194166091819277582149433578383639532136271637219758962252614390071122773223025154710411681628917523557526099053858210363406122853294409830276270946292893988830514538950951686480580886602618927728470029090747400687617046511462665469446846624685614084264191213318074804549715573780408305977947238915527798680393538207482620648181504876534152430149355791756374642327623133843473947861771150672096834149014464956451480803326284417202116346454345929350148770746553056995922154382822307758515805142704373984019252210715650875853634697920708113806880196144197384637328982263167395073688501517286678083973976140696077590122053014085412828620051470085033364773099146103525313018873319293728800442101520384088109603555959893639842091339193908358622712857369348954116918063496396334792107628357445854420445133725500867&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上面的几个大数字是由我们生成的证书计算来的,后面会给出计算代码,并作出解释</p>
<h3 id="HttpClient字节码修改"><a href="#HttpClient字节码修改" class="headerlink" title="HttpClient字节码修改"></a>HttpClient字节码修改</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientAdvice</span> &#123;</span><br><span class="line">    <span class="meta">@Advice</span>.OnMethodExit</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">intercept</span><span class="params">(<span class="meta">@Advice</span>.This Object x)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.toString().contains(<span class="string">&quot;validateKey.action&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SocketTimeoutException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="maven打包配置"><a href="#maven打包配置" class="headerlink" title="maven打包配置"></a>maven打包配置</h3><p>记得修改pom的打包配置, 记得修改配置里的包名,改成你自己的</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Premain-Class</span>&gt;</span>win.novice.li.MyAgent<span class="tag">&lt;/<span class="name">Premain-Class</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Can-Redefine-Classes</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Can-Redefine-Classes</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Can-Retransform-Classes</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Can-Retransform-Classes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">manifestEntries</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>single<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用生成的激活码"><a href="#使用生成的激活码" class="headerlink" title="使用生成的激活码"></a>使用生成的激活码</h3><p>编辑打包</p>
<p>给webstorm的jvm配置加上下面的参数</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br><span class="line"></span><br><span class="line">-javaagent:/home/novice/work/jetbrains/java/myagent/target/myagent-1.0.0.jar</span><br></pre></td></tr></table></figure>

<p>其中javaAgent的路径需要修改成你们自己打包后存放的路径,启动再输入生成的激活码</p>
<h3 id="BigIntegerAdvice-中的几个数字是如何生成-这段代码为什么是这样"><a href="#BigIntegerAdvice-中的几个数字是如何生成-这段代码为什么是这样" class="headerlink" title="BigIntegerAdvice 中的几个数字是如何生成,这段代码为什么是这样?"></a>BigIntegerAdvice 中的几个数字是如何生成,这段代码为什么是这样?</h3><p>对证书验证其实就是验证证书中携带的签名是否和jetbains计算的签名是否一致，jetbrains会使用其内置根证书z尝试对签名解密，即计算：<code>x.modpow(y,z)</code>（具体的签名验签原理可以看<code>RSA加密&amp;签名</code>），但是这里的证书不是由jetbrains签发，所以要替换计算的结果</p>
<p>x：证书的签名密文</p>
<p>y：证书指数 固定 65535</p>
<p>z：内置根证书的公钥,文章最开始验证激活码的demo代码里硬编码的</p>
<p>r : 对 DER 编码的证书信息(即来自该证书的tbsCertificate) 进行sha265摘要计算，计算的结果转换为ASN1格式数据，ASN1格式数据再进行填充得到的</p>
<p>当检测到使用<code>modpow</code>方法解密我们证书的签名时,返回r,这样idea再对r做一些计算得到的值等于证书信息的sha265摘要,idea就会认为可信的证书,下面是<code>sun.security.rsa.RSASignature</code>的验签实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">engineVerify</span><span class="params">(<span class="type">byte</span>[] sigBytes)</span> <span class="keyword">throws</span> SignatureException &#123;</span><br><span class="line">    <span class="comment">// sigBytes 即我们自己生成的证书的签名</span></span><br><span class="line">    <span class="keyword">if</span> (publicKey == <span class="literal">null</span>) &#123; <span class="comment">// 使用根证书的公钥进行解密</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SignatureException</span>(<span class="string">&quot;Missing public key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (sigBytes.length != RSACore.getByteLength(publicKey)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SignatureException</span>(<span class="string">&quot;Signature length not correct: got &quot;</span> +</span><br><span class="line">                    sigBytes.length + <span class="string">&quot; but was expecting &quot;</span> +</span><br><span class="line">                    RSACore.getByteLength(publicKey));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对 DER 编码的证书信息 进行 sha256 得到摘要</span></span><br><span class="line">        <span class="type">byte</span>[] digest = getDigestValue();</span><br><span class="line">        <span class="comment">// 使用公钥进行解密 底层使用了oddModPow 这也是我们修改的地方</span></span><br><span class="line">        <span class="type">byte</span>[] decrypted = RSACore.rsa(sigBytes, publicKey);</span><br><span class="line">        <span class="comment">// 去除补齐  所以在计算 r 的时候需要我们进行补齐</span></span><br><span class="line">        <span class="type">byte</span>[] unpadded = padding.unpad(decrypted);</span><br><span class="line">        <span class="comment">// 解码 DER-encoded 信息 得到摘要 所以在计算 r 的时候需要我们进行DER-encoded</span></span><br><span class="line">        <span class="type">byte</span>[] decodedDigest = decodeSignature(digestOID, unpadded);</span><br><span class="line">        <span class="keyword">return</span> MessageDigest.isEqual(digest, decodedDigest);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (javax.crypto.BadPaddingException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SignatureException</span>(<span class="string">&quot;Signature encoding error&quot;</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        resetDigest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是计算 <code>x</code> <code>y</code> <code>z</code> <code>r</code> 的代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateFactory;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPublicKey;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XYZR</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROOT_CERTIFICATE</span> <span class="operator">=</span> <span class="string">&quot;-----BEGIN CERTIFICATE-----\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;MIIFOzCCAyOgAwIBAgIJANJssYOyg3nhMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNV\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;BAMMDUpldFByb2ZpbGUgQ0EwHhcNMTUxMDAyMTEwMDU2WhcNNDUxMDI0MTEwMDU2\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;WjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMIICIjANBgkqhkiG9w0BAQEFAAOC\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;Ag8AMIICCgKCAgEA0tQuEA8784NabB1+T2XBhpB+2P1qjewHiSajAV8dfIeWJOYG\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;y+ShXiuedj8rL8VCdU+yH7Ux/6IvTcT3nwM/E/3rjJIgLnbZNerFm15Eez+XpWBl\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;m5fDBJhEGhPc89Y31GpTzW0vCLmhJ44XwvYPntWxYISUrqeR3zoUQrCEp1C6mXNX\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;EpqIGIVbJ6JVa/YI+pwbfuP51o0ZtF2rzvgfPzKtkpYQ7m7KgA8g8ktRXyNrz8bo\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;iwg7RRPeqs4uL/RK8d2KLpgLqcAB9WDpcEQzPWegbDrFO1F3z4UVNH6hrMfOLGVA\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;xoiQhNFhZj6RumBXlPS0rmCOCkUkWrDr3l6Z3spUVgoeea+QdX682j6t7JnakaOw\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;jzwY777SrZoi9mFFpLVhfb4haq4IWyKSHR3/0BlWXgcgI6w6LXm+V+ZgLVDON52F\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;LcxnfftaBJz2yclEwBohq38rYEpb+28+JBvHJYqcZRaldHYLjjmb8XXvf2MyFeXr\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;SopYkdzCvzmiEJAewrEbPUaTllogUQmnv7Rv9sZ9jfdJ/cEn8e7GSGjHIbnjV2ZM\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;Q9vTpWjvsT/cqatbxzdBo/iEg5i9yohOC9aBfpIHPXFw+fEj7VLvktxZY6qThYXR\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;Rus1WErPgxDzVpNp+4gXovAYOxsZak5oTV74ynv1aQ93HSndGkKUE/qA/JECAwEA\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;AaOBhzCBhDAdBgNVHQ4EFgQUo562SGdCEjZBvW3gubSgUouX8bMwSAYDVR0jBEEw\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;P4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2Zp\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;bGUgQ0GCCQDSbLGDsoN54TAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkq\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;hkiG9w0BAQsFAAOCAgEAjrPAZ4xC7sNiSSqh69s3KJD3Ti4etaxcrSnD7r9rJYpK\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;BMviCKZRKFbLv+iaF5JK5QWuWdlgA37ol7mLeoF7aIA9b60Ag2OpgRICRG79QY7o\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;uLviF/yRMqm6yno7NYkGLd61e5Huu+BfT459MWG9RVkG/DY0sGfkyTHJS5xrjBV6\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;hjLG0lf3orwqOlqSNRmhvn9sMzwAP3ILLM5VJC5jNF1zAk0jrqKz64vuA8PLJZlL\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;S9TZJIYwdesCGfnN2AETvzf3qxLcGTF038zKOHUMnjZuFW1ba/12fDK5GJ4i5y+n\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;fDWVZVUDYOPUixEZ1cwzmf9Tx3hR8tRjMWQmHixcNC8XEkVfztID5XeHtDeQ+uPk\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;X+jTDXbRb+77BP6n41briXhm57AwUI3TqqJFvoiFyx5JvVWG3ZqlVaeU/U9e0gxn\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;8qyR+ZA3BGbtUSDDs8LDnE67URzK+L+q0F2BC758lSPNB2qsJeQ63bYyzf0du3wB\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;/gb2+xJijAvscU3KgNpkxfGklvJD/oDUIqZQAnNcHe7QEf8iG2WqaMJIyXZlW3me\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;0rn+cgvxHPt6N4EBh5GgNZR4l0eaFEV+fxVsydOQYo1RIyFMXtafFBqQl6DDxujl\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;FeU3FZ+Bcp12t7dlM4E0/sS1XdL47CfGVj4Bp+/VbF862HmkAbd7shs7sDQkHbU=\n&quot;</span> +</span><br><span class="line">            <span class="string">&quot;-----END CERTIFICATE-----\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>  <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">CertificateFactory</span> <span class="variable">certificateFactory</span> <span class="operator">=</span> CertificateFactory.getInstance(<span class="string">&quot;X.509&quot;</span>);</span><br><span class="line">        <span class="type">X509Certificate</span> <span class="variable">cert</span> <span class="operator">=</span>  (X509Certificate)certificateFactory.generateCertificate(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;ca.crt&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// x：证书的签名密文</span></span><br><span class="line">        System.out.println(<span class="string">&quot;x：证书的签名密文&quot;</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(cert.getSignature()));</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// y：证书指数 固定 65535</span></span><br><span class="line">        System.out.println(<span class="string">&quot;y：证书指数 固定65535&quot;</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(<span class="string">&quot;65535&quot;</span>));</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// z：内置根证书的公钥</span></span><br><span class="line">        <span class="type">X509Certificate</span> <span class="variable">rootCertificate</span> <span class="operator">=</span> (X509Certificate) certificateFactory.generateCertificate(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(ROOT_CERTIFICATE.getBytes(StandardCharsets.UTF_8)));</span><br><span class="line">        <span class="type">RSAPublicKey</span> <span class="variable">publicKey</span> <span class="operator">=</span> (RSAPublicKey)rootCertificate.getPublicKey();</span><br><span class="line">        System.out.println(<span class="string">&quot;z：内置根证书的公钥&quot;</span>);</span><br><span class="line">        System.out.println(publicKey.getModulus());</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对 DER 编码的证书信息(即来自该证书的tbsCertificate) 进行sha265摘要计算，计算的结果转换为ASN1格式数据，ASN1格式数据再进行填充得到的</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">modBits</span> <span class="operator">=</span> ((RSAPublicKey)cert.getPublicKey()).getModulus().bitLength();</span><br><span class="line">        <span class="type">int</span> <span class="variable">emLen</span> <span class="operator">=</span> (modBits + <span class="number">7</span>) / <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// sha256 进行摘要</span></span><br><span class="line">        <span class="type">MessageDigest</span> <span class="variable">digest</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;SHA-256&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] tbsCertificateBytes = cert.getTBSCertificate();</span><br><span class="line">        <span class="type">byte</span>[] digestBytes = digest.digest(tbsCertificateBytes);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// DER-encoded</span></span><br><span class="line">        <span class="type">byte</span>[] digestAlgo = <span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;<span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x30</span>, <span class="number">0x0d</span>, <span class="number">0x06</span>, <span class="number">0x09</span>, <span class="number">0x60</span>, (<span class="type">byte</span>) <span class="number">0x86</span>, <span class="number">0x48</span>, <span class="number">0x01</span>, (<span class="type">byte</span>) <span class="number">0x65</span>, <span class="number">0x03</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x20</span>&#125;;</span><br><span class="line">        <span class="type">byte</span>[] digestInfo = <span class="keyword">new</span> <span class="title class_">byte</span>[digestAlgo.length + digestBytes.length];</span><br><span class="line">        System.arraycopy(digestAlgo, <span class="number">0</span>, digestInfo, <span class="number">0</span>, digestAlgo.length);</span><br><span class="line">        System.arraycopy(digestBytes, <span class="number">0</span>, digestInfo, digestAlgo.length, digestBytes.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 补齐</span></span><br><span class="line">        <span class="type">byte</span>[] ps = <span class="keyword">new</span> <span class="title class_">byte</span>[emLen - digestInfo.length - <span class="number">3</span>];</span><br><span class="line">        Arrays.fill(ps, (<span class="type">byte</span>) <span class="number">0xFF</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构造最终的结果</span></span><br><span class="line">        <span class="type">byte</span>[] encoded = <span class="keyword">new</span> <span class="title class_">byte</span>[emLen];</span><br><span class="line">        encoded[<span class="number">0</span>] = <span class="number">0x00</span>;</span><br><span class="line">        encoded[<span class="number">1</span>] = <span class="number">0x01</span>;</span><br><span class="line">        System.arraycopy(ps, <span class="number">0</span>, encoded, <span class="number">2</span>, ps.length);</span><br><span class="line">        encoded[ps.length + <span class="number">2</span>] = <span class="number">0x00</span>;</span><br><span class="line">        System.arraycopy(digestInfo, <span class="number">0</span>, encoded, ps.length + <span class="number">3</span>, digestInfo.length);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;r：对DER 编码的证书信息(即来自该证书的tbsCertificate) 进行sha265摘要计算，计算的结果转换为ASN1格式数据，ASN1格式数据再进行填充得到的&quot;</span>);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BigInteger</span>(encoded));</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://zhile.io/2021/11/29/ja-netfilter-javaagent-lib.html">介绍一个”牛逼闪闪”开源库：ja-netfilter</a></p>
<p><a href="https://xuzhengtong.com/2022/07/25/ja-netfilter/ja-netfilter-plugins-power/">ja-netfilter power插件原理</a></p>
<p><a href="https://bbs.kanxue.com/thread-271052.htm">注册码证书验证过程</a></p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件?"></a>插件?</h1><p>插件的破解其实是一模一样的,当你配置好agent后,使用激活码生成工具,修改licensePart中的<code>products.code</code>为插件的<code>code</code>即可</p>
<h2 id="idea-所需-code"><a href="#idea-所需-code" class="headerlink" title="idea 所需 code"></a>idea 所需 code</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;licenseeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your licenseeName&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;assigneeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your assigneeName&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;products&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;II&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PSI&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PCWMP&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fallbackDate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;paidUpTo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2999-08-19&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="jetbrains产品列表"><a href="#jetbrains产品列表" class="headerlink" title="jetbrains产品列表"></a><a href="https://data.services.jetbrains.com/products?fields=code,name,description">jetbrains产品列表</a></h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RSCLT&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper Command Line Tools&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper Command Line Tools&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YTWE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Youtrack Workflow Editor&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Youtrack Workflow Editor&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DG&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataGrip&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The IDE for databases and SQL&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PhpStorm&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A smart IDE for PHP and Web&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLN&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLion Nova&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLion Nova preview, a faster IDE for C and C++&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RRD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Rider Remote Debugger&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tools for Remote Debugging in Rider&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SPA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Space Desktop&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A complete software development platform&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CWMR&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code With Me Relay&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Relay Server for Code With Me&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Datalore&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A collaborative data science platform&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YTD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YouTrack&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Issue tracker designed for development teams&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DM&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotMemory&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET memory profiler&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CWML&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code With Me Lobby&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lobby Server for Code With Me&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotTrace&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET performance profiler&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DataSpell&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The IDE for data analysis&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aqua&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A powerful IDE for test automation&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;EHS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ETW Host Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Event Tracing for Windows&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MPS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MPS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An IDE for DSL development&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SPP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Space On-Premises&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The integrated team environment&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TBA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Toolbox App&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A control panel for your tools and projects&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RDCPPP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Rider for Unreal Engine&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Smart C++ and Blueprints support to craft the best games&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MF&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mono Font&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A free and open source typeface for developers&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDJVM&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for JVM&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DPCLT&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotTrace Command Line Tools&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotTrace Command Line Tools&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDCLD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana Cloud&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDGO&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for Go&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;US&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Upsource&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Code review and repository browsing&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDNET&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for .NET&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RFU&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RiderFlow for Unity&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A plugin for Unity Editor from JetBrains&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AppCode&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A smart IDE for iOS and macOS&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IIC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IntelliJ IDEA Community Edition&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The IDE for Java and Kotlin enthusiasts&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IIE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IntelliJ IDEA Edu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An educational IDE for coding&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HCC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HTTP Client CLI&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Run Requests and Tests on CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JCD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrains Clients Downloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Download JetBrains Clients for Code With Me and Remote Development&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IDES&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IDE Services&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A centralized way to provision IntelliJ-based IDEs to your developers’ machines, securely and consistently, across your entire organization.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DPPS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotTrace Profiling SDK&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotTrace Profiling SDK&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PCC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PyCharm Community Edition&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The pure Python IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper C++&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Visual Studio extension for C++ developers&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Rider&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A cross-platform .NET IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PCE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PyCharm Edu&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An educational IDE for Python&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IIU&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IntelliJ IDEA Ultimate&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The Leading Java and Kotlin IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RSU&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper Tools&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;All individual .NET tools combined in one license&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TCC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TeamCity Cloud&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Powerful Continuous Integration out of the box&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RSCHB&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper Checked builds&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper Checked builds&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDJS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for JS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RM&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RubyMine&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A Ruby and Rails IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DLE&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Datalore Enterprise&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Online Jupyter notebooks&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DMCLP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotMemory Command Line Profiler&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotMemory Command Line Profiler&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PCP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PyCharm Professional Edition&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The full-stack Python IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DPK&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotPeek&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET decompiler&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RR&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RustRover&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A powerful IDE for Rust&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;RS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ReSharper&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Visual Studio extensions&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fleet&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The next-generation IDE by JetBrains&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FLIJ&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fleet Backend&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fleet Backend based on IntelliJ platform&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FLL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fleet Launcher&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Launcher of Fleet workspace for remote use-cases&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FLS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Floating License Server&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Application to manage JetBrains product licenses within your company network&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MPSIIP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MPS IntelliJ IDEA plugin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MPS IntelliJ IDEA plugin&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WRS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Writerside&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Documentation authoring IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WS&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WebStorm&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A JavaScript and TypeScript IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Space Cloud&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The integrated team environment&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GO&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GoLand&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;An IDE for Go and Web&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CL&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLion&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A cross-platform C and C++ IDE&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;KT&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Kotlin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Statically typed programming language for the JVM, Android and the browser&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDANDC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana Community for Android&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDJVMC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana Community for JVM&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DMU&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotMemory Unit&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unit testing framework for monitoring .NET memory usage&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;TeamCity&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Powerful Continuous Integration out of the box&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GW&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Gateway&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A remote development hub&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDPHP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for PHP&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DCCLT&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotCover Command Line Tools&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET unit test runner and code coverage tool&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDPYC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana Community for Python&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QDPY&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qodana for Python&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The code quality platform for your favorite CI&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HB&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hub&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrains team tools, integrated&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotCover&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.NET unit test runner and code coverage tool&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<h1 id="仅供学习交流使用"><a href="#仅供学习交流使用" class="headerlink" title="仅供学习交流使用"></a><strong>仅供学习交流使用</strong></h1><p><strong>以上仅供学习交流使用!!!</strong></p>
<p><strong>以上仅供学习交流使用!!!</strong></p>
<p><strong>以上仅供学习交流使用!!!</strong></p>
]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
</search>
